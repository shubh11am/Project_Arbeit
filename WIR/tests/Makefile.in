# Makefile.in generated by automake 1.16.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2018 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

#
# Targets to build
#

#.SILENT:
VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
check_PROGRAMS = wirAssert1.bin$(EXEEXT) wirAssert2.bin$(EXEEXT) \
	wirAssertT1.bin$(EXEEXT) wirAssertT2.bin$(EXEEXT) \
	wirBasicBlock1.bin$(EXEEXT) wirBasicBlock2.bin$(EXEEXT) \
	wirBasicBlock3.bin$(EXEEXT) wirBasicBlock4.bin$(EXEEXT) \
	wirBasicBlock5.bin$(EXEEXT) wirBasicBlock6.bin$(EXEEXT) \
	wirBit1.bin$(EXEEXT) wirBit2.bin$(EXEEXT) wirBit3.bin$(EXEEXT) \
	wirBit4.bin$(EXEEXT) wirBit5.bin$(EXEEXT) \
	wirCompilationUnit1.bin$(EXEEXT) \
	wirCompilationUnit2.bin$(EXEEXT) \
	wirCompilationUnit3.bin$(EXEEXT) \
	wirCompilationUnit4.bin$(EXEEXT) wirContainer1.bin$(EXEEXT) \
	wirContainer2.bin$(EXEEXT) wirDFS1.bin$(EXEEXT) \
	wirDFS2.bin$(EXEEXT) wirData1.bin$(EXEEXT) \
	wirEmptyBlocks1.bin$(EXEEXT) wirFlowFact1.bin$(EXEEXT) \
	wirFlowFact2.bin$(EXEEXT) wirFlowFact3.bin$(EXEEXT) \
	wirFlowFact4.bin$(EXEEXT) wirFlowFact5.bin$(EXEEXT) \
	wirFlowFact6.bin$(EXEEXT) wirFlowFact7.bin$(EXEEXT) \
	wirFlowFact8.bin$(EXEEXT) wirFlowFact9.bin$(EXEEXT) \
	wirFlowFact10.bin$(EXEEXT) wirFunction1.bin$(EXEEXT) \
	wirFunction2.bin$(EXEEXT) wirFunction3.bin$(EXEEXT) \
	wirFunction4.bin$(EXEEXT) wirFunction5.bin$(EXEEXT) \
	wirFunction6.bin$(EXEEXT) wirFunction7.bin$(EXEEXT) \
	wirFunction8.bin$(EXEEXT) wirFunction9.bin$(EXEEXT) \
	wirFunction10.bin$(EXEEXT) wirFunction11.bin$(EXEEXT) \
	wirFunction12.bin$(EXEEXT) wirFunction13.bin$(EXEEXT) \
	wirFunction14.bin$(EXEEXT) wirInstruction1.bin$(EXEEXT) \
	wirInstruction2.bin$(EXEEXT) wirInstruction3.bin$(EXEEXT) \
	wirInstruction4.bin$(EXEEXT) wirLabelParameter1.bin$(EXEEXT) \
	wirLabelParameter2.bin$(EXEEXT) \
	wirLabelParameter3.bin$(EXEEXT) wirList1.bin$(EXEEXT) \
	wirList2.bin$(EXEEXT) wirList3.bin$(EXEEXT) \
	wirList4.bin$(EXEEXT) wirList5.bin$(EXEEXT) \
	wirList6.bin$(EXEEXT) wirList7.bin$(EXEEXT) \
	wirList10.bin$(EXEEXT) wirList11.bin$(EXEEXT) \
	wirList12.bin$(EXEEXT) wirList13.bin$(EXEEXT) \
	wirList14.bin$(EXEEXT) wirList15.bin$(EXEEXT) \
	wirList16.bin$(EXEEXT) wirOperation1.bin$(EXEEXT) \
	wirOperation2.bin$(EXEEXT) wirOperation3.bin$(EXEEXT) \
	wirOperation4.bin$(EXEEXT) wirOperation5.bin$(EXEEXT) \
	wirOperation6.bin$(EXEEXT) wirOperation7.bin$(EXEEXT) \
	wirOperation8.bin$(EXEEXT) wirParameter1.bin$(EXEEXT) \
	wirParameter2.bin$(EXEEXT) wirParameter3.bin$(EXEEXT) \
	wirParameter4.bin$(EXEEXT) wirParameter5.bin$(EXEEXT) \
	wirParameter6.bin$(EXEEXT) wirParameter7.bin$(EXEEXT) \
	wirRedundantBlocks1.bin$(EXEEXT) \
	wirRegisterParameter1.bin$(EXEEXT) \
	wirSignedImmediateParameter1.bin$(EXEEXT) \
	wirStringParameter1.bin$(EXEEXT) \
	wirStructuralAnalysis1.bin$(EXEEXT) \
	wirStructuralAnalysis2.bin$(EXEEXT) \
	wirStructuralAnalysis3.bin$(EXEEXT) \
	wirStructuralAnalysis4.bin$(EXEEXT) \
	wirStructuralAnalysis5.bin$(EXEEXT) \
	wirStructuralAnalysis6.bin$(EXEEXT) \
	wirStructuralAnalysis7.bin$(EXEEXT) \
	wirStructuralAnalysis8.bin$(EXEEXT) \
	wirStructuralAnalysis9.bin$(EXEEXT) \
	wirStructuralAnalysis10.bin$(EXEEXT) \
	wirStructuralAnalysis11.bin$(EXEEXT) \
	wirStructuralAnalysis12.bin$(EXEEXT) \
	wirStructuralAnalysis13.bin$(EXEEXT) \
	wirStructuralAnalysis14.bin$(EXEEXT) \
	wirSymboltable1.bin$(EXEEXT) wirSymboltable2.bin$(EXEEXT) \
	wirSymboltable3.bin$(EXEEXT) wirSymboltable4.bin$(EXEEXT) \
	wirSymboltable5.bin$(EXEEXT) wirSymboltable6.bin$(EXEEXT) \
	wirSymboltable7.bin$(EXEEXT) wirSystem1.bin$(EXEEXT) \
	wirSystem2.bin$(EXEEXT) wirSystem3.bin$(EXEEXT) \
	wirSystem4.bin$(EXEEXT) wirSystem5.bin$(EXEEXT) \
	wirSystem6.bin$(EXEEXT) wirSystem7.bin$(EXEEXT) \
	wirSystem8.bin$(EXEEXT) wirSystem9.bin$(EXEEXT) \
	wirSystem10.bin$(EXEEXT) wirUnreachableBlocks1.bin$(EXEEXT) \
	wirUnsignedImmediateParameter1.bin$(EXEEXT) \
	wirUnsignedImmediateParameter2.bin$(EXEEXT) \
	wirUnusedVRegs1.bin$(EXEEXT) wirUpDownValue1.bin$(EXEEXT) \
	wirUpDownValue2.bin$(EXEEXT) wirUpDownValue3.bin$(EXEEXT) \
	wirUpDownValue4.bin$(EXEEXT) wirVirtualRegister1.bin$(EXEEXT) \
	wirVirtualRegister2.bin$(EXEEXT) \
	wirVirtualRegister3.bin$(EXEEXT) \
	wirVirtualRegister4.bin$(EXEEXT) \
	wirVirtualRegister5.bin$(EXEEXT) \
	wirVirtualRegister6.bin$(EXEEXT) \
	wirVirtualRegister7.bin$(EXEEXT) wirWebs1.bin$(EXEEXT)
subdir = tests
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/m4/m4-ax_check_compile_flag.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config_wir.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
wirAssert1_bin_SOURCES = wirAssert1.cc
wirAssert1_bin_OBJECTS = wirAssert1.$(OBJEXT)
wirAssert1_bin_LDADD = $(LDADD)
wirAssert1_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
wirAssert2_bin_SOURCES = wirAssert2.cc
wirAssert2_bin_OBJECTS = wirAssert2.$(OBJEXT)
wirAssert2_bin_LDADD = $(LDADD)
wirAssert2_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirAssertT1_bin_SOURCES = wirAssertT1.cc
wirAssertT1_bin_OBJECTS = wirAssertT1.$(OBJEXT)
wirAssertT1_bin_LDADD = $(LDADD)
wirAssertT1_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirAssertT2_bin_SOURCES = wirAssertT2.cc
wirAssertT2_bin_OBJECTS = wirAssertT2.$(OBJEXT)
wirAssertT2_bin_LDADD = $(LDADD)
wirAssertT2_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirBasicBlock1_bin_SOURCES = wirBasicBlock1.cc
wirBasicBlock1_bin_OBJECTS = wirBasicBlock1.$(OBJEXT)
wirBasicBlock1_bin_LDADD = $(LDADD)
wirBasicBlock1_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirBasicBlock2_bin_SOURCES = wirBasicBlock2.cc
wirBasicBlock2_bin_OBJECTS = wirBasicBlock2.$(OBJEXT)
wirBasicBlock2_bin_LDADD = $(LDADD)
wirBasicBlock2_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirBasicBlock3_bin_SOURCES = wirBasicBlock3.cc
wirBasicBlock3_bin_OBJECTS = wirBasicBlock3.$(OBJEXT)
wirBasicBlock3_bin_LDADD = $(LDADD)
wirBasicBlock3_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirBasicBlock4_bin_SOURCES = wirBasicBlock4.cc
wirBasicBlock4_bin_OBJECTS = wirBasicBlock4.$(OBJEXT)
wirBasicBlock4_bin_LDADD = $(LDADD)
wirBasicBlock4_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirBasicBlock5_bin_SOURCES = wirBasicBlock5.cc
wirBasicBlock5_bin_OBJECTS = wirBasicBlock5.$(OBJEXT)
wirBasicBlock5_bin_LDADD = $(LDADD)
wirBasicBlock5_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirBasicBlock6_bin_SOURCES = wirBasicBlock6.cc
wirBasicBlock6_bin_OBJECTS = wirBasicBlock6.$(OBJEXT)
wirBasicBlock6_bin_LDADD = $(LDADD)
wirBasicBlock6_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirBit1_bin_SOURCES = wirBit1.cc
wirBit1_bin_OBJECTS = wirBit1.$(OBJEXT)
wirBit1_bin_LDADD = $(LDADD)
wirBit1_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirBit2_bin_SOURCES = wirBit2.cc
wirBit2_bin_OBJECTS = wirBit2.$(OBJEXT)
wirBit2_bin_LDADD = $(LDADD)
wirBit2_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirBit3_bin_SOURCES = wirBit3.cc
wirBit3_bin_OBJECTS = wirBit3.$(OBJEXT)
wirBit3_bin_LDADD = $(LDADD)
wirBit3_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirBit4_bin_SOURCES = wirBit4.cc
wirBit4_bin_OBJECTS = wirBit4.$(OBJEXT)
wirBit4_bin_LDADD = $(LDADD)
wirBit4_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirBit5_bin_SOURCES = wirBit5.cc
wirBit5_bin_OBJECTS = wirBit5.$(OBJEXT)
wirBit5_bin_LDADD = $(LDADD)
wirBit5_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirCompilationUnit1_bin_SOURCES = wirCompilationUnit1.cc
wirCompilationUnit1_bin_OBJECTS = wirCompilationUnit1.$(OBJEXT)
wirCompilationUnit1_bin_LDADD = $(LDADD)
wirCompilationUnit1_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirCompilationUnit2_bin_SOURCES = wirCompilationUnit2.cc
wirCompilationUnit2_bin_OBJECTS = wirCompilationUnit2.$(OBJEXT)
wirCompilationUnit2_bin_LDADD = $(LDADD)
wirCompilationUnit2_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirCompilationUnit3_bin_SOURCES = wirCompilationUnit3.cc
wirCompilationUnit3_bin_OBJECTS = wirCompilationUnit3.$(OBJEXT)
wirCompilationUnit3_bin_LDADD = $(LDADD)
wirCompilationUnit3_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirCompilationUnit4_bin_SOURCES = wirCompilationUnit4.cc
wirCompilationUnit4_bin_OBJECTS = wirCompilationUnit4.$(OBJEXT)
wirCompilationUnit4_bin_LDADD = $(LDADD)
wirCompilationUnit4_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirContainer1_bin_SOURCES = wirContainer1.cc
wirContainer1_bin_OBJECTS = wirContainer1.$(OBJEXT)
wirContainer1_bin_LDADD = $(LDADD)
wirContainer1_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirContainer2_bin_SOURCES = wirContainer2.cc
wirContainer2_bin_OBJECTS = wirContainer2.$(OBJEXT)
wirContainer2_bin_LDADD = $(LDADD)
wirContainer2_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirDFS1_bin_SOURCES = wirDFS1.cc
wirDFS1_bin_OBJECTS = wirDFS1.$(OBJEXT)
wirDFS1_bin_LDADD = $(LDADD)
wirDFS1_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirDFS2_bin_SOURCES = wirDFS2.cc
wirDFS2_bin_OBJECTS = wirDFS2.$(OBJEXT)
wirDFS2_bin_LDADD = $(LDADD)
wirDFS2_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirData1_bin_SOURCES = wirData1.cc
wirData1_bin_OBJECTS = wirData1.$(OBJEXT)
wirData1_bin_LDADD = $(LDADD)
wirData1_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirEmptyBlocks1_bin_SOURCES = wirEmptyBlocks1.cc
wirEmptyBlocks1_bin_OBJECTS = wirEmptyBlocks1.$(OBJEXT)
wirEmptyBlocks1_bin_LDADD = $(LDADD)
wirEmptyBlocks1_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirFlowFact1_bin_SOURCES = wirFlowFact1.cc
wirFlowFact1_bin_OBJECTS = wirFlowFact1.$(OBJEXT)
wirFlowFact1_bin_LDADD = $(LDADD)
wirFlowFact1_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirFlowFact10_bin_SOURCES = wirFlowFact10.cc
wirFlowFact10_bin_OBJECTS = wirFlowFact10.$(OBJEXT)
wirFlowFact10_bin_LDADD = $(LDADD)
wirFlowFact10_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirFlowFact2_bin_SOURCES = wirFlowFact2.cc
wirFlowFact2_bin_OBJECTS = wirFlowFact2.$(OBJEXT)
wirFlowFact2_bin_LDADD = $(LDADD)
wirFlowFact2_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirFlowFact3_bin_SOURCES = wirFlowFact3.cc
wirFlowFact3_bin_OBJECTS = wirFlowFact3.$(OBJEXT)
wirFlowFact3_bin_LDADD = $(LDADD)
wirFlowFact3_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirFlowFact4_bin_SOURCES = wirFlowFact4.cc
wirFlowFact4_bin_OBJECTS = wirFlowFact4.$(OBJEXT)
wirFlowFact4_bin_LDADD = $(LDADD)
wirFlowFact4_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirFlowFact5_bin_SOURCES = wirFlowFact5.cc
wirFlowFact5_bin_OBJECTS = wirFlowFact5.$(OBJEXT)
wirFlowFact5_bin_LDADD = $(LDADD)
wirFlowFact5_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirFlowFact6_bin_SOURCES = wirFlowFact6.cc
wirFlowFact6_bin_OBJECTS = wirFlowFact6.$(OBJEXT)
wirFlowFact6_bin_LDADD = $(LDADD)
wirFlowFact6_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirFlowFact7_bin_SOURCES = wirFlowFact7.cc
wirFlowFact7_bin_OBJECTS = wirFlowFact7.$(OBJEXT)
wirFlowFact7_bin_LDADD = $(LDADD)
wirFlowFact7_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirFlowFact8_bin_SOURCES = wirFlowFact8.cc
wirFlowFact8_bin_OBJECTS = wirFlowFact8.$(OBJEXT)
wirFlowFact8_bin_LDADD = $(LDADD)
wirFlowFact8_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirFlowFact9_bin_SOURCES = wirFlowFact9.cc
wirFlowFact9_bin_OBJECTS = wirFlowFact9.$(OBJEXT)
wirFlowFact9_bin_LDADD = $(LDADD)
wirFlowFact9_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirFunction1_bin_SOURCES = wirFunction1.cc
wirFunction1_bin_OBJECTS = wirFunction1.$(OBJEXT)
wirFunction1_bin_LDADD = $(LDADD)
wirFunction1_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirFunction10_bin_SOURCES = wirFunction10.cc
wirFunction10_bin_OBJECTS = wirFunction10.$(OBJEXT)
wirFunction10_bin_LDADD = $(LDADD)
wirFunction10_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirFunction11_bin_SOURCES = wirFunction11.cc
wirFunction11_bin_OBJECTS = wirFunction11.$(OBJEXT)
wirFunction11_bin_LDADD = $(LDADD)
wirFunction11_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirFunction12_bin_SOURCES = wirFunction12.cc
wirFunction12_bin_OBJECTS = wirFunction12.$(OBJEXT)
wirFunction12_bin_LDADD = $(LDADD)
wirFunction12_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirFunction13_bin_SOURCES = wirFunction13.cc
wirFunction13_bin_OBJECTS = wirFunction13.$(OBJEXT)
wirFunction13_bin_LDADD = $(LDADD)
wirFunction13_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirFunction14_bin_SOURCES = wirFunction14.cc
wirFunction14_bin_OBJECTS = wirFunction14.$(OBJEXT)
wirFunction14_bin_LDADD = $(LDADD)
wirFunction14_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirFunction2_bin_SOURCES = wirFunction2.cc
wirFunction2_bin_OBJECTS = wirFunction2.$(OBJEXT)
wirFunction2_bin_LDADD = $(LDADD)
wirFunction2_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirFunction3_bin_SOURCES = wirFunction3.cc
wirFunction3_bin_OBJECTS = wirFunction3.$(OBJEXT)
wirFunction3_bin_LDADD = $(LDADD)
wirFunction3_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirFunction4_bin_SOURCES = wirFunction4.cc
wirFunction4_bin_OBJECTS = wirFunction4.$(OBJEXT)
wirFunction4_bin_LDADD = $(LDADD)
wirFunction4_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirFunction5_bin_SOURCES = wirFunction5.cc
wirFunction5_bin_OBJECTS = wirFunction5.$(OBJEXT)
wirFunction5_bin_LDADD = $(LDADD)
wirFunction5_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirFunction6_bin_SOURCES = wirFunction6.cc
wirFunction6_bin_OBJECTS = wirFunction6.$(OBJEXT)
wirFunction6_bin_LDADD = $(LDADD)
wirFunction6_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirFunction7_bin_SOURCES = wirFunction7.cc
wirFunction7_bin_OBJECTS = wirFunction7.$(OBJEXT)
wirFunction7_bin_LDADD = $(LDADD)
wirFunction7_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirFunction8_bin_SOURCES = wirFunction8.cc
wirFunction8_bin_OBJECTS = wirFunction8.$(OBJEXT)
wirFunction8_bin_LDADD = $(LDADD)
wirFunction8_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirFunction9_bin_SOURCES = wirFunction9.cc
wirFunction9_bin_OBJECTS = wirFunction9.$(OBJEXT)
wirFunction9_bin_LDADD = $(LDADD)
wirFunction9_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirInstruction1_bin_SOURCES = wirInstruction1.cc
wirInstruction1_bin_OBJECTS = wirInstruction1.$(OBJEXT)
wirInstruction1_bin_LDADD = $(LDADD)
wirInstruction1_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirInstruction2_bin_SOURCES = wirInstruction2.cc
wirInstruction2_bin_OBJECTS = wirInstruction2.$(OBJEXT)
wirInstruction2_bin_LDADD = $(LDADD)
wirInstruction2_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirInstruction3_bin_SOURCES = wirInstruction3.cc
wirInstruction3_bin_OBJECTS = wirInstruction3.$(OBJEXT)
wirInstruction3_bin_LDADD = $(LDADD)
wirInstruction3_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirInstruction4_bin_SOURCES = wirInstruction4.cc
wirInstruction4_bin_OBJECTS = wirInstruction4.$(OBJEXT)
wirInstruction4_bin_LDADD = $(LDADD)
wirInstruction4_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirLabelParameter1_bin_SOURCES = wirLabelParameter1.cc
wirLabelParameter1_bin_OBJECTS = wirLabelParameter1.$(OBJEXT)
wirLabelParameter1_bin_LDADD = $(LDADD)
wirLabelParameter1_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirLabelParameter2_bin_SOURCES = wirLabelParameter2.cc
wirLabelParameter2_bin_OBJECTS = wirLabelParameter2.$(OBJEXT)
wirLabelParameter2_bin_LDADD = $(LDADD)
wirLabelParameter2_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirLabelParameter3_bin_SOURCES = wirLabelParameter3.cc
wirLabelParameter3_bin_OBJECTS = wirLabelParameter3.$(OBJEXT)
wirLabelParameter3_bin_LDADD = $(LDADD)
wirLabelParameter3_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirList1_bin_SOURCES = wirList1.cc
wirList1_bin_OBJECTS = wirList1.$(OBJEXT)
wirList1_bin_LDADD = $(LDADD)
wirList1_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirList10_bin_SOURCES = wirList10.cc
wirList10_bin_OBJECTS = wirList10.$(OBJEXT)
wirList10_bin_LDADD = $(LDADD)
wirList10_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirList11_bin_SOURCES = wirList11.cc
wirList11_bin_OBJECTS = wirList11.$(OBJEXT)
wirList11_bin_LDADD = $(LDADD)
wirList11_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirList12_bin_SOURCES = wirList12.cc
wirList12_bin_OBJECTS = wirList12.$(OBJEXT)
wirList12_bin_LDADD = $(LDADD)
wirList12_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirList13_bin_SOURCES = wirList13.cc
wirList13_bin_OBJECTS = wirList13.$(OBJEXT)
wirList13_bin_LDADD = $(LDADD)
wirList13_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirList14_bin_SOURCES = wirList14.cc
wirList14_bin_OBJECTS = wirList14.$(OBJEXT)
wirList14_bin_LDADD = $(LDADD)
wirList14_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirList15_bin_SOURCES = wirList15.cc
wirList15_bin_OBJECTS = wirList15.$(OBJEXT)
wirList15_bin_LDADD = $(LDADD)
wirList15_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirList16_bin_SOURCES = wirList16.cc
wirList16_bin_OBJECTS = wirList16.$(OBJEXT)
wirList16_bin_LDADD = $(LDADD)
wirList16_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirList2_bin_SOURCES = wirList2.cc
wirList2_bin_OBJECTS = wirList2.$(OBJEXT)
wirList2_bin_LDADD = $(LDADD)
wirList2_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirList3_bin_SOURCES = wirList3.cc
wirList3_bin_OBJECTS = wirList3.$(OBJEXT)
wirList3_bin_LDADD = $(LDADD)
wirList3_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirList4_bin_SOURCES = wirList4.cc
wirList4_bin_OBJECTS = wirList4.$(OBJEXT)
wirList4_bin_LDADD = $(LDADD)
wirList4_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirList5_bin_SOURCES = wirList5.cc
wirList5_bin_OBJECTS = wirList5.$(OBJEXT)
wirList5_bin_LDADD = $(LDADD)
wirList5_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirList6_bin_SOURCES = wirList6.cc
wirList6_bin_OBJECTS = wirList6.$(OBJEXT)
wirList6_bin_LDADD = $(LDADD)
wirList6_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirList7_bin_SOURCES = wirList7.cc
wirList7_bin_OBJECTS = wirList7.$(OBJEXT)
wirList7_bin_LDADD = $(LDADD)
wirList7_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirOperation1_bin_SOURCES = wirOperation1.cc
wirOperation1_bin_OBJECTS = wirOperation1.$(OBJEXT)
wirOperation1_bin_LDADD = $(LDADD)
wirOperation1_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirOperation2_bin_SOURCES = wirOperation2.cc
wirOperation2_bin_OBJECTS = wirOperation2.$(OBJEXT)
wirOperation2_bin_LDADD = $(LDADD)
wirOperation2_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirOperation3_bin_SOURCES = wirOperation3.cc
wirOperation3_bin_OBJECTS = wirOperation3.$(OBJEXT)
wirOperation3_bin_LDADD = $(LDADD)
wirOperation3_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirOperation4_bin_SOURCES = wirOperation4.cc
wirOperation4_bin_OBJECTS = wirOperation4.$(OBJEXT)
wirOperation4_bin_LDADD = $(LDADD)
wirOperation4_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirOperation5_bin_SOURCES = wirOperation5.cc
wirOperation5_bin_OBJECTS = wirOperation5.$(OBJEXT)
wirOperation5_bin_LDADD = $(LDADD)
wirOperation5_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirOperation6_bin_SOURCES = wirOperation6.cc
wirOperation6_bin_OBJECTS = wirOperation6.$(OBJEXT)
wirOperation6_bin_LDADD = $(LDADD)
wirOperation6_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirOperation7_bin_SOURCES = wirOperation7.cc
wirOperation7_bin_OBJECTS = wirOperation7.$(OBJEXT)
wirOperation7_bin_LDADD = $(LDADD)
wirOperation7_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirOperation8_bin_SOURCES = wirOperation8.cc
wirOperation8_bin_OBJECTS = wirOperation8.$(OBJEXT)
wirOperation8_bin_LDADD = $(LDADD)
wirOperation8_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirParameter1_bin_SOURCES = wirParameter1.cc
wirParameter1_bin_OBJECTS = wirParameter1.$(OBJEXT)
wirParameter1_bin_LDADD = $(LDADD)
wirParameter1_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirParameter2_bin_SOURCES = wirParameter2.cc
wirParameter2_bin_OBJECTS = wirParameter2.$(OBJEXT)
wirParameter2_bin_LDADD = $(LDADD)
wirParameter2_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirParameter3_bin_SOURCES = wirParameter3.cc
wirParameter3_bin_OBJECTS = wirParameter3.$(OBJEXT)
wirParameter3_bin_LDADD = $(LDADD)
wirParameter3_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirParameter4_bin_SOURCES = wirParameter4.cc
wirParameter4_bin_OBJECTS = wirParameter4.$(OBJEXT)
wirParameter4_bin_LDADD = $(LDADD)
wirParameter4_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirParameter5_bin_SOURCES = wirParameter5.cc
wirParameter5_bin_OBJECTS = wirParameter5.$(OBJEXT)
wirParameter5_bin_LDADD = $(LDADD)
wirParameter5_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirParameter6_bin_SOURCES = wirParameter6.cc
wirParameter6_bin_OBJECTS = wirParameter6.$(OBJEXT)
wirParameter6_bin_LDADD = $(LDADD)
wirParameter6_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirParameter7_bin_SOURCES = wirParameter7.cc
wirParameter7_bin_OBJECTS = wirParameter7.$(OBJEXT)
wirParameter7_bin_LDADD = $(LDADD)
wirParameter7_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirRedundantBlocks1_bin_SOURCES = wirRedundantBlocks1.cc
wirRedundantBlocks1_bin_OBJECTS = wirRedundantBlocks1.$(OBJEXT)
wirRedundantBlocks1_bin_LDADD = $(LDADD)
wirRedundantBlocks1_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirRegisterParameter1_bin_SOURCES = wirRegisterParameter1.cc
wirRegisterParameter1_bin_OBJECTS = wirRegisterParameter1.$(OBJEXT)
wirRegisterParameter1_bin_LDADD = $(LDADD)
wirRegisterParameter1_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirSignedImmediateParameter1_bin_SOURCES =  \
	wirSignedImmediateParameter1.cc
wirSignedImmediateParameter1_bin_OBJECTS =  \
	wirSignedImmediateParameter1.$(OBJEXT)
wirSignedImmediateParameter1_bin_LDADD = $(LDADD)
wirSignedImmediateParameter1_bin_DEPENDENCIES =  \
	$(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirStringParameter1_bin_SOURCES = wirStringParameter1.cc
wirStringParameter1_bin_OBJECTS = wirStringParameter1.$(OBJEXT)
wirStringParameter1_bin_LDADD = $(LDADD)
wirStringParameter1_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirStructuralAnalysis1_bin_SOURCES = wirStructuralAnalysis1.cc
wirStructuralAnalysis1_bin_OBJECTS = wirStructuralAnalysis1.$(OBJEXT)
wirStructuralAnalysis1_bin_LDADD = $(LDADD)
wirStructuralAnalysis1_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirStructuralAnalysis10_bin_SOURCES = wirStructuralAnalysis10.cc
wirStructuralAnalysis10_bin_OBJECTS =  \
	wirStructuralAnalysis10.$(OBJEXT)
wirStructuralAnalysis10_bin_LDADD = $(LDADD)
wirStructuralAnalysis10_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirStructuralAnalysis11_bin_SOURCES = wirStructuralAnalysis11.cc
wirStructuralAnalysis11_bin_OBJECTS =  \
	wirStructuralAnalysis11.$(OBJEXT)
wirStructuralAnalysis11_bin_LDADD = $(LDADD)
wirStructuralAnalysis11_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirStructuralAnalysis12_bin_SOURCES = wirStructuralAnalysis12.cc
wirStructuralAnalysis12_bin_OBJECTS =  \
	wirStructuralAnalysis12.$(OBJEXT)
wirStructuralAnalysis12_bin_LDADD = $(LDADD)
wirStructuralAnalysis12_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirStructuralAnalysis13_bin_SOURCES = wirStructuralAnalysis13.cc
wirStructuralAnalysis13_bin_OBJECTS =  \
	wirStructuralAnalysis13.$(OBJEXT)
wirStructuralAnalysis13_bin_LDADD = $(LDADD)
wirStructuralAnalysis13_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirStructuralAnalysis14_bin_SOURCES = wirStructuralAnalysis14.cc
wirStructuralAnalysis14_bin_OBJECTS =  \
	wirStructuralAnalysis14.$(OBJEXT)
wirStructuralAnalysis14_bin_LDADD = $(LDADD)
wirStructuralAnalysis14_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirStructuralAnalysis2_bin_SOURCES = wirStructuralAnalysis2.cc
wirStructuralAnalysis2_bin_OBJECTS = wirStructuralAnalysis2.$(OBJEXT)
wirStructuralAnalysis2_bin_LDADD = $(LDADD)
wirStructuralAnalysis2_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirStructuralAnalysis3_bin_SOURCES = wirStructuralAnalysis3.cc
wirStructuralAnalysis3_bin_OBJECTS = wirStructuralAnalysis3.$(OBJEXT)
wirStructuralAnalysis3_bin_LDADD = $(LDADD)
wirStructuralAnalysis3_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirStructuralAnalysis4_bin_SOURCES = wirStructuralAnalysis4.cc
wirStructuralAnalysis4_bin_OBJECTS = wirStructuralAnalysis4.$(OBJEXT)
wirStructuralAnalysis4_bin_LDADD = $(LDADD)
wirStructuralAnalysis4_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirStructuralAnalysis5_bin_SOURCES = wirStructuralAnalysis5.cc
wirStructuralAnalysis5_bin_OBJECTS = wirStructuralAnalysis5.$(OBJEXT)
wirStructuralAnalysis5_bin_LDADD = $(LDADD)
wirStructuralAnalysis5_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirStructuralAnalysis6_bin_SOURCES = wirStructuralAnalysis6.cc
wirStructuralAnalysis6_bin_OBJECTS = wirStructuralAnalysis6.$(OBJEXT)
wirStructuralAnalysis6_bin_LDADD = $(LDADD)
wirStructuralAnalysis6_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirStructuralAnalysis7_bin_SOURCES = wirStructuralAnalysis7.cc
wirStructuralAnalysis7_bin_OBJECTS = wirStructuralAnalysis7.$(OBJEXT)
wirStructuralAnalysis7_bin_LDADD = $(LDADD)
wirStructuralAnalysis7_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirStructuralAnalysis8_bin_SOURCES = wirStructuralAnalysis8.cc
wirStructuralAnalysis8_bin_OBJECTS = wirStructuralAnalysis8.$(OBJEXT)
wirStructuralAnalysis8_bin_LDADD = $(LDADD)
wirStructuralAnalysis8_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirStructuralAnalysis9_bin_SOURCES = wirStructuralAnalysis9.cc
wirStructuralAnalysis9_bin_OBJECTS = wirStructuralAnalysis9.$(OBJEXT)
wirStructuralAnalysis9_bin_LDADD = $(LDADD)
wirStructuralAnalysis9_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirSymboltable1_bin_SOURCES = wirSymboltable1.cc
wirSymboltable1_bin_OBJECTS = wirSymboltable1.$(OBJEXT)
wirSymboltable1_bin_LDADD = $(LDADD)
wirSymboltable1_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirSymboltable2_bin_SOURCES = wirSymboltable2.cc
wirSymboltable2_bin_OBJECTS = wirSymboltable2.$(OBJEXT)
wirSymboltable2_bin_LDADD = $(LDADD)
wirSymboltable2_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirSymboltable3_bin_SOURCES = wirSymboltable3.cc
wirSymboltable3_bin_OBJECTS = wirSymboltable3.$(OBJEXT)
wirSymboltable3_bin_LDADD = $(LDADD)
wirSymboltable3_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirSymboltable4_bin_SOURCES = wirSymboltable4.cc
wirSymboltable4_bin_OBJECTS = wirSymboltable4.$(OBJEXT)
wirSymboltable4_bin_LDADD = $(LDADD)
wirSymboltable4_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirSymboltable5_bin_SOURCES = wirSymboltable5.cc
wirSymboltable5_bin_OBJECTS = wirSymboltable5.$(OBJEXT)
wirSymboltable5_bin_LDADD = $(LDADD)
wirSymboltable5_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirSymboltable6_bin_SOURCES = wirSymboltable6.cc
wirSymboltable6_bin_OBJECTS = wirSymboltable6.$(OBJEXT)
wirSymboltable6_bin_LDADD = $(LDADD)
wirSymboltable6_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirSymboltable7_bin_SOURCES = wirSymboltable7.cc
wirSymboltable7_bin_OBJECTS = wirSymboltable7.$(OBJEXT)
wirSymboltable7_bin_LDADD = $(LDADD)
wirSymboltable7_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirSystem1_bin_SOURCES = wirSystem1.cc
wirSystem1_bin_OBJECTS = wirSystem1.$(OBJEXT)
wirSystem1_bin_LDADD = $(LDADD)
wirSystem1_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirSystem10_bin_SOURCES = wirSystem10.cc
wirSystem10_bin_OBJECTS = wirSystem10.$(OBJEXT)
wirSystem10_bin_LDADD = $(LDADD)
wirSystem10_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirSystem2_bin_SOURCES = wirSystem2.cc
wirSystem2_bin_OBJECTS = wirSystem2.$(OBJEXT)
wirSystem2_bin_LDADD = $(LDADD)
wirSystem2_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirSystem3_bin_SOURCES = wirSystem3.cc
wirSystem3_bin_OBJECTS = wirSystem3.$(OBJEXT)
wirSystem3_bin_LDADD = $(LDADD)
wirSystem3_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirSystem4_bin_SOURCES = wirSystem4.cc
wirSystem4_bin_OBJECTS = wirSystem4.$(OBJEXT)
wirSystem4_bin_LDADD = $(LDADD)
wirSystem4_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirSystem5_bin_SOURCES = wirSystem5.cc
wirSystem5_bin_OBJECTS = wirSystem5.$(OBJEXT)
wirSystem5_bin_LDADD = $(LDADD)
wirSystem5_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirSystem6_bin_SOURCES = wirSystem6.cc
wirSystem6_bin_OBJECTS = wirSystem6.$(OBJEXT)
wirSystem6_bin_LDADD = $(LDADD)
wirSystem6_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirSystem7_bin_SOURCES = wirSystem7.cc
wirSystem7_bin_OBJECTS = wirSystem7.$(OBJEXT)
wirSystem7_bin_LDADD = $(LDADD)
wirSystem7_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirSystem8_bin_SOURCES = wirSystem8.cc
wirSystem8_bin_OBJECTS = wirSystem8.$(OBJEXT)
wirSystem8_bin_LDADD = $(LDADD)
wirSystem8_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirSystem9_bin_SOURCES = wirSystem9.cc
wirSystem9_bin_OBJECTS = wirSystem9.$(OBJEXT)
wirSystem9_bin_LDADD = $(LDADD)
wirSystem9_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirUnreachableBlocks1_bin_SOURCES = wirUnreachableBlocks1.cc
wirUnreachableBlocks1_bin_OBJECTS = wirUnreachableBlocks1.$(OBJEXT)
wirUnreachableBlocks1_bin_LDADD = $(LDADD)
wirUnreachableBlocks1_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirUnsignedImmediateParameter1_bin_SOURCES =  \
	wirUnsignedImmediateParameter1.cc
wirUnsignedImmediateParameter1_bin_OBJECTS =  \
	wirUnsignedImmediateParameter1.$(OBJEXT)
wirUnsignedImmediateParameter1_bin_LDADD = $(LDADD)
wirUnsignedImmediateParameter1_bin_DEPENDENCIES =  \
	$(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirUnsignedImmediateParameter2_bin_SOURCES =  \
	wirUnsignedImmediateParameter2.cc
wirUnsignedImmediateParameter2_bin_OBJECTS =  \
	wirUnsignedImmediateParameter2.$(OBJEXT)
wirUnsignedImmediateParameter2_bin_LDADD = $(LDADD)
wirUnsignedImmediateParameter2_bin_DEPENDENCIES =  \
	$(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirUnusedVRegs1_bin_SOURCES = wirUnusedVRegs1.cc
wirUnusedVRegs1_bin_OBJECTS = wirUnusedVRegs1.$(OBJEXT)
wirUnusedVRegs1_bin_LDADD = $(LDADD)
wirUnusedVRegs1_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirUpDownValue1_bin_SOURCES = wirUpDownValue1.cc
wirUpDownValue1_bin_OBJECTS = wirUpDownValue1.$(OBJEXT)
wirUpDownValue1_bin_LDADD = $(LDADD)
wirUpDownValue1_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirUpDownValue2_bin_SOURCES = wirUpDownValue2.cc
wirUpDownValue2_bin_OBJECTS = wirUpDownValue2.$(OBJEXT)
wirUpDownValue2_bin_LDADD = $(LDADD)
wirUpDownValue2_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirUpDownValue3_bin_SOURCES = wirUpDownValue3.cc
wirUpDownValue3_bin_OBJECTS = wirUpDownValue3.$(OBJEXT)
wirUpDownValue3_bin_LDADD = $(LDADD)
wirUpDownValue3_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirUpDownValue4_bin_SOURCES = wirUpDownValue4.cc
wirUpDownValue4_bin_OBJECTS = wirUpDownValue4.$(OBJEXT)
wirUpDownValue4_bin_LDADD = $(LDADD)
wirUpDownValue4_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirVirtualRegister1_bin_SOURCES = wirVirtualRegister1.cc
wirVirtualRegister1_bin_OBJECTS = wirVirtualRegister1.$(OBJEXT)
wirVirtualRegister1_bin_LDADD = $(LDADD)
wirVirtualRegister1_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirVirtualRegister2_bin_SOURCES = wirVirtualRegister2.cc
wirVirtualRegister2_bin_OBJECTS = wirVirtualRegister2.$(OBJEXT)
wirVirtualRegister2_bin_LDADD = $(LDADD)
wirVirtualRegister2_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirVirtualRegister3_bin_SOURCES = wirVirtualRegister3.cc
wirVirtualRegister3_bin_OBJECTS = wirVirtualRegister3.$(OBJEXT)
wirVirtualRegister3_bin_LDADD = $(LDADD)
wirVirtualRegister3_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirVirtualRegister4_bin_SOURCES = wirVirtualRegister4.cc
wirVirtualRegister4_bin_OBJECTS = wirVirtualRegister4.$(OBJEXT)
wirVirtualRegister4_bin_LDADD = $(LDADD)
wirVirtualRegister4_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirVirtualRegister5_bin_SOURCES = wirVirtualRegister5.cc
wirVirtualRegister5_bin_OBJECTS = wirVirtualRegister5.$(OBJEXT)
wirVirtualRegister5_bin_LDADD = $(LDADD)
wirVirtualRegister5_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirVirtualRegister6_bin_SOURCES = wirVirtualRegister6.cc
wirVirtualRegister6_bin_OBJECTS = wirVirtualRegister6.$(OBJEXT)
wirVirtualRegister6_bin_LDADD = $(LDADD)
wirVirtualRegister6_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirVirtualRegister7_bin_SOURCES = wirVirtualRegister7.cc
wirVirtualRegister7_bin_OBJECTS = wirVirtualRegister7.$(OBJEXT)
wirVirtualRegister7_bin_LDADD = $(LDADD)
wirVirtualRegister7_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
wirWebs1_bin_SOURCES = wirWebs1.cc
wirWebs1_bin_OBJECTS = wirWebs1.$(OBJEXT)
wirWebs1_bin_LDADD = $(LDADD)
wirWebs1_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/../depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade = ./$(DEPDIR)/wirAssert1.Po \
	./$(DEPDIR)/wirAssert2.Po ./$(DEPDIR)/wirAssertT1.Po \
	./$(DEPDIR)/wirAssertT2.Po ./$(DEPDIR)/wirBasicBlock1.Po \
	./$(DEPDIR)/wirBasicBlock2.Po ./$(DEPDIR)/wirBasicBlock3.Po \
	./$(DEPDIR)/wirBasicBlock4.Po ./$(DEPDIR)/wirBasicBlock5.Po \
	./$(DEPDIR)/wirBasicBlock6.Po ./$(DEPDIR)/wirBit1.Po \
	./$(DEPDIR)/wirBit2.Po ./$(DEPDIR)/wirBit3.Po \
	./$(DEPDIR)/wirBit4.Po ./$(DEPDIR)/wirBit5.Po \
	./$(DEPDIR)/wirCompilationUnit1.Po \
	./$(DEPDIR)/wirCompilationUnit2.Po \
	./$(DEPDIR)/wirCompilationUnit3.Po \
	./$(DEPDIR)/wirCompilationUnit4.Po \
	./$(DEPDIR)/wirContainer1.Po ./$(DEPDIR)/wirContainer2.Po \
	./$(DEPDIR)/wirDFS1.Po ./$(DEPDIR)/wirDFS2.Po \
	./$(DEPDIR)/wirData1.Po ./$(DEPDIR)/wirEmptyBlocks1.Po \
	./$(DEPDIR)/wirFlowFact1.Po ./$(DEPDIR)/wirFlowFact10.Po \
	./$(DEPDIR)/wirFlowFact2.Po ./$(DEPDIR)/wirFlowFact3.Po \
	./$(DEPDIR)/wirFlowFact4.Po ./$(DEPDIR)/wirFlowFact5.Po \
	./$(DEPDIR)/wirFlowFact6.Po ./$(DEPDIR)/wirFlowFact7.Po \
	./$(DEPDIR)/wirFlowFact8.Po ./$(DEPDIR)/wirFlowFact9.Po \
	./$(DEPDIR)/wirFunction1.Po ./$(DEPDIR)/wirFunction10.Po \
	./$(DEPDIR)/wirFunction11.Po ./$(DEPDIR)/wirFunction12.Po \
	./$(DEPDIR)/wirFunction13.Po ./$(DEPDIR)/wirFunction14.Po \
	./$(DEPDIR)/wirFunction2.Po ./$(DEPDIR)/wirFunction3.Po \
	./$(DEPDIR)/wirFunction4.Po ./$(DEPDIR)/wirFunction5.Po \
	./$(DEPDIR)/wirFunction6.Po ./$(DEPDIR)/wirFunction7.Po \
	./$(DEPDIR)/wirFunction8.Po ./$(DEPDIR)/wirFunction9.Po \
	./$(DEPDIR)/wirInstruction1.Po ./$(DEPDIR)/wirInstruction2.Po \
	./$(DEPDIR)/wirInstruction3.Po ./$(DEPDIR)/wirInstruction4.Po \
	./$(DEPDIR)/wirLabelParameter1.Po \
	./$(DEPDIR)/wirLabelParameter2.Po \
	./$(DEPDIR)/wirLabelParameter3.Po ./$(DEPDIR)/wirList1.Po \
	./$(DEPDIR)/wirList10.Po ./$(DEPDIR)/wirList11.Po \
	./$(DEPDIR)/wirList12.Po ./$(DEPDIR)/wirList13.Po \
	./$(DEPDIR)/wirList14.Po ./$(DEPDIR)/wirList15.Po \
	./$(DEPDIR)/wirList16.Po ./$(DEPDIR)/wirList2.Po \
	./$(DEPDIR)/wirList3.Po ./$(DEPDIR)/wirList4.Po \
	./$(DEPDIR)/wirList5.Po ./$(DEPDIR)/wirList6.Po \
	./$(DEPDIR)/wirList7.Po ./$(DEPDIR)/wirOperation1.Po \
	./$(DEPDIR)/wirOperation2.Po ./$(DEPDIR)/wirOperation3.Po \
	./$(DEPDIR)/wirOperation4.Po ./$(DEPDIR)/wirOperation5.Po \
	./$(DEPDIR)/wirOperation6.Po ./$(DEPDIR)/wirOperation7.Po \
	./$(DEPDIR)/wirOperation8.Po ./$(DEPDIR)/wirParameter1.Po \
	./$(DEPDIR)/wirParameter2.Po ./$(DEPDIR)/wirParameter3.Po \
	./$(DEPDIR)/wirParameter4.Po ./$(DEPDIR)/wirParameter5.Po \
	./$(DEPDIR)/wirParameter6.Po ./$(DEPDIR)/wirParameter7.Po \
	./$(DEPDIR)/wirRedundantBlocks1.Po \
	./$(DEPDIR)/wirRegisterParameter1.Po \
	./$(DEPDIR)/wirSignedImmediateParameter1.Po \
	./$(DEPDIR)/wirStringParameter1.Po \
	./$(DEPDIR)/wirStructuralAnalysis1.Po \
	./$(DEPDIR)/wirStructuralAnalysis10.Po \
	./$(DEPDIR)/wirStructuralAnalysis11.Po \
	./$(DEPDIR)/wirStructuralAnalysis12.Po \
	./$(DEPDIR)/wirStructuralAnalysis13.Po \
	./$(DEPDIR)/wirStructuralAnalysis14.Po \
	./$(DEPDIR)/wirStructuralAnalysis2.Po \
	./$(DEPDIR)/wirStructuralAnalysis3.Po \
	./$(DEPDIR)/wirStructuralAnalysis4.Po \
	./$(DEPDIR)/wirStructuralAnalysis5.Po \
	./$(DEPDIR)/wirStructuralAnalysis6.Po \
	./$(DEPDIR)/wirStructuralAnalysis7.Po \
	./$(DEPDIR)/wirStructuralAnalysis8.Po \
	./$(DEPDIR)/wirStructuralAnalysis9.Po \
	./$(DEPDIR)/wirSymboltable1.Po ./$(DEPDIR)/wirSymboltable2.Po \
	./$(DEPDIR)/wirSymboltable3.Po ./$(DEPDIR)/wirSymboltable4.Po \
	./$(DEPDIR)/wirSymboltable5.Po ./$(DEPDIR)/wirSymboltable6.Po \
	./$(DEPDIR)/wirSymboltable7.Po ./$(DEPDIR)/wirSystem1.Po \
	./$(DEPDIR)/wirSystem10.Po ./$(DEPDIR)/wirSystem2.Po \
	./$(DEPDIR)/wirSystem3.Po ./$(DEPDIR)/wirSystem4.Po \
	./$(DEPDIR)/wirSystem5.Po ./$(DEPDIR)/wirSystem6.Po \
	./$(DEPDIR)/wirSystem7.Po ./$(DEPDIR)/wirSystem8.Po \
	./$(DEPDIR)/wirSystem9.Po ./$(DEPDIR)/wirUnreachableBlocks1.Po \
	./$(DEPDIR)/wirUnsignedImmediateParameter1.Po \
	./$(DEPDIR)/wirUnsignedImmediateParameter2.Po \
	./$(DEPDIR)/wirUnusedVRegs1.Po ./$(DEPDIR)/wirUpDownValue1.Po \
	./$(DEPDIR)/wirUpDownValue2.Po ./$(DEPDIR)/wirUpDownValue3.Po \
	./$(DEPDIR)/wirUpDownValue4.Po \
	./$(DEPDIR)/wirVirtualRegister1.Po \
	./$(DEPDIR)/wirVirtualRegister2.Po \
	./$(DEPDIR)/wirVirtualRegister3.Po \
	./$(DEPDIR)/wirVirtualRegister4.Po \
	./$(DEPDIR)/wirVirtualRegister5.Po \
	./$(DEPDIR)/wirVirtualRegister6.Po \
	./$(DEPDIR)/wirVirtualRegister7.Po ./$(DEPDIR)/wirWebs1.Po
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_@AM_V@)
am__v_CXX_ = $(am__v_CXX_@AM_DEFAULT_V@)
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_@AM_V@)
am__v_CXXLD_ = $(am__v_CXXLD_@AM_DEFAULT_V@)
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = wirAssert1.cc wirAssert2.cc wirAssertT1.cc wirAssertT2.cc \
	wirBasicBlock1.cc wirBasicBlock2.cc wirBasicBlock3.cc \
	wirBasicBlock4.cc wirBasicBlock5.cc wirBasicBlock6.cc \
	wirBit1.cc wirBit2.cc wirBit3.cc wirBit4.cc wirBit5.cc \
	wirCompilationUnit1.cc wirCompilationUnit2.cc \
	wirCompilationUnit3.cc wirCompilationUnit4.cc wirContainer1.cc \
	wirContainer2.cc wirDFS1.cc wirDFS2.cc wirData1.cc \
	wirEmptyBlocks1.cc wirFlowFact1.cc wirFlowFact10.cc \
	wirFlowFact2.cc wirFlowFact3.cc wirFlowFact4.cc \
	wirFlowFact5.cc wirFlowFact6.cc wirFlowFact7.cc \
	wirFlowFact8.cc wirFlowFact9.cc wirFunction1.cc \
	wirFunction10.cc wirFunction11.cc wirFunction12.cc \
	wirFunction13.cc wirFunction14.cc wirFunction2.cc \
	wirFunction3.cc wirFunction4.cc wirFunction5.cc \
	wirFunction6.cc wirFunction7.cc wirFunction8.cc \
	wirFunction9.cc wirInstruction1.cc wirInstruction2.cc \
	wirInstruction3.cc wirInstruction4.cc wirLabelParameter1.cc \
	wirLabelParameter2.cc wirLabelParameter3.cc wirList1.cc \
	wirList10.cc wirList11.cc wirList12.cc wirList13.cc \
	wirList14.cc wirList15.cc wirList16.cc wirList2.cc wirList3.cc \
	wirList4.cc wirList5.cc wirList6.cc wirList7.cc \
	wirOperation1.cc wirOperation2.cc wirOperation3.cc \
	wirOperation4.cc wirOperation5.cc wirOperation6.cc \
	wirOperation7.cc wirOperation8.cc wirParameter1.cc \
	wirParameter2.cc wirParameter3.cc wirParameter4.cc \
	wirParameter5.cc wirParameter6.cc wirParameter7.cc \
	wirRedundantBlocks1.cc wirRegisterParameter1.cc \
	wirSignedImmediateParameter1.cc wirStringParameter1.cc \
	wirStructuralAnalysis1.cc wirStructuralAnalysis10.cc \
	wirStructuralAnalysis11.cc wirStructuralAnalysis12.cc \
	wirStructuralAnalysis13.cc wirStructuralAnalysis14.cc \
	wirStructuralAnalysis2.cc wirStructuralAnalysis3.cc \
	wirStructuralAnalysis4.cc wirStructuralAnalysis5.cc \
	wirStructuralAnalysis6.cc wirStructuralAnalysis7.cc \
	wirStructuralAnalysis8.cc wirStructuralAnalysis9.cc \
	wirSymboltable1.cc wirSymboltable2.cc wirSymboltable3.cc \
	wirSymboltable4.cc wirSymboltable5.cc wirSymboltable6.cc \
	wirSymboltable7.cc wirSystem1.cc wirSystem10.cc wirSystem2.cc \
	wirSystem3.cc wirSystem4.cc wirSystem5.cc wirSystem6.cc \
	wirSystem7.cc wirSystem8.cc wirSystem9.cc \
	wirUnreachableBlocks1.cc wirUnsignedImmediateParameter1.cc \
	wirUnsignedImmediateParameter2.cc wirUnusedVRegs1.cc \
	wirUpDownValue1.cc wirUpDownValue2.cc wirUpDownValue3.cc \
	wirUpDownValue4.cc wirVirtualRegister1.cc \
	wirVirtualRegister2.cc wirVirtualRegister3.cc \
	wirVirtualRegister4.cc wirVirtualRegister5.cc \
	wirVirtualRegister6.cc wirVirtualRegister7.cc wirWebs1.cc
DIST_SOURCES = wirAssert1.cc wirAssert2.cc wirAssertT1.cc \
	wirAssertT2.cc wirBasicBlock1.cc wirBasicBlock2.cc \
	wirBasicBlock3.cc wirBasicBlock4.cc wirBasicBlock5.cc \
	wirBasicBlock6.cc wirBit1.cc wirBit2.cc wirBit3.cc wirBit4.cc \
	wirBit5.cc wirCompilationUnit1.cc wirCompilationUnit2.cc \
	wirCompilationUnit3.cc wirCompilationUnit4.cc wirContainer1.cc \
	wirContainer2.cc wirDFS1.cc wirDFS2.cc wirData1.cc \
	wirEmptyBlocks1.cc wirFlowFact1.cc wirFlowFact10.cc \
	wirFlowFact2.cc wirFlowFact3.cc wirFlowFact4.cc \
	wirFlowFact5.cc wirFlowFact6.cc wirFlowFact7.cc \
	wirFlowFact8.cc wirFlowFact9.cc wirFunction1.cc \
	wirFunction10.cc wirFunction11.cc wirFunction12.cc \
	wirFunction13.cc wirFunction14.cc wirFunction2.cc \
	wirFunction3.cc wirFunction4.cc wirFunction5.cc \
	wirFunction6.cc wirFunction7.cc wirFunction8.cc \
	wirFunction9.cc wirInstruction1.cc wirInstruction2.cc \
	wirInstruction3.cc wirInstruction4.cc wirLabelParameter1.cc \
	wirLabelParameter2.cc wirLabelParameter3.cc wirList1.cc \
	wirList10.cc wirList11.cc wirList12.cc wirList13.cc \
	wirList14.cc wirList15.cc wirList16.cc wirList2.cc wirList3.cc \
	wirList4.cc wirList5.cc wirList6.cc wirList7.cc \
	wirOperation1.cc wirOperation2.cc wirOperation3.cc \
	wirOperation4.cc wirOperation5.cc wirOperation6.cc \
	wirOperation7.cc wirOperation8.cc wirParameter1.cc \
	wirParameter2.cc wirParameter3.cc wirParameter4.cc \
	wirParameter5.cc wirParameter6.cc wirParameter7.cc \
	wirRedundantBlocks1.cc wirRegisterParameter1.cc \
	wirSignedImmediateParameter1.cc wirStringParameter1.cc \
	wirStructuralAnalysis1.cc wirStructuralAnalysis10.cc \
	wirStructuralAnalysis11.cc wirStructuralAnalysis12.cc \
	wirStructuralAnalysis13.cc wirStructuralAnalysis14.cc \
	wirStructuralAnalysis2.cc wirStructuralAnalysis3.cc \
	wirStructuralAnalysis4.cc wirStructuralAnalysis5.cc \
	wirStructuralAnalysis6.cc wirStructuralAnalysis7.cc \
	wirStructuralAnalysis8.cc wirStructuralAnalysis9.cc \
	wirSymboltable1.cc wirSymboltable2.cc wirSymboltable3.cc \
	wirSymboltable4.cc wirSymboltable5.cc wirSymboltable6.cc \
	wirSymboltable7.cc wirSystem1.cc wirSystem10.cc wirSystem2.cc \
	wirSystem3.cc wirSystem4.cc wirSystem5.cc wirSystem6.cc \
	wirSystem7.cc wirSystem8.cc wirSystem9.cc \
	wirUnreachableBlocks1.cc wirUnsignedImmediateParameter1.cc \
	wirUnsignedImmediateParameter2.cc wirUnusedVRegs1.cc \
	wirUpDownValue1.cc wirUpDownValue2.cc wirUpDownValue3.cc \
	wirUpDownValue4.cc wirVirtualRegister1.cc \
	wirVirtualRegister2.cc wirVirtualRegister3.cc \
	wirVirtualRegister4.cc wirVirtualRegister5.cc \
	wirVirtualRegister6.cc wirVirtualRegister7.cc wirWebs1.cc
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
RECHECK_LOGS = $(TEST_LOGS)
AM_RECURSIVE_TARGETS = check recheck
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS = @EXEEXT@ .test
LOG_DRIVER = $(SHELL) $(top_srcdir)/../test-driver
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:@EXEEXT@.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/../test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/../depcomp \
	$(top_srcdir)/../test-driver
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_CFLAGS = @AM_CFLAGS@
AM_CPPFLAGS = @AM_CPPFLAGS@
AM_CXXFLAGS = @AM_CXXFLAGS@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AM_LDFLAGS = @AM_LDFLAGS@
AR = @AR@
ARMAS = @ARMAS@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BASH = @BASH@
BISON = @BISON@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CHMOD = @CHMOD@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DATE = @DATE@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DIRNAME = @DIRNAME@
DLLTOOL = @DLLTOOL@
DOC_ARM = @DOC_ARM@
DOC_LEON = @DOC_LEON@
DOC_RISCV = @DOC_RISCV@
DOC_TRICORE = @DOC_TRICORE@
DOT = @DOT@
DOXYGEN = @DOXYGEN@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GREP = @GREP@
HAVE_GMAKE = @HAVE_GMAKE@
HAVE_MAKE = @HAVE_MAKE@
INSTALL = @INSTALL@
INSTALLED_MAKE = @INSTALLED_MAKE@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LEX = @LEX@
LEXLIB = @LEXLIB@
LEX_OUTPUT_ROOT = @LEX_OUTPUT_ROOT@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIBUSEFUL_PREFIX = @LIBUSEFUL_PREFIX@
LIB_NOINSTALL_DIR = @LIB_NOINSTALL_DIR@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
LT_SYS_LIBRARY_PATH = @LT_SYS_LIBRARY_PATH@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
RISCVAS = @RISCVAS@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
TRIAS = @TRIAS@
UNAME = @UNAME@
VERSION = @VERSION@
WIR_RELEASE = @WIR_RELEASE@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
armas = @armas@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
riscvas = @riscvas@
runstatedir = @runstatedir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
trias = @trias@
failscripts = wirAssert1.sh wirAssertT1.sh \
			  wirBasicBlock2.sh wirBasicBlock6.sh \
			  wirCompilationUnit2.sh \
			  wirData1.sh \
			  wirFlowFact2.sh wirFlowFact3.sh wirFlowFact4.sh \
			  wirFlowFact5.sh wirFlowFact6.sh \
			  wirFunction3.sh wirFunction4.sh wirFunction5.sh \
			  wirFunction6.sh wirFunction7.sh wirFunction8.sh \
			  wirFunction9.sh wirFunction10.sh wirFunction13.sh \
			  wirInstruction2.sh wirInstruction4.sh \
			  wirLabelParameter2.sh wirLabelParameter3.sh \
			  wirList3.sh wirList4.sh wirList5.sh wirList6.sh \
			  wirList7.sh \
			  wirList12.sh wirList13.sh wirList14.sh wirList15.sh \
			  wirList16.sh \
			  wirOperation2.sh wirOperation3.sh wirOperation4.sh \
			  wirOperation5.sh wirOperation6.sh wirOperation7.sh \
			  wirParameter1.sh wirParameter2.sh wirParameter3.sh \
			  wirParameter4.sh wirParameter5.sh wirParameter6.sh \
			  wirParameter7.sh \
			  wirSymboltable7.sh \
			  wirSystem5.sh wirSystem6.sh wirSystem10.sh \
			  wirUnsignedImmediateParameter2.sh \
			  wirVirtualRegister1.sh wirVirtualRegister2.sh \
			  wirVirtualRegister3.sh wirVirtualRegister4.sh \
			  wirVirtualRegister6.sh wirVirtualRegister7.sh

passscripts = wirAssert2.sh wirAssertT2.sh \
			  wirBasicBlock1.sh wirBasicBlock3.sh \
			  wirBasicBlock4.sh wirBasicBlock5.sh \
			  wirBit1.sh wirBit2.sh wirBit3.sh wirBit4.sh \
			  wirBit5.sh \
			  wirCompilationUnit1.sh wirCompilationUnit3.sh \
			  wirCompilationUnit4.sh \
			  wirContainer1.sh wirContainer2.sh \
			  wirDFS1.sh wirDFS2.sh \
			  wirEmptyBlocks1.sh \
			  wirFlowFact1.sh wirFlowFact7.sh wirFlowFact8.sh \
			  wirFlowFact9.sh wirFlowFact10.sh \
			  wirFunction1.sh wirFunction2.sh wirFunction11.sh \
			  wirFunction12.sh wirFunction14.sh \
			  wirInstruction1.sh wirInstruction3.sh \
			  wirLabelParameter1.sh \
			  wirList1.sh wirList2.sh \
			  wirList10.sh wirList11.sh \
			  wirOperation1.sh wirOperation8.sh \
			  wirRedundantBlocks1.sh \
			  wirRegisterParameter1.sh \
			  wirSignedImmediateParameter1.sh \
			  wirStringParameter1.sh \
			  wirStructuralAnalysis1.sh wirStructuralAnalysis2.sh \
			  wirStructuralAnalysis3.sh wirStructuralAnalysis4.sh \
			  wirStructuralAnalysis5.sh wirStructuralAnalysis6.sh \
			  wirStructuralAnalysis7.sh wirStructuralAnalysis8.sh \
			  wirStructuralAnalysis9.sh wirStructuralAnalysis10.sh \
			  wirStructuralAnalysis11.sh \
			  wirStructuralAnalysis12.sh \
			  wirStructuralAnalysis13.sh \
			  wirStructuralAnalysis14.sh \
			  wirSymboltable1.sh wirSymboltable2.sh \
			  wirSymboltable3.sh wirSymboltable4.sh \
			  wirSymboltable5.sh wirSymboltable6.sh \
			  wirSystem1.sh wirSystem2.sh wirSystem3.sh \
			  wirSystem4.sh wirSystem7.sh wirSystem8.sh \
			  wirSystem9.sh \
			  wirUnreachableBlocks1.sh \
			  wirUnsignedImmediateParameter1.sh \
			  wirUnusedVRegs1.sh \
			  wirUpDownValue1.sh wirUpDownValue2.sh \
			  wirUpDownValue3.sh wirUpDownValue4.sh \
			  wirVirtualRegister5.sh \
			  wirWebs1.sh

check_SCRIPTS = $(failscripts) $(passscripts)
XFAIL_TESTS = $(failscripts)
TESTS = $(passscripts) $(failscripts)

#
# Source files of the targets
#
CLEANFILES = $(check_PROGRAMS) $(check_SCRIPTS) core
AM_DEFAULT_SOURCE_EXT = .cc

#
# Compiler and linker flags
#
LDADD = $(top_builddir)/libwir.la \
			  @LIBUSEFUL_PREFIX@/libuseful/libuseful.la

all: all-am

.SUFFIXES:
.SUFFIXES: .cc .lo .log .o .obj .test .test$(EXEEXT) .trs
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign tests/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign tests/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

wirAssert1.bin$(EXEEXT): $(wirAssert1_bin_OBJECTS) $(wirAssert1_bin_DEPENDENCIES) $(EXTRA_wirAssert1_bin_DEPENDENCIES) 
	@rm -f wirAssert1.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirAssert1_bin_OBJECTS) $(wirAssert1_bin_LDADD) $(LIBS)

wirAssert2.bin$(EXEEXT): $(wirAssert2_bin_OBJECTS) $(wirAssert2_bin_DEPENDENCIES) $(EXTRA_wirAssert2_bin_DEPENDENCIES) 
	@rm -f wirAssert2.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirAssert2_bin_OBJECTS) $(wirAssert2_bin_LDADD) $(LIBS)

wirAssertT1.bin$(EXEEXT): $(wirAssertT1_bin_OBJECTS) $(wirAssertT1_bin_DEPENDENCIES) $(EXTRA_wirAssertT1_bin_DEPENDENCIES) 
	@rm -f wirAssertT1.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirAssertT1_bin_OBJECTS) $(wirAssertT1_bin_LDADD) $(LIBS)

wirAssertT2.bin$(EXEEXT): $(wirAssertT2_bin_OBJECTS) $(wirAssertT2_bin_DEPENDENCIES) $(EXTRA_wirAssertT2_bin_DEPENDENCIES) 
	@rm -f wirAssertT2.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirAssertT2_bin_OBJECTS) $(wirAssertT2_bin_LDADD) $(LIBS)

wirBasicBlock1.bin$(EXEEXT): $(wirBasicBlock1_bin_OBJECTS) $(wirBasicBlock1_bin_DEPENDENCIES) $(EXTRA_wirBasicBlock1_bin_DEPENDENCIES) 
	@rm -f wirBasicBlock1.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirBasicBlock1_bin_OBJECTS) $(wirBasicBlock1_bin_LDADD) $(LIBS)

wirBasicBlock2.bin$(EXEEXT): $(wirBasicBlock2_bin_OBJECTS) $(wirBasicBlock2_bin_DEPENDENCIES) $(EXTRA_wirBasicBlock2_bin_DEPENDENCIES) 
	@rm -f wirBasicBlock2.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirBasicBlock2_bin_OBJECTS) $(wirBasicBlock2_bin_LDADD) $(LIBS)

wirBasicBlock3.bin$(EXEEXT): $(wirBasicBlock3_bin_OBJECTS) $(wirBasicBlock3_bin_DEPENDENCIES) $(EXTRA_wirBasicBlock3_bin_DEPENDENCIES) 
	@rm -f wirBasicBlock3.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirBasicBlock3_bin_OBJECTS) $(wirBasicBlock3_bin_LDADD) $(LIBS)

wirBasicBlock4.bin$(EXEEXT): $(wirBasicBlock4_bin_OBJECTS) $(wirBasicBlock4_bin_DEPENDENCIES) $(EXTRA_wirBasicBlock4_bin_DEPENDENCIES) 
	@rm -f wirBasicBlock4.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirBasicBlock4_bin_OBJECTS) $(wirBasicBlock4_bin_LDADD) $(LIBS)

wirBasicBlock5.bin$(EXEEXT): $(wirBasicBlock5_bin_OBJECTS) $(wirBasicBlock5_bin_DEPENDENCIES) $(EXTRA_wirBasicBlock5_bin_DEPENDENCIES) 
	@rm -f wirBasicBlock5.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirBasicBlock5_bin_OBJECTS) $(wirBasicBlock5_bin_LDADD) $(LIBS)

wirBasicBlock6.bin$(EXEEXT): $(wirBasicBlock6_bin_OBJECTS) $(wirBasicBlock6_bin_DEPENDENCIES) $(EXTRA_wirBasicBlock6_bin_DEPENDENCIES) 
	@rm -f wirBasicBlock6.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirBasicBlock6_bin_OBJECTS) $(wirBasicBlock6_bin_LDADD) $(LIBS)

wirBit1.bin$(EXEEXT): $(wirBit1_bin_OBJECTS) $(wirBit1_bin_DEPENDENCIES) $(EXTRA_wirBit1_bin_DEPENDENCIES) 
	@rm -f wirBit1.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirBit1_bin_OBJECTS) $(wirBit1_bin_LDADD) $(LIBS)

wirBit2.bin$(EXEEXT): $(wirBit2_bin_OBJECTS) $(wirBit2_bin_DEPENDENCIES) $(EXTRA_wirBit2_bin_DEPENDENCIES) 
	@rm -f wirBit2.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirBit2_bin_OBJECTS) $(wirBit2_bin_LDADD) $(LIBS)

wirBit3.bin$(EXEEXT): $(wirBit3_bin_OBJECTS) $(wirBit3_bin_DEPENDENCIES) $(EXTRA_wirBit3_bin_DEPENDENCIES) 
	@rm -f wirBit3.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirBit3_bin_OBJECTS) $(wirBit3_bin_LDADD) $(LIBS)

wirBit4.bin$(EXEEXT): $(wirBit4_bin_OBJECTS) $(wirBit4_bin_DEPENDENCIES) $(EXTRA_wirBit4_bin_DEPENDENCIES) 
	@rm -f wirBit4.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirBit4_bin_OBJECTS) $(wirBit4_bin_LDADD) $(LIBS)

wirBit5.bin$(EXEEXT): $(wirBit5_bin_OBJECTS) $(wirBit5_bin_DEPENDENCIES) $(EXTRA_wirBit5_bin_DEPENDENCIES) 
	@rm -f wirBit5.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirBit5_bin_OBJECTS) $(wirBit5_bin_LDADD) $(LIBS)

wirCompilationUnit1.bin$(EXEEXT): $(wirCompilationUnit1_bin_OBJECTS) $(wirCompilationUnit1_bin_DEPENDENCIES) $(EXTRA_wirCompilationUnit1_bin_DEPENDENCIES) 
	@rm -f wirCompilationUnit1.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirCompilationUnit1_bin_OBJECTS) $(wirCompilationUnit1_bin_LDADD) $(LIBS)

wirCompilationUnit2.bin$(EXEEXT): $(wirCompilationUnit2_bin_OBJECTS) $(wirCompilationUnit2_bin_DEPENDENCIES) $(EXTRA_wirCompilationUnit2_bin_DEPENDENCIES) 
	@rm -f wirCompilationUnit2.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirCompilationUnit2_bin_OBJECTS) $(wirCompilationUnit2_bin_LDADD) $(LIBS)

wirCompilationUnit3.bin$(EXEEXT): $(wirCompilationUnit3_bin_OBJECTS) $(wirCompilationUnit3_bin_DEPENDENCIES) $(EXTRA_wirCompilationUnit3_bin_DEPENDENCIES) 
	@rm -f wirCompilationUnit3.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirCompilationUnit3_bin_OBJECTS) $(wirCompilationUnit3_bin_LDADD) $(LIBS)

wirCompilationUnit4.bin$(EXEEXT): $(wirCompilationUnit4_bin_OBJECTS) $(wirCompilationUnit4_bin_DEPENDENCIES) $(EXTRA_wirCompilationUnit4_bin_DEPENDENCIES) 
	@rm -f wirCompilationUnit4.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirCompilationUnit4_bin_OBJECTS) $(wirCompilationUnit4_bin_LDADD) $(LIBS)

wirContainer1.bin$(EXEEXT): $(wirContainer1_bin_OBJECTS) $(wirContainer1_bin_DEPENDENCIES) $(EXTRA_wirContainer1_bin_DEPENDENCIES) 
	@rm -f wirContainer1.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirContainer1_bin_OBJECTS) $(wirContainer1_bin_LDADD) $(LIBS)

wirContainer2.bin$(EXEEXT): $(wirContainer2_bin_OBJECTS) $(wirContainer2_bin_DEPENDENCIES) $(EXTRA_wirContainer2_bin_DEPENDENCIES) 
	@rm -f wirContainer2.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirContainer2_bin_OBJECTS) $(wirContainer2_bin_LDADD) $(LIBS)

wirDFS1.bin$(EXEEXT): $(wirDFS1_bin_OBJECTS) $(wirDFS1_bin_DEPENDENCIES) $(EXTRA_wirDFS1_bin_DEPENDENCIES) 
	@rm -f wirDFS1.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirDFS1_bin_OBJECTS) $(wirDFS1_bin_LDADD) $(LIBS)

wirDFS2.bin$(EXEEXT): $(wirDFS2_bin_OBJECTS) $(wirDFS2_bin_DEPENDENCIES) $(EXTRA_wirDFS2_bin_DEPENDENCIES) 
	@rm -f wirDFS2.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirDFS2_bin_OBJECTS) $(wirDFS2_bin_LDADD) $(LIBS)

wirData1.bin$(EXEEXT): $(wirData1_bin_OBJECTS) $(wirData1_bin_DEPENDENCIES) $(EXTRA_wirData1_bin_DEPENDENCIES) 
	@rm -f wirData1.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirData1_bin_OBJECTS) $(wirData1_bin_LDADD) $(LIBS)

wirEmptyBlocks1.bin$(EXEEXT): $(wirEmptyBlocks1_bin_OBJECTS) $(wirEmptyBlocks1_bin_DEPENDENCIES) $(EXTRA_wirEmptyBlocks1_bin_DEPENDENCIES) 
	@rm -f wirEmptyBlocks1.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirEmptyBlocks1_bin_OBJECTS) $(wirEmptyBlocks1_bin_LDADD) $(LIBS)

wirFlowFact1.bin$(EXEEXT): $(wirFlowFact1_bin_OBJECTS) $(wirFlowFact1_bin_DEPENDENCIES) $(EXTRA_wirFlowFact1_bin_DEPENDENCIES) 
	@rm -f wirFlowFact1.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirFlowFact1_bin_OBJECTS) $(wirFlowFact1_bin_LDADD) $(LIBS)

wirFlowFact10.bin$(EXEEXT): $(wirFlowFact10_bin_OBJECTS) $(wirFlowFact10_bin_DEPENDENCIES) $(EXTRA_wirFlowFact10_bin_DEPENDENCIES) 
	@rm -f wirFlowFact10.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirFlowFact10_bin_OBJECTS) $(wirFlowFact10_bin_LDADD) $(LIBS)

wirFlowFact2.bin$(EXEEXT): $(wirFlowFact2_bin_OBJECTS) $(wirFlowFact2_bin_DEPENDENCIES) $(EXTRA_wirFlowFact2_bin_DEPENDENCIES) 
	@rm -f wirFlowFact2.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirFlowFact2_bin_OBJECTS) $(wirFlowFact2_bin_LDADD) $(LIBS)

wirFlowFact3.bin$(EXEEXT): $(wirFlowFact3_bin_OBJECTS) $(wirFlowFact3_bin_DEPENDENCIES) $(EXTRA_wirFlowFact3_bin_DEPENDENCIES) 
	@rm -f wirFlowFact3.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirFlowFact3_bin_OBJECTS) $(wirFlowFact3_bin_LDADD) $(LIBS)

wirFlowFact4.bin$(EXEEXT): $(wirFlowFact4_bin_OBJECTS) $(wirFlowFact4_bin_DEPENDENCIES) $(EXTRA_wirFlowFact4_bin_DEPENDENCIES) 
	@rm -f wirFlowFact4.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirFlowFact4_bin_OBJECTS) $(wirFlowFact4_bin_LDADD) $(LIBS)

wirFlowFact5.bin$(EXEEXT): $(wirFlowFact5_bin_OBJECTS) $(wirFlowFact5_bin_DEPENDENCIES) $(EXTRA_wirFlowFact5_bin_DEPENDENCIES) 
	@rm -f wirFlowFact5.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirFlowFact5_bin_OBJECTS) $(wirFlowFact5_bin_LDADD) $(LIBS)

wirFlowFact6.bin$(EXEEXT): $(wirFlowFact6_bin_OBJECTS) $(wirFlowFact6_bin_DEPENDENCIES) $(EXTRA_wirFlowFact6_bin_DEPENDENCIES) 
	@rm -f wirFlowFact6.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirFlowFact6_bin_OBJECTS) $(wirFlowFact6_bin_LDADD) $(LIBS)

wirFlowFact7.bin$(EXEEXT): $(wirFlowFact7_bin_OBJECTS) $(wirFlowFact7_bin_DEPENDENCIES) $(EXTRA_wirFlowFact7_bin_DEPENDENCIES) 
	@rm -f wirFlowFact7.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirFlowFact7_bin_OBJECTS) $(wirFlowFact7_bin_LDADD) $(LIBS)

wirFlowFact8.bin$(EXEEXT): $(wirFlowFact8_bin_OBJECTS) $(wirFlowFact8_bin_DEPENDENCIES) $(EXTRA_wirFlowFact8_bin_DEPENDENCIES) 
	@rm -f wirFlowFact8.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirFlowFact8_bin_OBJECTS) $(wirFlowFact8_bin_LDADD) $(LIBS)

wirFlowFact9.bin$(EXEEXT): $(wirFlowFact9_bin_OBJECTS) $(wirFlowFact9_bin_DEPENDENCIES) $(EXTRA_wirFlowFact9_bin_DEPENDENCIES) 
	@rm -f wirFlowFact9.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirFlowFact9_bin_OBJECTS) $(wirFlowFact9_bin_LDADD) $(LIBS)

wirFunction1.bin$(EXEEXT): $(wirFunction1_bin_OBJECTS) $(wirFunction1_bin_DEPENDENCIES) $(EXTRA_wirFunction1_bin_DEPENDENCIES) 
	@rm -f wirFunction1.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirFunction1_bin_OBJECTS) $(wirFunction1_bin_LDADD) $(LIBS)

wirFunction10.bin$(EXEEXT): $(wirFunction10_bin_OBJECTS) $(wirFunction10_bin_DEPENDENCIES) $(EXTRA_wirFunction10_bin_DEPENDENCIES) 
	@rm -f wirFunction10.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirFunction10_bin_OBJECTS) $(wirFunction10_bin_LDADD) $(LIBS)

wirFunction11.bin$(EXEEXT): $(wirFunction11_bin_OBJECTS) $(wirFunction11_bin_DEPENDENCIES) $(EXTRA_wirFunction11_bin_DEPENDENCIES) 
	@rm -f wirFunction11.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirFunction11_bin_OBJECTS) $(wirFunction11_bin_LDADD) $(LIBS)

wirFunction12.bin$(EXEEXT): $(wirFunction12_bin_OBJECTS) $(wirFunction12_bin_DEPENDENCIES) $(EXTRA_wirFunction12_bin_DEPENDENCIES) 
	@rm -f wirFunction12.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirFunction12_bin_OBJECTS) $(wirFunction12_bin_LDADD) $(LIBS)

wirFunction13.bin$(EXEEXT): $(wirFunction13_bin_OBJECTS) $(wirFunction13_bin_DEPENDENCIES) $(EXTRA_wirFunction13_bin_DEPENDENCIES) 
	@rm -f wirFunction13.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirFunction13_bin_OBJECTS) $(wirFunction13_bin_LDADD) $(LIBS)

wirFunction14.bin$(EXEEXT): $(wirFunction14_bin_OBJECTS) $(wirFunction14_bin_DEPENDENCIES) $(EXTRA_wirFunction14_bin_DEPENDENCIES) 
	@rm -f wirFunction14.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirFunction14_bin_OBJECTS) $(wirFunction14_bin_LDADD) $(LIBS)

wirFunction2.bin$(EXEEXT): $(wirFunction2_bin_OBJECTS) $(wirFunction2_bin_DEPENDENCIES) $(EXTRA_wirFunction2_bin_DEPENDENCIES) 
	@rm -f wirFunction2.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirFunction2_bin_OBJECTS) $(wirFunction2_bin_LDADD) $(LIBS)

wirFunction3.bin$(EXEEXT): $(wirFunction3_bin_OBJECTS) $(wirFunction3_bin_DEPENDENCIES) $(EXTRA_wirFunction3_bin_DEPENDENCIES) 
	@rm -f wirFunction3.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirFunction3_bin_OBJECTS) $(wirFunction3_bin_LDADD) $(LIBS)

wirFunction4.bin$(EXEEXT): $(wirFunction4_bin_OBJECTS) $(wirFunction4_bin_DEPENDENCIES) $(EXTRA_wirFunction4_bin_DEPENDENCIES) 
	@rm -f wirFunction4.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirFunction4_bin_OBJECTS) $(wirFunction4_bin_LDADD) $(LIBS)

wirFunction5.bin$(EXEEXT): $(wirFunction5_bin_OBJECTS) $(wirFunction5_bin_DEPENDENCIES) $(EXTRA_wirFunction5_bin_DEPENDENCIES) 
	@rm -f wirFunction5.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirFunction5_bin_OBJECTS) $(wirFunction5_bin_LDADD) $(LIBS)

wirFunction6.bin$(EXEEXT): $(wirFunction6_bin_OBJECTS) $(wirFunction6_bin_DEPENDENCIES) $(EXTRA_wirFunction6_bin_DEPENDENCIES) 
	@rm -f wirFunction6.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirFunction6_bin_OBJECTS) $(wirFunction6_bin_LDADD) $(LIBS)

wirFunction7.bin$(EXEEXT): $(wirFunction7_bin_OBJECTS) $(wirFunction7_bin_DEPENDENCIES) $(EXTRA_wirFunction7_bin_DEPENDENCIES) 
	@rm -f wirFunction7.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirFunction7_bin_OBJECTS) $(wirFunction7_bin_LDADD) $(LIBS)

wirFunction8.bin$(EXEEXT): $(wirFunction8_bin_OBJECTS) $(wirFunction8_bin_DEPENDENCIES) $(EXTRA_wirFunction8_bin_DEPENDENCIES) 
	@rm -f wirFunction8.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirFunction8_bin_OBJECTS) $(wirFunction8_bin_LDADD) $(LIBS)

wirFunction9.bin$(EXEEXT): $(wirFunction9_bin_OBJECTS) $(wirFunction9_bin_DEPENDENCIES) $(EXTRA_wirFunction9_bin_DEPENDENCIES) 
	@rm -f wirFunction9.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirFunction9_bin_OBJECTS) $(wirFunction9_bin_LDADD) $(LIBS)

wirInstruction1.bin$(EXEEXT): $(wirInstruction1_bin_OBJECTS) $(wirInstruction1_bin_DEPENDENCIES) $(EXTRA_wirInstruction1_bin_DEPENDENCIES) 
	@rm -f wirInstruction1.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirInstruction1_bin_OBJECTS) $(wirInstruction1_bin_LDADD) $(LIBS)

wirInstruction2.bin$(EXEEXT): $(wirInstruction2_bin_OBJECTS) $(wirInstruction2_bin_DEPENDENCIES) $(EXTRA_wirInstruction2_bin_DEPENDENCIES) 
	@rm -f wirInstruction2.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirInstruction2_bin_OBJECTS) $(wirInstruction2_bin_LDADD) $(LIBS)

wirInstruction3.bin$(EXEEXT): $(wirInstruction3_bin_OBJECTS) $(wirInstruction3_bin_DEPENDENCIES) $(EXTRA_wirInstruction3_bin_DEPENDENCIES) 
	@rm -f wirInstruction3.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirInstruction3_bin_OBJECTS) $(wirInstruction3_bin_LDADD) $(LIBS)

wirInstruction4.bin$(EXEEXT): $(wirInstruction4_bin_OBJECTS) $(wirInstruction4_bin_DEPENDENCIES) $(EXTRA_wirInstruction4_bin_DEPENDENCIES) 
	@rm -f wirInstruction4.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirInstruction4_bin_OBJECTS) $(wirInstruction4_bin_LDADD) $(LIBS)

wirLabelParameter1.bin$(EXEEXT): $(wirLabelParameter1_bin_OBJECTS) $(wirLabelParameter1_bin_DEPENDENCIES) $(EXTRA_wirLabelParameter1_bin_DEPENDENCIES) 
	@rm -f wirLabelParameter1.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirLabelParameter1_bin_OBJECTS) $(wirLabelParameter1_bin_LDADD) $(LIBS)

wirLabelParameter2.bin$(EXEEXT): $(wirLabelParameter2_bin_OBJECTS) $(wirLabelParameter2_bin_DEPENDENCIES) $(EXTRA_wirLabelParameter2_bin_DEPENDENCIES) 
	@rm -f wirLabelParameter2.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirLabelParameter2_bin_OBJECTS) $(wirLabelParameter2_bin_LDADD) $(LIBS)

wirLabelParameter3.bin$(EXEEXT): $(wirLabelParameter3_bin_OBJECTS) $(wirLabelParameter3_bin_DEPENDENCIES) $(EXTRA_wirLabelParameter3_bin_DEPENDENCIES) 
	@rm -f wirLabelParameter3.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirLabelParameter3_bin_OBJECTS) $(wirLabelParameter3_bin_LDADD) $(LIBS)

wirList1.bin$(EXEEXT): $(wirList1_bin_OBJECTS) $(wirList1_bin_DEPENDENCIES) $(EXTRA_wirList1_bin_DEPENDENCIES) 
	@rm -f wirList1.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirList1_bin_OBJECTS) $(wirList1_bin_LDADD) $(LIBS)

wirList10.bin$(EXEEXT): $(wirList10_bin_OBJECTS) $(wirList10_bin_DEPENDENCIES) $(EXTRA_wirList10_bin_DEPENDENCIES) 
	@rm -f wirList10.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirList10_bin_OBJECTS) $(wirList10_bin_LDADD) $(LIBS)

wirList11.bin$(EXEEXT): $(wirList11_bin_OBJECTS) $(wirList11_bin_DEPENDENCIES) $(EXTRA_wirList11_bin_DEPENDENCIES) 
	@rm -f wirList11.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirList11_bin_OBJECTS) $(wirList11_bin_LDADD) $(LIBS)

wirList12.bin$(EXEEXT): $(wirList12_bin_OBJECTS) $(wirList12_bin_DEPENDENCIES) $(EXTRA_wirList12_bin_DEPENDENCIES) 
	@rm -f wirList12.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirList12_bin_OBJECTS) $(wirList12_bin_LDADD) $(LIBS)

wirList13.bin$(EXEEXT): $(wirList13_bin_OBJECTS) $(wirList13_bin_DEPENDENCIES) $(EXTRA_wirList13_bin_DEPENDENCIES) 
	@rm -f wirList13.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirList13_bin_OBJECTS) $(wirList13_bin_LDADD) $(LIBS)

wirList14.bin$(EXEEXT): $(wirList14_bin_OBJECTS) $(wirList14_bin_DEPENDENCIES) $(EXTRA_wirList14_bin_DEPENDENCIES) 
	@rm -f wirList14.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirList14_bin_OBJECTS) $(wirList14_bin_LDADD) $(LIBS)

wirList15.bin$(EXEEXT): $(wirList15_bin_OBJECTS) $(wirList15_bin_DEPENDENCIES) $(EXTRA_wirList15_bin_DEPENDENCIES) 
	@rm -f wirList15.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirList15_bin_OBJECTS) $(wirList15_bin_LDADD) $(LIBS)

wirList16.bin$(EXEEXT): $(wirList16_bin_OBJECTS) $(wirList16_bin_DEPENDENCIES) $(EXTRA_wirList16_bin_DEPENDENCIES) 
	@rm -f wirList16.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirList16_bin_OBJECTS) $(wirList16_bin_LDADD) $(LIBS)

wirList2.bin$(EXEEXT): $(wirList2_bin_OBJECTS) $(wirList2_bin_DEPENDENCIES) $(EXTRA_wirList2_bin_DEPENDENCIES) 
	@rm -f wirList2.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirList2_bin_OBJECTS) $(wirList2_bin_LDADD) $(LIBS)

wirList3.bin$(EXEEXT): $(wirList3_bin_OBJECTS) $(wirList3_bin_DEPENDENCIES) $(EXTRA_wirList3_bin_DEPENDENCIES) 
	@rm -f wirList3.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirList3_bin_OBJECTS) $(wirList3_bin_LDADD) $(LIBS)

wirList4.bin$(EXEEXT): $(wirList4_bin_OBJECTS) $(wirList4_bin_DEPENDENCIES) $(EXTRA_wirList4_bin_DEPENDENCIES) 
	@rm -f wirList4.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirList4_bin_OBJECTS) $(wirList4_bin_LDADD) $(LIBS)

wirList5.bin$(EXEEXT): $(wirList5_bin_OBJECTS) $(wirList5_bin_DEPENDENCIES) $(EXTRA_wirList5_bin_DEPENDENCIES) 
	@rm -f wirList5.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirList5_bin_OBJECTS) $(wirList5_bin_LDADD) $(LIBS)

wirList6.bin$(EXEEXT): $(wirList6_bin_OBJECTS) $(wirList6_bin_DEPENDENCIES) $(EXTRA_wirList6_bin_DEPENDENCIES) 
	@rm -f wirList6.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirList6_bin_OBJECTS) $(wirList6_bin_LDADD) $(LIBS)

wirList7.bin$(EXEEXT): $(wirList7_bin_OBJECTS) $(wirList7_bin_DEPENDENCIES) $(EXTRA_wirList7_bin_DEPENDENCIES) 
	@rm -f wirList7.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirList7_bin_OBJECTS) $(wirList7_bin_LDADD) $(LIBS)

wirOperation1.bin$(EXEEXT): $(wirOperation1_bin_OBJECTS) $(wirOperation1_bin_DEPENDENCIES) $(EXTRA_wirOperation1_bin_DEPENDENCIES) 
	@rm -f wirOperation1.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirOperation1_bin_OBJECTS) $(wirOperation1_bin_LDADD) $(LIBS)

wirOperation2.bin$(EXEEXT): $(wirOperation2_bin_OBJECTS) $(wirOperation2_bin_DEPENDENCIES) $(EXTRA_wirOperation2_bin_DEPENDENCIES) 
	@rm -f wirOperation2.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirOperation2_bin_OBJECTS) $(wirOperation2_bin_LDADD) $(LIBS)

wirOperation3.bin$(EXEEXT): $(wirOperation3_bin_OBJECTS) $(wirOperation3_bin_DEPENDENCIES) $(EXTRA_wirOperation3_bin_DEPENDENCIES) 
	@rm -f wirOperation3.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirOperation3_bin_OBJECTS) $(wirOperation3_bin_LDADD) $(LIBS)

wirOperation4.bin$(EXEEXT): $(wirOperation4_bin_OBJECTS) $(wirOperation4_bin_DEPENDENCIES) $(EXTRA_wirOperation4_bin_DEPENDENCIES) 
	@rm -f wirOperation4.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirOperation4_bin_OBJECTS) $(wirOperation4_bin_LDADD) $(LIBS)

wirOperation5.bin$(EXEEXT): $(wirOperation5_bin_OBJECTS) $(wirOperation5_bin_DEPENDENCIES) $(EXTRA_wirOperation5_bin_DEPENDENCIES) 
	@rm -f wirOperation5.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirOperation5_bin_OBJECTS) $(wirOperation5_bin_LDADD) $(LIBS)

wirOperation6.bin$(EXEEXT): $(wirOperation6_bin_OBJECTS) $(wirOperation6_bin_DEPENDENCIES) $(EXTRA_wirOperation6_bin_DEPENDENCIES) 
	@rm -f wirOperation6.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirOperation6_bin_OBJECTS) $(wirOperation6_bin_LDADD) $(LIBS)

wirOperation7.bin$(EXEEXT): $(wirOperation7_bin_OBJECTS) $(wirOperation7_bin_DEPENDENCIES) $(EXTRA_wirOperation7_bin_DEPENDENCIES) 
	@rm -f wirOperation7.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirOperation7_bin_OBJECTS) $(wirOperation7_bin_LDADD) $(LIBS)

wirOperation8.bin$(EXEEXT): $(wirOperation8_bin_OBJECTS) $(wirOperation8_bin_DEPENDENCIES) $(EXTRA_wirOperation8_bin_DEPENDENCIES) 
	@rm -f wirOperation8.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirOperation8_bin_OBJECTS) $(wirOperation8_bin_LDADD) $(LIBS)

wirParameter1.bin$(EXEEXT): $(wirParameter1_bin_OBJECTS) $(wirParameter1_bin_DEPENDENCIES) $(EXTRA_wirParameter1_bin_DEPENDENCIES) 
	@rm -f wirParameter1.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirParameter1_bin_OBJECTS) $(wirParameter1_bin_LDADD) $(LIBS)

wirParameter2.bin$(EXEEXT): $(wirParameter2_bin_OBJECTS) $(wirParameter2_bin_DEPENDENCIES) $(EXTRA_wirParameter2_bin_DEPENDENCIES) 
	@rm -f wirParameter2.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirParameter2_bin_OBJECTS) $(wirParameter2_bin_LDADD) $(LIBS)

wirParameter3.bin$(EXEEXT): $(wirParameter3_bin_OBJECTS) $(wirParameter3_bin_DEPENDENCIES) $(EXTRA_wirParameter3_bin_DEPENDENCIES) 
	@rm -f wirParameter3.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirParameter3_bin_OBJECTS) $(wirParameter3_bin_LDADD) $(LIBS)

wirParameter4.bin$(EXEEXT): $(wirParameter4_bin_OBJECTS) $(wirParameter4_bin_DEPENDENCIES) $(EXTRA_wirParameter4_bin_DEPENDENCIES) 
	@rm -f wirParameter4.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirParameter4_bin_OBJECTS) $(wirParameter4_bin_LDADD) $(LIBS)

wirParameter5.bin$(EXEEXT): $(wirParameter5_bin_OBJECTS) $(wirParameter5_bin_DEPENDENCIES) $(EXTRA_wirParameter5_bin_DEPENDENCIES) 
	@rm -f wirParameter5.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirParameter5_bin_OBJECTS) $(wirParameter5_bin_LDADD) $(LIBS)

wirParameter6.bin$(EXEEXT): $(wirParameter6_bin_OBJECTS) $(wirParameter6_bin_DEPENDENCIES) $(EXTRA_wirParameter6_bin_DEPENDENCIES) 
	@rm -f wirParameter6.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirParameter6_bin_OBJECTS) $(wirParameter6_bin_LDADD) $(LIBS)

wirParameter7.bin$(EXEEXT): $(wirParameter7_bin_OBJECTS) $(wirParameter7_bin_DEPENDENCIES) $(EXTRA_wirParameter7_bin_DEPENDENCIES) 
	@rm -f wirParameter7.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirParameter7_bin_OBJECTS) $(wirParameter7_bin_LDADD) $(LIBS)

wirRedundantBlocks1.bin$(EXEEXT): $(wirRedundantBlocks1_bin_OBJECTS) $(wirRedundantBlocks1_bin_DEPENDENCIES) $(EXTRA_wirRedundantBlocks1_bin_DEPENDENCIES) 
	@rm -f wirRedundantBlocks1.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirRedundantBlocks1_bin_OBJECTS) $(wirRedundantBlocks1_bin_LDADD) $(LIBS)

wirRegisterParameter1.bin$(EXEEXT): $(wirRegisterParameter1_bin_OBJECTS) $(wirRegisterParameter1_bin_DEPENDENCIES) $(EXTRA_wirRegisterParameter1_bin_DEPENDENCIES) 
	@rm -f wirRegisterParameter1.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirRegisterParameter1_bin_OBJECTS) $(wirRegisterParameter1_bin_LDADD) $(LIBS)

wirSignedImmediateParameter1.bin$(EXEEXT): $(wirSignedImmediateParameter1_bin_OBJECTS) $(wirSignedImmediateParameter1_bin_DEPENDENCIES) $(EXTRA_wirSignedImmediateParameter1_bin_DEPENDENCIES) 
	@rm -f wirSignedImmediateParameter1.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirSignedImmediateParameter1_bin_OBJECTS) $(wirSignedImmediateParameter1_bin_LDADD) $(LIBS)

wirStringParameter1.bin$(EXEEXT): $(wirStringParameter1_bin_OBJECTS) $(wirStringParameter1_bin_DEPENDENCIES) $(EXTRA_wirStringParameter1_bin_DEPENDENCIES) 
	@rm -f wirStringParameter1.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirStringParameter1_bin_OBJECTS) $(wirStringParameter1_bin_LDADD) $(LIBS)

wirStructuralAnalysis1.bin$(EXEEXT): $(wirStructuralAnalysis1_bin_OBJECTS) $(wirStructuralAnalysis1_bin_DEPENDENCIES) $(EXTRA_wirStructuralAnalysis1_bin_DEPENDENCIES) 
	@rm -f wirStructuralAnalysis1.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirStructuralAnalysis1_bin_OBJECTS) $(wirStructuralAnalysis1_bin_LDADD) $(LIBS)

wirStructuralAnalysis10.bin$(EXEEXT): $(wirStructuralAnalysis10_bin_OBJECTS) $(wirStructuralAnalysis10_bin_DEPENDENCIES) $(EXTRA_wirStructuralAnalysis10_bin_DEPENDENCIES) 
	@rm -f wirStructuralAnalysis10.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirStructuralAnalysis10_bin_OBJECTS) $(wirStructuralAnalysis10_bin_LDADD) $(LIBS)

wirStructuralAnalysis11.bin$(EXEEXT): $(wirStructuralAnalysis11_bin_OBJECTS) $(wirStructuralAnalysis11_bin_DEPENDENCIES) $(EXTRA_wirStructuralAnalysis11_bin_DEPENDENCIES) 
	@rm -f wirStructuralAnalysis11.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirStructuralAnalysis11_bin_OBJECTS) $(wirStructuralAnalysis11_bin_LDADD) $(LIBS)

wirStructuralAnalysis12.bin$(EXEEXT): $(wirStructuralAnalysis12_bin_OBJECTS) $(wirStructuralAnalysis12_bin_DEPENDENCIES) $(EXTRA_wirStructuralAnalysis12_bin_DEPENDENCIES) 
	@rm -f wirStructuralAnalysis12.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirStructuralAnalysis12_bin_OBJECTS) $(wirStructuralAnalysis12_bin_LDADD) $(LIBS)

wirStructuralAnalysis13.bin$(EXEEXT): $(wirStructuralAnalysis13_bin_OBJECTS) $(wirStructuralAnalysis13_bin_DEPENDENCIES) $(EXTRA_wirStructuralAnalysis13_bin_DEPENDENCIES) 
	@rm -f wirStructuralAnalysis13.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirStructuralAnalysis13_bin_OBJECTS) $(wirStructuralAnalysis13_bin_LDADD) $(LIBS)

wirStructuralAnalysis14.bin$(EXEEXT): $(wirStructuralAnalysis14_bin_OBJECTS) $(wirStructuralAnalysis14_bin_DEPENDENCIES) $(EXTRA_wirStructuralAnalysis14_bin_DEPENDENCIES) 
	@rm -f wirStructuralAnalysis14.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirStructuralAnalysis14_bin_OBJECTS) $(wirStructuralAnalysis14_bin_LDADD) $(LIBS)

wirStructuralAnalysis2.bin$(EXEEXT): $(wirStructuralAnalysis2_bin_OBJECTS) $(wirStructuralAnalysis2_bin_DEPENDENCIES) $(EXTRA_wirStructuralAnalysis2_bin_DEPENDENCIES) 
	@rm -f wirStructuralAnalysis2.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirStructuralAnalysis2_bin_OBJECTS) $(wirStructuralAnalysis2_bin_LDADD) $(LIBS)

wirStructuralAnalysis3.bin$(EXEEXT): $(wirStructuralAnalysis3_bin_OBJECTS) $(wirStructuralAnalysis3_bin_DEPENDENCIES) $(EXTRA_wirStructuralAnalysis3_bin_DEPENDENCIES) 
	@rm -f wirStructuralAnalysis3.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirStructuralAnalysis3_bin_OBJECTS) $(wirStructuralAnalysis3_bin_LDADD) $(LIBS)

wirStructuralAnalysis4.bin$(EXEEXT): $(wirStructuralAnalysis4_bin_OBJECTS) $(wirStructuralAnalysis4_bin_DEPENDENCIES) $(EXTRA_wirStructuralAnalysis4_bin_DEPENDENCIES) 
	@rm -f wirStructuralAnalysis4.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirStructuralAnalysis4_bin_OBJECTS) $(wirStructuralAnalysis4_bin_LDADD) $(LIBS)

wirStructuralAnalysis5.bin$(EXEEXT): $(wirStructuralAnalysis5_bin_OBJECTS) $(wirStructuralAnalysis5_bin_DEPENDENCIES) $(EXTRA_wirStructuralAnalysis5_bin_DEPENDENCIES) 
	@rm -f wirStructuralAnalysis5.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirStructuralAnalysis5_bin_OBJECTS) $(wirStructuralAnalysis5_bin_LDADD) $(LIBS)

wirStructuralAnalysis6.bin$(EXEEXT): $(wirStructuralAnalysis6_bin_OBJECTS) $(wirStructuralAnalysis6_bin_DEPENDENCIES) $(EXTRA_wirStructuralAnalysis6_bin_DEPENDENCIES) 
	@rm -f wirStructuralAnalysis6.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirStructuralAnalysis6_bin_OBJECTS) $(wirStructuralAnalysis6_bin_LDADD) $(LIBS)

wirStructuralAnalysis7.bin$(EXEEXT): $(wirStructuralAnalysis7_bin_OBJECTS) $(wirStructuralAnalysis7_bin_DEPENDENCIES) $(EXTRA_wirStructuralAnalysis7_bin_DEPENDENCIES) 
	@rm -f wirStructuralAnalysis7.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirStructuralAnalysis7_bin_OBJECTS) $(wirStructuralAnalysis7_bin_LDADD) $(LIBS)

wirStructuralAnalysis8.bin$(EXEEXT): $(wirStructuralAnalysis8_bin_OBJECTS) $(wirStructuralAnalysis8_bin_DEPENDENCIES) $(EXTRA_wirStructuralAnalysis8_bin_DEPENDENCIES) 
	@rm -f wirStructuralAnalysis8.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirStructuralAnalysis8_bin_OBJECTS) $(wirStructuralAnalysis8_bin_LDADD) $(LIBS)

wirStructuralAnalysis9.bin$(EXEEXT): $(wirStructuralAnalysis9_bin_OBJECTS) $(wirStructuralAnalysis9_bin_DEPENDENCIES) $(EXTRA_wirStructuralAnalysis9_bin_DEPENDENCIES) 
	@rm -f wirStructuralAnalysis9.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirStructuralAnalysis9_bin_OBJECTS) $(wirStructuralAnalysis9_bin_LDADD) $(LIBS)

wirSymboltable1.bin$(EXEEXT): $(wirSymboltable1_bin_OBJECTS) $(wirSymboltable1_bin_DEPENDENCIES) $(EXTRA_wirSymboltable1_bin_DEPENDENCIES) 
	@rm -f wirSymboltable1.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirSymboltable1_bin_OBJECTS) $(wirSymboltable1_bin_LDADD) $(LIBS)

wirSymboltable2.bin$(EXEEXT): $(wirSymboltable2_bin_OBJECTS) $(wirSymboltable2_bin_DEPENDENCIES) $(EXTRA_wirSymboltable2_bin_DEPENDENCIES) 
	@rm -f wirSymboltable2.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirSymboltable2_bin_OBJECTS) $(wirSymboltable2_bin_LDADD) $(LIBS)

wirSymboltable3.bin$(EXEEXT): $(wirSymboltable3_bin_OBJECTS) $(wirSymboltable3_bin_DEPENDENCIES) $(EXTRA_wirSymboltable3_bin_DEPENDENCIES) 
	@rm -f wirSymboltable3.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirSymboltable3_bin_OBJECTS) $(wirSymboltable3_bin_LDADD) $(LIBS)

wirSymboltable4.bin$(EXEEXT): $(wirSymboltable4_bin_OBJECTS) $(wirSymboltable4_bin_DEPENDENCIES) $(EXTRA_wirSymboltable4_bin_DEPENDENCIES) 
	@rm -f wirSymboltable4.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirSymboltable4_bin_OBJECTS) $(wirSymboltable4_bin_LDADD) $(LIBS)

wirSymboltable5.bin$(EXEEXT): $(wirSymboltable5_bin_OBJECTS) $(wirSymboltable5_bin_DEPENDENCIES) $(EXTRA_wirSymboltable5_bin_DEPENDENCIES) 
	@rm -f wirSymboltable5.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirSymboltable5_bin_OBJECTS) $(wirSymboltable5_bin_LDADD) $(LIBS)

wirSymboltable6.bin$(EXEEXT): $(wirSymboltable6_bin_OBJECTS) $(wirSymboltable6_bin_DEPENDENCIES) $(EXTRA_wirSymboltable6_bin_DEPENDENCIES) 
	@rm -f wirSymboltable6.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirSymboltable6_bin_OBJECTS) $(wirSymboltable6_bin_LDADD) $(LIBS)

wirSymboltable7.bin$(EXEEXT): $(wirSymboltable7_bin_OBJECTS) $(wirSymboltable7_bin_DEPENDENCIES) $(EXTRA_wirSymboltable7_bin_DEPENDENCIES) 
	@rm -f wirSymboltable7.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirSymboltable7_bin_OBJECTS) $(wirSymboltable7_bin_LDADD) $(LIBS)

wirSystem1.bin$(EXEEXT): $(wirSystem1_bin_OBJECTS) $(wirSystem1_bin_DEPENDENCIES) $(EXTRA_wirSystem1_bin_DEPENDENCIES) 
	@rm -f wirSystem1.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirSystem1_bin_OBJECTS) $(wirSystem1_bin_LDADD) $(LIBS)

wirSystem10.bin$(EXEEXT): $(wirSystem10_bin_OBJECTS) $(wirSystem10_bin_DEPENDENCIES) $(EXTRA_wirSystem10_bin_DEPENDENCIES) 
	@rm -f wirSystem10.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirSystem10_bin_OBJECTS) $(wirSystem10_bin_LDADD) $(LIBS)

wirSystem2.bin$(EXEEXT): $(wirSystem2_bin_OBJECTS) $(wirSystem2_bin_DEPENDENCIES) $(EXTRA_wirSystem2_bin_DEPENDENCIES) 
	@rm -f wirSystem2.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirSystem2_bin_OBJECTS) $(wirSystem2_bin_LDADD) $(LIBS)

wirSystem3.bin$(EXEEXT): $(wirSystem3_bin_OBJECTS) $(wirSystem3_bin_DEPENDENCIES) $(EXTRA_wirSystem3_bin_DEPENDENCIES) 
	@rm -f wirSystem3.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirSystem3_bin_OBJECTS) $(wirSystem3_bin_LDADD) $(LIBS)

wirSystem4.bin$(EXEEXT): $(wirSystem4_bin_OBJECTS) $(wirSystem4_bin_DEPENDENCIES) $(EXTRA_wirSystem4_bin_DEPENDENCIES) 
	@rm -f wirSystem4.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirSystem4_bin_OBJECTS) $(wirSystem4_bin_LDADD) $(LIBS)

wirSystem5.bin$(EXEEXT): $(wirSystem5_bin_OBJECTS) $(wirSystem5_bin_DEPENDENCIES) $(EXTRA_wirSystem5_bin_DEPENDENCIES) 
	@rm -f wirSystem5.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirSystem5_bin_OBJECTS) $(wirSystem5_bin_LDADD) $(LIBS)

wirSystem6.bin$(EXEEXT): $(wirSystem6_bin_OBJECTS) $(wirSystem6_bin_DEPENDENCIES) $(EXTRA_wirSystem6_bin_DEPENDENCIES) 
	@rm -f wirSystem6.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirSystem6_bin_OBJECTS) $(wirSystem6_bin_LDADD) $(LIBS)

wirSystem7.bin$(EXEEXT): $(wirSystem7_bin_OBJECTS) $(wirSystem7_bin_DEPENDENCIES) $(EXTRA_wirSystem7_bin_DEPENDENCIES) 
	@rm -f wirSystem7.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirSystem7_bin_OBJECTS) $(wirSystem7_bin_LDADD) $(LIBS)

wirSystem8.bin$(EXEEXT): $(wirSystem8_bin_OBJECTS) $(wirSystem8_bin_DEPENDENCIES) $(EXTRA_wirSystem8_bin_DEPENDENCIES) 
	@rm -f wirSystem8.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirSystem8_bin_OBJECTS) $(wirSystem8_bin_LDADD) $(LIBS)

wirSystem9.bin$(EXEEXT): $(wirSystem9_bin_OBJECTS) $(wirSystem9_bin_DEPENDENCIES) $(EXTRA_wirSystem9_bin_DEPENDENCIES) 
	@rm -f wirSystem9.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirSystem9_bin_OBJECTS) $(wirSystem9_bin_LDADD) $(LIBS)

wirUnreachableBlocks1.bin$(EXEEXT): $(wirUnreachableBlocks1_bin_OBJECTS) $(wirUnreachableBlocks1_bin_DEPENDENCIES) $(EXTRA_wirUnreachableBlocks1_bin_DEPENDENCIES) 
	@rm -f wirUnreachableBlocks1.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirUnreachableBlocks1_bin_OBJECTS) $(wirUnreachableBlocks1_bin_LDADD) $(LIBS)

wirUnsignedImmediateParameter1.bin$(EXEEXT): $(wirUnsignedImmediateParameter1_bin_OBJECTS) $(wirUnsignedImmediateParameter1_bin_DEPENDENCIES) $(EXTRA_wirUnsignedImmediateParameter1_bin_DEPENDENCIES) 
	@rm -f wirUnsignedImmediateParameter1.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirUnsignedImmediateParameter1_bin_OBJECTS) $(wirUnsignedImmediateParameter1_bin_LDADD) $(LIBS)

wirUnsignedImmediateParameter2.bin$(EXEEXT): $(wirUnsignedImmediateParameter2_bin_OBJECTS) $(wirUnsignedImmediateParameter2_bin_DEPENDENCIES) $(EXTRA_wirUnsignedImmediateParameter2_bin_DEPENDENCIES) 
	@rm -f wirUnsignedImmediateParameter2.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirUnsignedImmediateParameter2_bin_OBJECTS) $(wirUnsignedImmediateParameter2_bin_LDADD) $(LIBS)

wirUnusedVRegs1.bin$(EXEEXT): $(wirUnusedVRegs1_bin_OBJECTS) $(wirUnusedVRegs1_bin_DEPENDENCIES) $(EXTRA_wirUnusedVRegs1_bin_DEPENDENCIES) 
	@rm -f wirUnusedVRegs1.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirUnusedVRegs1_bin_OBJECTS) $(wirUnusedVRegs1_bin_LDADD) $(LIBS)

wirUpDownValue1.bin$(EXEEXT): $(wirUpDownValue1_bin_OBJECTS) $(wirUpDownValue1_bin_DEPENDENCIES) $(EXTRA_wirUpDownValue1_bin_DEPENDENCIES) 
	@rm -f wirUpDownValue1.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirUpDownValue1_bin_OBJECTS) $(wirUpDownValue1_bin_LDADD) $(LIBS)

wirUpDownValue2.bin$(EXEEXT): $(wirUpDownValue2_bin_OBJECTS) $(wirUpDownValue2_bin_DEPENDENCIES) $(EXTRA_wirUpDownValue2_bin_DEPENDENCIES) 
	@rm -f wirUpDownValue2.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirUpDownValue2_bin_OBJECTS) $(wirUpDownValue2_bin_LDADD) $(LIBS)

wirUpDownValue3.bin$(EXEEXT): $(wirUpDownValue3_bin_OBJECTS) $(wirUpDownValue3_bin_DEPENDENCIES) $(EXTRA_wirUpDownValue3_bin_DEPENDENCIES) 
	@rm -f wirUpDownValue3.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirUpDownValue3_bin_OBJECTS) $(wirUpDownValue3_bin_LDADD) $(LIBS)

wirUpDownValue4.bin$(EXEEXT): $(wirUpDownValue4_bin_OBJECTS) $(wirUpDownValue4_bin_DEPENDENCIES) $(EXTRA_wirUpDownValue4_bin_DEPENDENCIES) 
	@rm -f wirUpDownValue4.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirUpDownValue4_bin_OBJECTS) $(wirUpDownValue4_bin_LDADD) $(LIBS)

wirVirtualRegister1.bin$(EXEEXT): $(wirVirtualRegister1_bin_OBJECTS) $(wirVirtualRegister1_bin_DEPENDENCIES) $(EXTRA_wirVirtualRegister1_bin_DEPENDENCIES) 
	@rm -f wirVirtualRegister1.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirVirtualRegister1_bin_OBJECTS) $(wirVirtualRegister1_bin_LDADD) $(LIBS)

wirVirtualRegister2.bin$(EXEEXT): $(wirVirtualRegister2_bin_OBJECTS) $(wirVirtualRegister2_bin_DEPENDENCIES) $(EXTRA_wirVirtualRegister2_bin_DEPENDENCIES) 
	@rm -f wirVirtualRegister2.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirVirtualRegister2_bin_OBJECTS) $(wirVirtualRegister2_bin_LDADD) $(LIBS)

wirVirtualRegister3.bin$(EXEEXT): $(wirVirtualRegister3_bin_OBJECTS) $(wirVirtualRegister3_bin_DEPENDENCIES) $(EXTRA_wirVirtualRegister3_bin_DEPENDENCIES) 
	@rm -f wirVirtualRegister3.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirVirtualRegister3_bin_OBJECTS) $(wirVirtualRegister3_bin_LDADD) $(LIBS)

wirVirtualRegister4.bin$(EXEEXT): $(wirVirtualRegister4_bin_OBJECTS) $(wirVirtualRegister4_bin_DEPENDENCIES) $(EXTRA_wirVirtualRegister4_bin_DEPENDENCIES) 
	@rm -f wirVirtualRegister4.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirVirtualRegister4_bin_OBJECTS) $(wirVirtualRegister4_bin_LDADD) $(LIBS)

wirVirtualRegister5.bin$(EXEEXT): $(wirVirtualRegister5_bin_OBJECTS) $(wirVirtualRegister5_bin_DEPENDENCIES) $(EXTRA_wirVirtualRegister5_bin_DEPENDENCIES) 
	@rm -f wirVirtualRegister5.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirVirtualRegister5_bin_OBJECTS) $(wirVirtualRegister5_bin_LDADD) $(LIBS)

wirVirtualRegister6.bin$(EXEEXT): $(wirVirtualRegister6_bin_OBJECTS) $(wirVirtualRegister6_bin_DEPENDENCIES) $(EXTRA_wirVirtualRegister6_bin_DEPENDENCIES) 
	@rm -f wirVirtualRegister6.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirVirtualRegister6_bin_OBJECTS) $(wirVirtualRegister6_bin_LDADD) $(LIBS)

wirVirtualRegister7.bin$(EXEEXT): $(wirVirtualRegister7_bin_OBJECTS) $(wirVirtualRegister7_bin_DEPENDENCIES) $(EXTRA_wirVirtualRegister7_bin_DEPENDENCIES) 
	@rm -f wirVirtualRegister7.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirVirtualRegister7_bin_OBJECTS) $(wirVirtualRegister7_bin_LDADD) $(LIBS)

wirWebs1.bin$(EXEEXT): $(wirWebs1_bin_OBJECTS) $(wirWebs1_bin_DEPENDENCIES) $(EXTRA_wirWebs1_bin_DEPENDENCIES) 
	@rm -f wirWebs1.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(wirWebs1_bin_OBJECTS) $(wirWebs1_bin_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirAssert1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirAssert2.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirAssertT1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirAssertT2.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirBasicBlock1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirBasicBlock2.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirBasicBlock3.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirBasicBlock4.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirBasicBlock5.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirBasicBlock6.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirBit1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirBit2.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirBit3.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirBit4.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirBit5.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirCompilationUnit1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirCompilationUnit2.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirCompilationUnit3.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirCompilationUnit4.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirContainer1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirContainer2.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirDFS1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirDFS2.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirData1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirEmptyBlocks1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirFlowFact1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirFlowFact10.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirFlowFact2.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirFlowFact3.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirFlowFact4.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirFlowFact5.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirFlowFact6.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirFlowFact7.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirFlowFact8.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirFlowFact9.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirFunction1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirFunction10.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirFunction11.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirFunction12.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirFunction13.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirFunction14.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirFunction2.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirFunction3.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirFunction4.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirFunction5.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirFunction6.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirFunction7.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirFunction8.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirFunction9.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirInstruction1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirInstruction2.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirInstruction3.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirInstruction4.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirLabelParameter1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirLabelParameter2.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirLabelParameter3.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirList1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirList10.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirList11.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirList12.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirList13.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirList14.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirList15.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirList16.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirList2.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirList3.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirList4.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirList5.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirList6.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirList7.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirOperation1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirOperation2.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirOperation3.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirOperation4.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirOperation5.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirOperation6.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirOperation7.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirOperation8.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirParameter1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirParameter2.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirParameter3.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirParameter4.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirParameter5.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirParameter6.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirParameter7.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirRedundantBlocks1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirRegisterParameter1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirSignedImmediateParameter1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirStringParameter1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirStructuralAnalysis1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirStructuralAnalysis10.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirStructuralAnalysis11.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirStructuralAnalysis12.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirStructuralAnalysis13.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirStructuralAnalysis14.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirStructuralAnalysis2.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirStructuralAnalysis3.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirStructuralAnalysis4.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirStructuralAnalysis5.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirStructuralAnalysis6.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirStructuralAnalysis7.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirStructuralAnalysis8.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirStructuralAnalysis9.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirSymboltable1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirSymboltable2.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirSymboltable3.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirSymboltable4.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirSymboltable5.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirSymboltable6.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirSymboltable7.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirSystem1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirSystem10.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirSystem2.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirSystem3.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirSystem4.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirSystem5.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirSystem6.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirSystem7.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirSystem8.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirSystem9.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirUnreachableBlocks1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirUnsignedImmediateParameter1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirUnsignedImmediateParameter2.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirUnusedVRegs1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirUpDownValue1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirUpDownValue2.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirUpDownValue3.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirUpDownValue4.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirVirtualRegister1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirVirtualRegister2.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirVirtualRegister3.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirVirtualRegister4.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirVirtualRegister5.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirVirtualRegister6.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirVirtualRegister7.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wirWebs1.Po@am__quote@ # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.cc.o:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	elif test -n "$$redo_logs"; then \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary for $(PACKAGE_STRING)$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS: $(check_PROGRAMS) $(check_SCRIPTS)
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all $(check_PROGRAMS) $(check_SCRIPTS)
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
wirAssert2.sh.log: wirAssert2.sh
	@p='wirAssert2.sh'; \
	b='wirAssert2.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirAssertT2.sh.log: wirAssertT2.sh
	@p='wirAssertT2.sh'; \
	b='wirAssertT2.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirBasicBlock1.sh.log: wirBasicBlock1.sh
	@p='wirBasicBlock1.sh'; \
	b='wirBasicBlock1.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirBasicBlock3.sh.log: wirBasicBlock3.sh
	@p='wirBasicBlock3.sh'; \
	b='wirBasicBlock3.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirBasicBlock4.sh.log: wirBasicBlock4.sh
	@p='wirBasicBlock4.sh'; \
	b='wirBasicBlock4.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirBasicBlock5.sh.log: wirBasicBlock5.sh
	@p='wirBasicBlock5.sh'; \
	b='wirBasicBlock5.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirBit1.sh.log: wirBit1.sh
	@p='wirBit1.sh'; \
	b='wirBit1.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirBit2.sh.log: wirBit2.sh
	@p='wirBit2.sh'; \
	b='wirBit2.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirBit3.sh.log: wirBit3.sh
	@p='wirBit3.sh'; \
	b='wirBit3.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirBit4.sh.log: wirBit4.sh
	@p='wirBit4.sh'; \
	b='wirBit4.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirBit5.sh.log: wirBit5.sh
	@p='wirBit5.sh'; \
	b='wirBit5.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirCompilationUnit1.sh.log: wirCompilationUnit1.sh
	@p='wirCompilationUnit1.sh'; \
	b='wirCompilationUnit1.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirCompilationUnit3.sh.log: wirCompilationUnit3.sh
	@p='wirCompilationUnit3.sh'; \
	b='wirCompilationUnit3.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirCompilationUnit4.sh.log: wirCompilationUnit4.sh
	@p='wirCompilationUnit4.sh'; \
	b='wirCompilationUnit4.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirContainer1.sh.log: wirContainer1.sh
	@p='wirContainer1.sh'; \
	b='wirContainer1.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirContainer2.sh.log: wirContainer2.sh
	@p='wirContainer2.sh'; \
	b='wirContainer2.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirDFS1.sh.log: wirDFS1.sh
	@p='wirDFS1.sh'; \
	b='wirDFS1.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirDFS2.sh.log: wirDFS2.sh
	@p='wirDFS2.sh'; \
	b='wirDFS2.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirEmptyBlocks1.sh.log: wirEmptyBlocks1.sh
	@p='wirEmptyBlocks1.sh'; \
	b='wirEmptyBlocks1.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirFlowFact1.sh.log: wirFlowFact1.sh
	@p='wirFlowFact1.sh'; \
	b='wirFlowFact1.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirFlowFact7.sh.log: wirFlowFact7.sh
	@p='wirFlowFact7.sh'; \
	b='wirFlowFact7.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirFlowFact8.sh.log: wirFlowFact8.sh
	@p='wirFlowFact8.sh'; \
	b='wirFlowFact8.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirFlowFact9.sh.log: wirFlowFact9.sh
	@p='wirFlowFact9.sh'; \
	b='wirFlowFact9.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirFlowFact10.sh.log: wirFlowFact10.sh
	@p='wirFlowFact10.sh'; \
	b='wirFlowFact10.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirFunction1.sh.log: wirFunction1.sh
	@p='wirFunction1.sh'; \
	b='wirFunction1.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirFunction2.sh.log: wirFunction2.sh
	@p='wirFunction2.sh'; \
	b='wirFunction2.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirFunction11.sh.log: wirFunction11.sh
	@p='wirFunction11.sh'; \
	b='wirFunction11.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirFunction12.sh.log: wirFunction12.sh
	@p='wirFunction12.sh'; \
	b='wirFunction12.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirFunction14.sh.log: wirFunction14.sh
	@p='wirFunction14.sh'; \
	b='wirFunction14.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirInstruction1.sh.log: wirInstruction1.sh
	@p='wirInstruction1.sh'; \
	b='wirInstruction1.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirInstruction3.sh.log: wirInstruction3.sh
	@p='wirInstruction3.sh'; \
	b='wirInstruction3.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirLabelParameter1.sh.log: wirLabelParameter1.sh
	@p='wirLabelParameter1.sh'; \
	b='wirLabelParameter1.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirList1.sh.log: wirList1.sh
	@p='wirList1.sh'; \
	b='wirList1.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirList2.sh.log: wirList2.sh
	@p='wirList2.sh'; \
	b='wirList2.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirList10.sh.log: wirList10.sh
	@p='wirList10.sh'; \
	b='wirList10.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirList11.sh.log: wirList11.sh
	@p='wirList11.sh'; \
	b='wirList11.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirOperation1.sh.log: wirOperation1.sh
	@p='wirOperation1.sh'; \
	b='wirOperation1.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirOperation8.sh.log: wirOperation8.sh
	@p='wirOperation8.sh'; \
	b='wirOperation8.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirRedundantBlocks1.sh.log: wirRedundantBlocks1.sh
	@p='wirRedundantBlocks1.sh'; \
	b='wirRedundantBlocks1.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirRegisterParameter1.sh.log: wirRegisterParameter1.sh
	@p='wirRegisterParameter1.sh'; \
	b='wirRegisterParameter1.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirSignedImmediateParameter1.sh.log: wirSignedImmediateParameter1.sh
	@p='wirSignedImmediateParameter1.sh'; \
	b='wirSignedImmediateParameter1.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirStringParameter1.sh.log: wirStringParameter1.sh
	@p='wirStringParameter1.sh'; \
	b='wirStringParameter1.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirStructuralAnalysis1.sh.log: wirStructuralAnalysis1.sh
	@p='wirStructuralAnalysis1.sh'; \
	b='wirStructuralAnalysis1.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirStructuralAnalysis2.sh.log: wirStructuralAnalysis2.sh
	@p='wirStructuralAnalysis2.sh'; \
	b='wirStructuralAnalysis2.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirStructuralAnalysis3.sh.log: wirStructuralAnalysis3.sh
	@p='wirStructuralAnalysis3.sh'; \
	b='wirStructuralAnalysis3.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirStructuralAnalysis4.sh.log: wirStructuralAnalysis4.sh
	@p='wirStructuralAnalysis4.sh'; \
	b='wirStructuralAnalysis4.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirStructuralAnalysis5.sh.log: wirStructuralAnalysis5.sh
	@p='wirStructuralAnalysis5.sh'; \
	b='wirStructuralAnalysis5.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirStructuralAnalysis6.sh.log: wirStructuralAnalysis6.sh
	@p='wirStructuralAnalysis6.sh'; \
	b='wirStructuralAnalysis6.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirStructuralAnalysis7.sh.log: wirStructuralAnalysis7.sh
	@p='wirStructuralAnalysis7.sh'; \
	b='wirStructuralAnalysis7.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirStructuralAnalysis8.sh.log: wirStructuralAnalysis8.sh
	@p='wirStructuralAnalysis8.sh'; \
	b='wirStructuralAnalysis8.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirStructuralAnalysis9.sh.log: wirStructuralAnalysis9.sh
	@p='wirStructuralAnalysis9.sh'; \
	b='wirStructuralAnalysis9.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirStructuralAnalysis10.sh.log: wirStructuralAnalysis10.sh
	@p='wirStructuralAnalysis10.sh'; \
	b='wirStructuralAnalysis10.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirStructuralAnalysis11.sh.log: wirStructuralAnalysis11.sh
	@p='wirStructuralAnalysis11.sh'; \
	b='wirStructuralAnalysis11.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirStructuralAnalysis12.sh.log: wirStructuralAnalysis12.sh
	@p='wirStructuralAnalysis12.sh'; \
	b='wirStructuralAnalysis12.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirStructuralAnalysis13.sh.log: wirStructuralAnalysis13.sh
	@p='wirStructuralAnalysis13.sh'; \
	b='wirStructuralAnalysis13.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirStructuralAnalysis14.sh.log: wirStructuralAnalysis14.sh
	@p='wirStructuralAnalysis14.sh'; \
	b='wirStructuralAnalysis14.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirSymboltable1.sh.log: wirSymboltable1.sh
	@p='wirSymboltable1.sh'; \
	b='wirSymboltable1.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirSymboltable2.sh.log: wirSymboltable2.sh
	@p='wirSymboltable2.sh'; \
	b='wirSymboltable2.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirSymboltable3.sh.log: wirSymboltable3.sh
	@p='wirSymboltable3.sh'; \
	b='wirSymboltable3.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirSymboltable4.sh.log: wirSymboltable4.sh
	@p='wirSymboltable4.sh'; \
	b='wirSymboltable4.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirSymboltable5.sh.log: wirSymboltable5.sh
	@p='wirSymboltable5.sh'; \
	b='wirSymboltable5.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirSymboltable6.sh.log: wirSymboltable6.sh
	@p='wirSymboltable6.sh'; \
	b='wirSymboltable6.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirSystem1.sh.log: wirSystem1.sh
	@p='wirSystem1.sh'; \
	b='wirSystem1.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirSystem2.sh.log: wirSystem2.sh
	@p='wirSystem2.sh'; \
	b='wirSystem2.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirSystem3.sh.log: wirSystem3.sh
	@p='wirSystem3.sh'; \
	b='wirSystem3.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirSystem4.sh.log: wirSystem4.sh
	@p='wirSystem4.sh'; \
	b='wirSystem4.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirSystem7.sh.log: wirSystem7.sh
	@p='wirSystem7.sh'; \
	b='wirSystem7.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirSystem8.sh.log: wirSystem8.sh
	@p='wirSystem8.sh'; \
	b='wirSystem8.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirSystem9.sh.log: wirSystem9.sh
	@p='wirSystem9.sh'; \
	b='wirSystem9.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirUnreachableBlocks1.sh.log: wirUnreachableBlocks1.sh
	@p='wirUnreachableBlocks1.sh'; \
	b='wirUnreachableBlocks1.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirUnsignedImmediateParameter1.sh.log: wirUnsignedImmediateParameter1.sh
	@p='wirUnsignedImmediateParameter1.sh'; \
	b='wirUnsignedImmediateParameter1.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirUnusedVRegs1.sh.log: wirUnusedVRegs1.sh
	@p='wirUnusedVRegs1.sh'; \
	b='wirUnusedVRegs1.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirUpDownValue1.sh.log: wirUpDownValue1.sh
	@p='wirUpDownValue1.sh'; \
	b='wirUpDownValue1.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirUpDownValue2.sh.log: wirUpDownValue2.sh
	@p='wirUpDownValue2.sh'; \
	b='wirUpDownValue2.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirUpDownValue3.sh.log: wirUpDownValue3.sh
	@p='wirUpDownValue3.sh'; \
	b='wirUpDownValue3.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirUpDownValue4.sh.log: wirUpDownValue4.sh
	@p='wirUpDownValue4.sh'; \
	b='wirUpDownValue4.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirVirtualRegister5.sh.log: wirVirtualRegister5.sh
	@p='wirVirtualRegister5.sh'; \
	b='wirVirtualRegister5.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirWebs1.sh.log: wirWebs1.sh
	@p='wirWebs1.sh'; \
	b='wirWebs1.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirAssert1.sh.log: wirAssert1.sh
	@p='wirAssert1.sh'; \
	b='wirAssert1.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirAssertT1.sh.log: wirAssertT1.sh
	@p='wirAssertT1.sh'; \
	b='wirAssertT1.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirBasicBlock2.sh.log: wirBasicBlock2.sh
	@p='wirBasicBlock2.sh'; \
	b='wirBasicBlock2.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirBasicBlock6.sh.log: wirBasicBlock6.sh
	@p='wirBasicBlock6.sh'; \
	b='wirBasicBlock6.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirCompilationUnit2.sh.log: wirCompilationUnit2.sh
	@p='wirCompilationUnit2.sh'; \
	b='wirCompilationUnit2.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirData1.sh.log: wirData1.sh
	@p='wirData1.sh'; \
	b='wirData1.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirFlowFact2.sh.log: wirFlowFact2.sh
	@p='wirFlowFact2.sh'; \
	b='wirFlowFact2.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirFlowFact3.sh.log: wirFlowFact3.sh
	@p='wirFlowFact3.sh'; \
	b='wirFlowFact3.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirFlowFact4.sh.log: wirFlowFact4.sh
	@p='wirFlowFact4.sh'; \
	b='wirFlowFact4.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirFlowFact5.sh.log: wirFlowFact5.sh
	@p='wirFlowFact5.sh'; \
	b='wirFlowFact5.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirFlowFact6.sh.log: wirFlowFact6.sh
	@p='wirFlowFact6.sh'; \
	b='wirFlowFact6.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirFunction3.sh.log: wirFunction3.sh
	@p='wirFunction3.sh'; \
	b='wirFunction3.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirFunction4.sh.log: wirFunction4.sh
	@p='wirFunction4.sh'; \
	b='wirFunction4.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirFunction5.sh.log: wirFunction5.sh
	@p='wirFunction5.sh'; \
	b='wirFunction5.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirFunction6.sh.log: wirFunction6.sh
	@p='wirFunction6.sh'; \
	b='wirFunction6.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirFunction7.sh.log: wirFunction7.sh
	@p='wirFunction7.sh'; \
	b='wirFunction7.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirFunction8.sh.log: wirFunction8.sh
	@p='wirFunction8.sh'; \
	b='wirFunction8.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirFunction9.sh.log: wirFunction9.sh
	@p='wirFunction9.sh'; \
	b='wirFunction9.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirFunction10.sh.log: wirFunction10.sh
	@p='wirFunction10.sh'; \
	b='wirFunction10.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirFunction13.sh.log: wirFunction13.sh
	@p='wirFunction13.sh'; \
	b='wirFunction13.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirInstruction2.sh.log: wirInstruction2.sh
	@p='wirInstruction2.sh'; \
	b='wirInstruction2.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirInstruction4.sh.log: wirInstruction4.sh
	@p='wirInstruction4.sh'; \
	b='wirInstruction4.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirLabelParameter2.sh.log: wirLabelParameter2.sh
	@p='wirLabelParameter2.sh'; \
	b='wirLabelParameter2.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirLabelParameter3.sh.log: wirLabelParameter3.sh
	@p='wirLabelParameter3.sh'; \
	b='wirLabelParameter3.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirList3.sh.log: wirList3.sh
	@p='wirList3.sh'; \
	b='wirList3.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirList4.sh.log: wirList4.sh
	@p='wirList4.sh'; \
	b='wirList4.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirList5.sh.log: wirList5.sh
	@p='wirList5.sh'; \
	b='wirList5.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirList6.sh.log: wirList6.sh
	@p='wirList6.sh'; \
	b='wirList6.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirList7.sh.log: wirList7.sh
	@p='wirList7.sh'; \
	b='wirList7.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirList12.sh.log: wirList12.sh
	@p='wirList12.sh'; \
	b='wirList12.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirList13.sh.log: wirList13.sh
	@p='wirList13.sh'; \
	b='wirList13.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirList14.sh.log: wirList14.sh
	@p='wirList14.sh'; \
	b='wirList14.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirList15.sh.log: wirList15.sh
	@p='wirList15.sh'; \
	b='wirList15.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirList16.sh.log: wirList16.sh
	@p='wirList16.sh'; \
	b='wirList16.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirOperation2.sh.log: wirOperation2.sh
	@p='wirOperation2.sh'; \
	b='wirOperation2.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirOperation3.sh.log: wirOperation3.sh
	@p='wirOperation3.sh'; \
	b='wirOperation3.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirOperation4.sh.log: wirOperation4.sh
	@p='wirOperation4.sh'; \
	b='wirOperation4.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirOperation5.sh.log: wirOperation5.sh
	@p='wirOperation5.sh'; \
	b='wirOperation5.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirOperation6.sh.log: wirOperation6.sh
	@p='wirOperation6.sh'; \
	b='wirOperation6.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirOperation7.sh.log: wirOperation7.sh
	@p='wirOperation7.sh'; \
	b='wirOperation7.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirParameter1.sh.log: wirParameter1.sh
	@p='wirParameter1.sh'; \
	b='wirParameter1.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirParameter2.sh.log: wirParameter2.sh
	@p='wirParameter2.sh'; \
	b='wirParameter2.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirParameter3.sh.log: wirParameter3.sh
	@p='wirParameter3.sh'; \
	b='wirParameter3.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirParameter4.sh.log: wirParameter4.sh
	@p='wirParameter4.sh'; \
	b='wirParameter4.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirParameter5.sh.log: wirParameter5.sh
	@p='wirParameter5.sh'; \
	b='wirParameter5.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirParameter6.sh.log: wirParameter6.sh
	@p='wirParameter6.sh'; \
	b='wirParameter6.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirParameter7.sh.log: wirParameter7.sh
	@p='wirParameter7.sh'; \
	b='wirParameter7.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirSymboltable7.sh.log: wirSymboltable7.sh
	@p='wirSymboltable7.sh'; \
	b='wirSymboltable7.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirSystem5.sh.log: wirSystem5.sh
	@p='wirSystem5.sh'; \
	b='wirSystem5.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirSystem6.sh.log: wirSystem6.sh
	@p='wirSystem6.sh'; \
	b='wirSystem6.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirSystem10.sh.log: wirSystem10.sh
	@p='wirSystem10.sh'; \
	b='wirSystem10.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirUnsignedImmediateParameter2.sh.log: wirUnsignedImmediateParameter2.sh
	@p='wirUnsignedImmediateParameter2.sh'; \
	b='wirUnsignedImmediateParameter2.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirVirtualRegister1.sh.log: wirVirtualRegister1.sh
	@p='wirVirtualRegister1.sh'; \
	b='wirVirtualRegister1.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirVirtualRegister2.sh.log: wirVirtualRegister2.sh
	@p='wirVirtualRegister2.sh'; \
	b='wirVirtualRegister2.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirVirtualRegister3.sh.log: wirVirtualRegister3.sh
	@p='wirVirtualRegister3.sh'; \
	b='wirVirtualRegister3.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirVirtualRegister4.sh.log: wirVirtualRegister4.sh
	@p='wirVirtualRegister4.sh'; \
	b='wirVirtualRegister4.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirVirtualRegister6.sh.log: wirVirtualRegister6.sh
	@p='wirVirtualRegister6.sh'; \
	b='wirVirtualRegister6.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
wirVirtualRegister7.sh.log: wirVirtualRegister7.sh
	@p='wirVirtualRegister7.sh'; \
	b='wirVirtualRegister7.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
@am__EXEEXT_TRUE@.test$(EXEEXT).log:
@am__EXEEXT_TRUE@	@p='$<'; \
@am__EXEEXT_TRUE@	$(am__set_b); \
@am__EXEEXT_TRUE@	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
@am__EXEEXT_TRUE@	--log-file $$b.log --trs-file $$b.trs \
@am__EXEEXT_TRUE@	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
@am__EXEEXT_TRUE@	"$$tst" $(AM_TESTS_FD_REDIRECT)

distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS) $(check_SCRIPTS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic clean-libtool \
	mostlyclean-am

distclean: distclean-am
		-rm -f ./$(DEPDIR)/wirAssert1.Po
	-rm -f ./$(DEPDIR)/wirAssert2.Po
	-rm -f ./$(DEPDIR)/wirAssertT1.Po
	-rm -f ./$(DEPDIR)/wirAssertT2.Po
	-rm -f ./$(DEPDIR)/wirBasicBlock1.Po
	-rm -f ./$(DEPDIR)/wirBasicBlock2.Po
	-rm -f ./$(DEPDIR)/wirBasicBlock3.Po
	-rm -f ./$(DEPDIR)/wirBasicBlock4.Po
	-rm -f ./$(DEPDIR)/wirBasicBlock5.Po
	-rm -f ./$(DEPDIR)/wirBasicBlock6.Po
	-rm -f ./$(DEPDIR)/wirBit1.Po
	-rm -f ./$(DEPDIR)/wirBit2.Po
	-rm -f ./$(DEPDIR)/wirBit3.Po
	-rm -f ./$(DEPDIR)/wirBit4.Po
	-rm -f ./$(DEPDIR)/wirBit5.Po
	-rm -f ./$(DEPDIR)/wirCompilationUnit1.Po
	-rm -f ./$(DEPDIR)/wirCompilationUnit2.Po
	-rm -f ./$(DEPDIR)/wirCompilationUnit3.Po
	-rm -f ./$(DEPDIR)/wirCompilationUnit4.Po
	-rm -f ./$(DEPDIR)/wirContainer1.Po
	-rm -f ./$(DEPDIR)/wirContainer2.Po
	-rm -f ./$(DEPDIR)/wirDFS1.Po
	-rm -f ./$(DEPDIR)/wirDFS2.Po
	-rm -f ./$(DEPDIR)/wirData1.Po
	-rm -f ./$(DEPDIR)/wirEmptyBlocks1.Po
	-rm -f ./$(DEPDIR)/wirFlowFact1.Po
	-rm -f ./$(DEPDIR)/wirFlowFact10.Po
	-rm -f ./$(DEPDIR)/wirFlowFact2.Po
	-rm -f ./$(DEPDIR)/wirFlowFact3.Po
	-rm -f ./$(DEPDIR)/wirFlowFact4.Po
	-rm -f ./$(DEPDIR)/wirFlowFact5.Po
	-rm -f ./$(DEPDIR)/wirFlowFact6.Po
	-rm -f ./$(DEPDIR)/wirFlowFact7.Po
	-rm -f ./$(DEPDIR)/wirFlowFact8.Po
	-rm -f ./$(DEPDIR)/wirFlowFact9.Po
	-rm -f ./$(DEPDIR)/wirFunction1.Po
	-rm -f ./$(DEPDIR)/wirFunction10.Po
	-rm -f ./$(DEPDIR)/wirFunction11.Po
	-rm -f ./$(DEPDIR)/wirFunction12.Po
	-rm -f ./$(DEPDIR)/wirFunction13.Po
	-rm -f ./$(DEPDIR)/wirFunction14.Po
	-rm -f ./$(DEPDIR)/wirFunction2.Po
	-rm -f ./$(DEPDIR)/wirFunction3.Po
	-rm -f ./$(DEPDIR)/wirFunction4.Po
	-rm -f ./$(DEPDIR)/wirFunction5.Po
	-rm -f ./$(DEPDIR)/wirFunction6.Po
	-rm -f ./$(DEPDIR)/wirFunction7.Po
	-rm -f ./$(DEPDIR)/wirFunction8.Po
	-rm -f ./$(DEPDIR)/wirFunction9.Po
	-rm -f ./$(DEPDIR)/wirInstruction1.Po
	-rm -f ./$(DEPDIR)/wirInstruction2.Po
	-rm -f ./$(DEPDIR)/wirInstruction3.Po
	-rm -f ./$(DEPDIR)/wirInstruction4.Po
	-rm -f ./$(DEPDIR)/wirLabelParameter1.Po
	-rm -f ./$(DEPDIR)/wirLabelParameter2.Po
	-rm -f ./$(DEPDIR)/wirLabelParameter3.Po
	-rm -f ./$(DEPDIR)/wirList1.Po
	-rm -f ./$(DEPDIR)/wirList10.Po
	-rm -f ./$(DEPDIR)/wirList11.Po
	-rm -f ./$(DEPDIR)/wirList12.Po
	-rm -f ./$(DEPDIR)/wirList13.Po
	-rm -f ./$(DEPDIR)/wirList14.Po
	-rm -f ./$(DEPDIR)/wirList15.Po
	-rm -f ./$(DEPDIR)/wirList16.Po
	-rm -f ./$(DEPDIR)/wirList2.Po
	-rm -f ./$(DEPDIR)/wirList3.Po
	-rm -f ./$(DEPDIR)/wirList4.Po
	-rm -f ./$(DEPDIR)/wirList5.Po
	-rm -f ./$(DEPDIR)/wirList6.Po
	-rm -f ./$(DEPDIR)/wirList7.Po
	-rm -f ./$(DEPDIR)/wirOperation1.Po
	-rm -f ./$(DEPDIR)/wirOperation2.Po
	-rm -f ./$(DEPDIR)/wirOperation3.Po
	-rm -f ./$(DEPDIR)/wirOperation4.Po
	-rm -f ./$(DEPDIR)/wirOperation5.Po
	-rm -f ./$(DEPDIR)/wirOperation6.Po
	-rm -f ./$(DEPDIR)/wirOperation7.Po
	-rm -f ./$(DEPDIR)/wirOperation8.Po
	-rm -f ./$(DEPDIR)/wirParameter1.Po
	-rm -f ./$(DEPDIR)/wirParameter2.Po
	-rm -f ./$(DEPDIR)/wirParameter3.Po
	-rm -f ./$(DEPDIR)/wirParameter4.Po
	-rm -f ./$(DEPDIR)/wirParameter5.Po
	-rm -f ./$(DEPDIR)/wirParameter6.Po
	-rm -f ./$(DEPDIR)/wirParameter7.Po
	-rm -f ./$(DEPDIR)/wirRedundantBlocks1.Po
	-rm -f ./$(DEPDIR)/wirRegisterParameter1.Po
	-rm -f ./$(DEPDIR)/wirSignedImmediateParameter1.Po
	-rm -f ./$(DEPDIR)/wirStringParameter1.Po
	-rm -f ./$(DEPDIR)/wirStructuralAnalysis1.Po
	-rm -f ./$(DEPDIR)/wirStructuralAnalysis10.Po
	-rm -f ./$(DEPDIR)/wirStructuralAnalysis11.Po
	-rm -f ./$(DEPDIR)/wirStructuralAnalysis12.Po
	-rm -f ./$(DEPDIR)/wirStructuralAnalysis13.Po
	-rm -f ./$(DEPDIR)/wirStructuralAnalysis14.Po
	-rm -f ./$(DEPDIR)/wirStructuralAnalysis2.Po
	-rm -f ./$(DEPDIR)/wirStructuralAnalysis3.Po
	-rm -f ./$(DEPDIR)/wirStructuralAnalysis4.Po
	-rm -f ./$(DEPDIR)/wirStructuralAnalysis5.Po
	-rm -f ./$(DEPDIR)/wirStructuralAnalysis6.Po
	-rm -f ./$(DEPDIR)/wirStructuralAnalysis7.Po
	-rm -f ./$(DEPDIR)/wirStructuralAnalysis8.Po
	-rm -f ./$(DEPDIR)/wirStructuralAnalysis9.Po
	-rm -f ./$(DEPDIR)/wirSymboltable1.Po
	-rm -f ./$(DEPDIR)/wirSymboltable2.Po
	-rm -f ./$(DEPDIR)/wirSymboltable3.Po
	-rm -f ./$(DEPDIR)/wirSymboltable4.Po
	-rm -f ./$(DEPDIR)/wirSymboltable5.Po
	-rm -f ./$(DEPDIR)/wirSymboltable6.Po
	-rm -f ./$(DEPDIR)/wirSymboltable7.Po
	-rm -f ./$(DEPDIR)/wirSystem1.Po
	-rm -f ./$(DEPDIR)/wirSystem10.Po
	-rm -f ./$(DEPDIR)/wirSystem2.Po
	-rm -f ./$(DEPDIR)/wirSystem3.Po
	-rm -f ./$(DEPDIR)/wirSystem4.Po
	-rm -f ./$(DEPDIR)/wirSystem5.Po
	-rm -f ./$(DEPDIR)/wirSystem6.Po
	-rm -f ./$(DEPDIR)/wirSystem7.Po
	-rm -f ./$(DEPDIR)/wirSystem8.Po
	-rm -f ./$(DEPDIR)/wirSystem9.Po
	-rm -f ./$(DEPDIR)/wirUnreachableBlocks1.Po
	-rm -f ./$(DEPDIR)/wirUnsignedImmediateParameter1.Po
	-rm -f ./$(DEPDIR)/wirUnsignedImmediateParameter2.Po
	-rm -f ./$(DEPDIR)/wirUnusedVRegs1.Po
	-rm -f ./$(DEPDIR)/wirUpDownValue1.Po
	-rm -f ./$(DEPDIR)/wirUpDownValue2.Po
	-rm -f ./$(DEPDIR)/wirUpDownValue3.Po
	-rm -f ./$(DEPDIR)/wirUpDownValue4.Po
	-rm -f ./$(DEPDIR)/wirVirtualRegister1.Po
	-rm -f ./$(DEPDIR)/wirVirtualRegister2.Po
	-rm -f ./$(DEPDIR)/wirVirtualRegister3.Po
	-rm -f ./$(DEPDIR)/wirVirtualRegister4.Po
	-rm -f ./$(DEPDIR)/wirVirtualRegister5.Po
	-rm -f ./$(DEPDIR)/wirVirtualRegister6.Po
	-rm -f ./$(DEPDIR)/wirVirtualRegister7.Po
	-rm -f ./$(DEPDIR)/wirWebs1.Po
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
		-rm -f ./$(DEPDIR)/wirAssert1.Po
	-rm -f ./$(DEPDIR)/wirAssert2.Po
	-rm -f ./$(DEPDIR)/wirAssertT1.Po
	-rm -f ./$(DEPDIR)/wirAssertT2.Po
	-rm -f ./$(DEPDIR)/wirBasicBlock1.Po
	-rm -f ./$(DEPDIR)/wirBasicBlock2.Po
	-rm -f ./$(DEPDIR)/wirBasicBlock3.Po
	-rm -f ./$(DEPDIR)/wirBasicBlock4.Po
	-rm -f ./$(DEPDIR)/wirBasicBlock5.Po
	-rm -f ./$(DEPDIR)/wirBasicBlock6.Po
	-rm -f ./$(DEPDIR)/wirBit1.Po
	-rm -f ./$(DEPDIR)/wirBit2.Po
	-rm -f ./$(DEPDIR)/wirBit3.Po
	-rm -f ./$(DEPDIR)/wirBit4.Po
	-rm -f ./$(DEPDIR)/wirBit5.Po
	-rm -f ./$(DEPDIR)/wirCompilationUnit1.Po
	-rm -f ./$(DEPDIR)/wirCompilationUnit2.Po
	-rm -f ./$(DEPDIR)/wirCompilationUnit3.Po
	-rm -f ./$(DEPDIR)/wirCompilationUnit4.Po
	-rm -f ./$(DEPDIR)/wirContainer1.Po
	-rm -f ./$(DEPDIR)/wirContainer2.Po
	-rm -f ./$(DEPDIR)/wirDFS1.Po
	-rm -f ./$(DEPDIR)/wirDFS2.Po
	-rm -f ./$(DEPDIR)/wirData1.Po
	-rm -f ./$(DEPDIR)/wirEmptyBlocks1.Po
	-rm -f ./$(DEPDIR)/wirFlowFact1.Po
	-rm -f ./$(DEPDIR)/wirFlowFact10.Po
	-rm -f ./$(DEPDIR)/wirFlowFact2.Po
	-rm -f ./$(DEPDIR)/wirFlowFact3.Po
	-rm -f ./$(DEPDIR)/wirFlowFact4.Po
	-rm -f ./$(DEPDIR)/wirFlowFact5.Po
	-rm -f ./$(DEPDIR)/wirFlowFact6.Po
	-rm -f ./$(DEPDIR)/wirFlowFact7.Po
	-rm -f ./$(DEPDIR)/wirFlowFact8.Po
	-rm -f ./$(DEPDIR)/wirFlowFact9.Po
	-rm -f ./$(DEPDIR)/wirFunction1.Po
	-rm -f ./$(DEPDIR)/wirFunction10.Po
	-rm -f ./$(DEPDIR)/wirFunction11.Po
	-rm -f ./$(DEPDIR)/wirFunction12.Po
	-rm -f ./$(DEPDIR)/wirFunction13.Po
	-rm -f ./$(DEPDIR)/wirFunction14.Po
	-rm -f ./$(DEPDIR)/wirFunction2.Po
	-rm -f ./$(DEPDIR)/wirFunction3.Po
	-rm -f ./$(DEPDIR)/wirFunction4.Po
	-rm -f ./$(DEPDIR)/wirFunction5.Po
	-rm -f ./$(DEPDIR)/wirFunction6.Po
	-rm -f ./$(DEPDIR)/wirFunction7.Po
	-rm -f ./$(DEPDIR)/wirFunction8.Po
	-rm -f ./$(DEPDIR)/wirFunction9.Po
	-rm -f ./$(DEPDIR)/wirInstruction1.Po
	-rm -f ./$(DEPDIR)/wirInstruction2.Po
	-rm -f ./$(DEPDIR)/wirInstruction3.Po
	-rm -f ./$(DEPDIR)/wirInstruction4.Po
	-rm -f ./$(DEPDIR)/wirLabelParameter1.Po
	-rm -f ./$(DEPDIR)/wirLabelParameter2.Po
	-rm -f ./$(DEPDIR)/wirLabelParameter3.Po
	-rm -f ./$(DEPDIR)/wirList1.Po
	-rm -f ./$(DEPDIR)/wirList10.Po
	-rm -f ./$(DEPDIR)/wirList11.Po
	-rm -f ./$(DEPDIR)/wirList12.Po
	-rm -f ./$(DEPDIR)/wirList13.Po
	-rm -f ./$(DEPDIR)/wirList14.Po
	-rm -f ./$(DEPDIR)/wirList15.Po
	-rm -f ./$(DEPDIR)/wirList16.Po
	-rm -f ./$(DEPDIR)/wirList2.Po
	-rm -f ./$(DEPDIR)/wirList3.Po
	-rm -f ./$(DEPDIR)/wirList4.Po
	-rm -f ./$(DEPDIR)/wirList5.Po
	-rm -f ./$(DEPDIR)/wirList6.Po
	-rm -f ./$(DEPDIR)/wirList7.Po
	-rm -f ./$(DEPDIR)/wirOperation1.Po
	-rm -f ./$(DEPDIR)/wirOperation2.Po
	-rm -f ./$(DEPDIR)/wirOperation3.Po
	-rm -f ./$(DEPDIR)/wirOperation4.Po
	-rm -f ./$(DEPDIR)/wirOperation5.Po
	-rm -f ./$(DEPDIR)/wirOperation6.Po
	-rm -f ./$(DEPDIR)/wirOperation7.Po
	-rm -f ./$(DEPDIR)/wirOperation8.Po
	-rm -f ./$(DEPDIR)/wirParameter1.Po
	-rm -f ./$(DEPDIR)/wirParameter2.Po
	-rm -f ./$(DEPDIR)/wirParameter3.Po
	-rm -f ./$(DEPDIR)/wirParameter4.Po
	-rm -f ./$(DEPDIR)/wirParameter5.Po
	-rm -f ./$(DEPDIR)/wirParameter6.Po
	-rm -f ./$(DEPDIR)/wirParameter7.Po
	-rm -f ./$(DEPDIR)/wirRedundantBlocks1.Po
	-rm -f ./$(DEPDIR)/wirRegisterParameter1.Po
	-rm -f ./$(DEPDIR)/wirSignedImmediateParameter1.Po
	-rm -f ./$(DEPDIR)/wirStringParameter1.Po
	-rm -f ./$(DEPDIR)/wirStructuralAnalysis1.Po
	-rm -f ./$(DEPDIR)/wirStructuralAnalysis10.Po
	-rm -f ./$(DEPDIR)/wirStructuralAnalysis11.Po
	-rm -f ./$(DEPDIR)/wirStructuralAnalysis12.Po
	-rm -f ./$(DEPDIR)/wirStructuralAnalysis13.Po
	-rm -f ./$(DEPDIR)/wirStructuralAnalysis14.Po
	-rm -f ./$(DEPDIR)/wirStructuralAnalysis2.Po
	-rm -f ./$(DEPDIR)/wirStructuralAnalysis3.Po
	-rm -f ./$(DEPDIR)/wirStructuralAnalysis4.Po
	-rm -f ./$(DEPDIR)/wirStructuralAnalysis5.Po
	-rm -f ./$(DEPDIR)/wirStructuralAnalysis6.Po
	-rm -f ./$(DEPDIR)/wirStructuralAnalysis7.Po
	-rm -f ./$(DEPDIR)/wirStructuralAnalysis8.Po
	-rm -f ./$(DEPDIR)/wirStructuralAnalysis9.Po
	-rm -f ./$(DEPDIR)/wirSymboltable1.Po
	-rm -f ./$(DEPDIR)/wirSymboltable2.Po
	-rm -f ./$(DEPDIR)/wirSymboltable3.Po
	-rm -f ./$(DEPDIR)/wirSymboltable4.Po
	-rm -f ./$(DEPDIR)/wirSymboltable5.Po
	-rm -f ./$(DEPDIR)/wirSymboltable6.Po
	-rm -f ./$(DEPDIR)/wirSymboltable7.Po
	-rm -f ./$(DEPDIR)/wirSystem1.Po
	-rm -f ./$(DEPDIR)/wirSystem10.Po
	-rm -f ./$(DEPDIR)/wirSystem2.Po
	-rm -f ./$(DEPDIR)/wirSystem3.Po
	-rm -f ./$(DEPDIR)/wirSystem4.Po
	-rm -f ./$(DEPDIR)/wirSystem5.Po
	-rm -f ./$(DEPDIR)/wirSystem6.Po
	-rm -f ./$(DEPDIR)/wirSystem7.Po
	-rm -f ./$(DEPDIR)/wirSystem8.Po
	-rm -f ./$(DEPDIR)/wirSystem9.Po
	-rm -f ./$(DEPDIR)/wirUnreachableBlocks1.Po
	-rm -f ./$(DEPDIR)/wirUnsignedImmediateParameter1.Po
	-rm -f ./$(DEPDIR)/wirUnsignedImmediateParameter2.Po
	-rm -f ./$(DEPDIR)/wirUnusedVRegs1.Po
	-rm -f ./$(DEPDIR)/wirUpDownValue1.Po
	-rm -f ./$(DEPDIR)/wirUpDownValue2.Po
	-rm -f ./$(DEPDIR)/wirUpDownValue3.Po
	-rm -f ./$(DEPDIR)/wirUpDownValue4.Po
	-rm -f ./$(DEPDIR)/wirVirtualRegister1.Po
	-rm -f ./$(DEPDIR)/wirVirtualRegister2.Po
	-rm -f ./$(DEPDIR)/wirVirtualRegister3.Po
	-rm -f ./$(DEPDIR)/wirVirtualRegister4.Po
	-rm -f ./$(DEPDIR)/wirVirtualRegister5.Po
	-rm -f ./$(DEPDIR)/wirVirtualRegister6.Po
	-rm -f ./$(DEPDIR)/wirVirtualRegister7.Po
	-rm -f ./$(DEPDIR)/wirWebs1.Po
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am am--depfiles check check-TESTS \
	check-am clean clean-checkPROGRAMS clean-generic clean-libtool \
	cscopelist-am ctags ctags-am distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	recheck tags tags-am uninstall uninstall-am

.PRECIOUS: Makefile


#
# Specific rules
#

$(check_SCRIPTS): \
	%.sh: %.bin
	@echo "#!"$(BASH) > $@;
	@echo $(builddir)"/$< > /dev/null 2>&1" >> $@
	@echo "exit ""$$""?" >> $@
	@$(CHMOD) ugo+x $@

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
