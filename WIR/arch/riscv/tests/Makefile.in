# Makefile.in generated by automake 1.16.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2018 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

#
# Targets to build
#

#.SILENT:
VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
check_PROGRAMS = rv32BitADD01.bin$(EXEEXT) rv32BitADDI01.bin$(EXEEXT) \
	rv32BitAND01.bin$(EXEEXT) rv32BitANDI01.bin$(EXEEXT) \
	rv32BitBEQ01.bin$(EXEEXT) rv32BitBGE01.bin$(EXEEXT) \
	rv32BitBGEU01.bin$(EXEEXT) rv32BitBLT01.bin$(EXEEXT) \
	rv32BitBLTU01.bin$(EXEEXT) rv32BitBNE01.bin$(EXEEXT) \
	rv32BitCADD01.bin$(EXEEXT) rv32BitCADDI01.bin$(EXEEXT) \
	rv32BitCAND01.bin$(EXEEXT) rv32BitCANDI01.bin$(EXEEXT) \
	rv32BitCBEQZ01.bin$(EXEEXT) rv32BitCBNEZ01.bin$(EXEEXT) \
	rv32BitCLI01.bin$(EXEEXT) rv32BitCLUI01.bin$(EXEEXT) \
	rv32BitCMV01.bin$(EXEEXT) rv32BitCOR01.bin$(EXEEXT) \
	rv32BitCSLLI01.bin$(EXEEXT) rv32BitCSRAI01.bin$(EXEEXT) \
	rv32BitCSRLI01.bin$(EXEEXT) rv32BitCSUB01.bin$(EXEEXT) \
	rv32BitCXOR01.bin$(EXEEXT) rv32BitLUI01.bin$(EXEEXT) \
	rv32BitLW-LH-LHU-LB-LBU01.bin$(EXEEXT) \
	rv32BitMOV01.bin$(EXEEXT) rv32BitOR01.bin$(EXEEXT) \
	rv32BitORI01.bin$(EXEEXT) rv32BitSLL01.bin$(EXEEXT) \
	rv32BitSLLI01.bin$(EXEEXT) rv32BitSLT01.bin$(EXEEXT) \
	rv32BitSLTI01.bin$(EXEEXT) rv32BitSLTIU01.bin$(EXEEXT) \
	rv32BitSLTU01.bin$(EXEEXT) rv32BitSRA01.bin$(EXEEXT) \
	rv32BitSRAI01.bin$(EXEEXT) rv32BitSRL01.bin$(EXEEXT) \
	rv32BitSRLI01.bin$(EXEEXT) rv32BitSUB01.bin$(EXEEXT) \
	rv32BitSW-SH-SB01.bin$(EXEEXT) rv32BitXOR01.bin$(EXEEXT) \
	rv32BitXORI01.bin$(EXEEXT) rv32iOperations1.bin$(EXEEXT) \
	rv32iOperations2.bin$(EXEEXT) rv32icOperations1.bin$(EXEEXT) \
	rv32icOperations2.bin$(EXEEXT) rv32imOperations1.bin$(EXEEXT) \
	rv32imOperations2.bin$(EXEEXT) rv32imcOperations1.bin$(EXEEXT) \
	rv32imcOperations2.bin$(EXEEXT) rvConst5Unsigned1.bin$(EXEEXT) \
	rvConst5Unsigned2.bin$(EXEEXT) rvConst6Signed1.bin$(EXEEXT) \
	rvConst6Signed2.bin$(EXEEXT) rvConst6Signed3.bin$(EXEEXT) \
	rvConst6Unsigned1.bin$(EXEEXT) rvConst6Unsigned2.bin$(EXEEXT) \
	rvConst8Unsigned1.bin$(EXEEXT) rvConst8Unsigned2.bin$(EXEEXT) \
	rvConst12Signed1.bin$(EXEEXT) rvConst12Signed2.bin$(EXEEXT) \
	rvConst12Signed3.bin$(EXEEXT) rvConst20Unsigned1.bin$(EXEEXT) \
	rvConst20Unsigned2.bin$(EXEEXT) rvPhRegs1.bin$(EXEEXT) \
	rvReg1.bin$(EXEEXT)
subdir = arch/riscv/tests
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/m4/m4-ax_check_compile_flag.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config_wir.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
rv32BitADD01_bin_SOURCES = rv32BitADD01.cc
rv32BitADD01_bin_OBJECTS = rv32BitADD01.$(OBJEXT)
rv32BitADD01_bin_LDADD = $(LDADD)
rv32BitADD01_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
rv32BitADDI01_bin_SOURCES = rv32BitADDI01.cc
rv32BitADDI01_bin_OBJECTS = rv32BitADDI01.$(OBJEXT)
rv32BitADDI01_bin_LDADD = $(LDADD)
rv32BitADDI01_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
rv32BitAND01_bin_SOURCES = rv32BitAND01.cc
rv32BitAND01_bin_OBJECTS = rv32BitAND01.$(OBJEXT)
rv32BitAND01_bin_LDADD = $(LDADD)
rv32BitAND01_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
rv32BitANDI01_bin_SOURCES = rv32BitANDI01.cc
rv32BitANDI01_bin_OBJECTS = rv32BitANDI01.$(OBJEXT)
rv32BitANDI01_bin_LDADD = $(LDADD)
rv32BitANDI01_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
rv32BitBEQ01_bin_SOURCES = rv32BitBEQ01.cc
rv32BitBEQ01_bin_OBJECTS = rv32BitBEQ01.$(OBJEXT)
rv32BitBEQ01_bin_LDADD = $(LDADD)
rv32BitBEQ01_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
rv32BitBGE01_bin_SOURCES = rv32BitBGE01.cc
rv32BitBGE01_bin_OBJECTS = rv32BitBGE01.$(OBJEXT)
rv32BitBGE01_bin_LDADD = $(LDADD)
rv32BitBGE01_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
rv32BitBGEU01_bin_SOURCES = rv32BitBGEU01.cc
rv32BitBGEU01_bin_OBJECTS = rv32BitBGEU01.$(OBJEXT)
rv32BitBGEU01_bin_LDADD = $(LDADD)
rv32BitBGEU01_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
rv32BitBLT01_bin_SOURCES = rv32BitBLT01.cc
rv32BitBLT01_bin_OBJECTS = rv32BitBLT01.$(OBJEXT)
rv32BitBLT01_bin_LDADD = $(LDADD)
rv32BitBLT01_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
rv32BitBLTU01_bin_SOURCES = rv32BitBLTU01.cc
rv32BitBLTU01_bin_OBJECTS = rv32BitBLTU01.$(OBJEXT)
rv32BitBLTU01_bin_LDADD = $(LDADD)
rv32BitBLTU01_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
rv32BitBNE01_bin_SOURCES = rv32BitBNE01.cc
rv32BitBNE01_bin_OBJECTS = rv32BitBNE01.$(OBJEXT)
rv32BitBNE01_bin_LDADD = $(LDADD)
rv32BitBNE01_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
rv32BitCADD01_bin_SOURCES = rv32BitCADD01.cc
rv32BitCADD01_bin_OBJECTS = rv32BitCADD01.$(OBJEXT)
rv32BitCADD01_bin_LDADD = $(LDADD)
rv32BitCADD01_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
rv32BitCADDI01_bin_SOURCES = rv32BitCADDI01.cc
rv32BitCADDI01_bin_OBJECTS = rv32BitCADDI01.$(OBJEXT)
rv32BitCADDI01_bin_LDADD = $(LDADD)
rv32BitCADDI01_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
rv32BitCAND01_bin_SOURCES = rv32BitCAND01.cc
rv32BitCAND01_bin_OBJECTS = rv32BitCAND01.$(OBJEXT)
rv32BitCAND01_bin_LDADD = $(LDADD)
rv32BitCAND01_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
rv32BitCANDI01_bin_SOURCES = rv32BitCANDI01.cc
rv32BitCANDI01_bin_OBJECTS = rv32BitCANDI01.$(OBJEXT)
rv32BitCANDI01_bin_LDADD = $(LDADD)
rv32BitCANDI01_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
rv32BitCBEQZ01_bin_SOURCES = rv32BitCBEQZ01.cc
rv32BitCBEQZ01_bin_OBJECTS = rv32BitCBEQZ01.$(OBJEXT)
rv32BitCBEQZ01_bin_LDADD = $(LDADD)
rv32BitCBEQZ01_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
rv32BitCBNEZ01_bin_SOURCES = rv32BitCBNEZ01.cc
rv32BitCBNEZ01_bin_OBJECTS = rv32BitCBNEZ01.$(OBJEXT)
rv32BitCBNEZ01_bin_LDADD = $(LDADD)
rv32BitCBNEZ01_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
rv32BitCLI01_bin_SOURCES = rv32BitCLI01.cc
rv32BitCLI01_bin_OBJECTS = rv32BitCLI01.$(OBJEXT)
rv32BitCLI01_bin_LDADD = $(LDADD)
rv32BitCLI01_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
rv32BitCLUI01_bin_SOURCES = rv32BitCLUI01.cc
rv32BitCLUI01_bin_OBJECTS = rv32BitCLUI01.$(OBJEXT)
rv32BitCLUI01_bin_LDADD = $(LDADD)
rv32BitCLUI01_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
rv32BitCMV01_bin_SOURCES = rv32BitCMV01.cc
rv32BitCMV01_bin_OBJECTS = rv32BitCMV01.$(OBJEXT)
rv32BitCMV01_bin_LDADD = $(LDADD)
rv32BitCMV01_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
rv32BitCOR01_bin_SOURCES = rv32BitCOR01.cc
rv32BitCOR01_bin_OBJECTS = rv32BitCOR01.$(OBJEXT)
rv32BitCOR01_bin_LDADD = $(LDADD)
rv32BitCOR01_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
rv32BitCSLLI01_bin_SOURCES = rv32BitCSLLI01.cc
rv32BitCSLLI01_bin_OBJECTS = rv32BitCSLLI01.$(OBJEXT)
rv32BitCSLLI01_bin_LDADD = $(LDADD)
rv32BitCSLLI01_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
rv32BitCSRAI01_bin_SOURCES = rv32BitCSRAI01.cc
rv32BitCSRAI01_bin_OBJECTS = rv32BitCSRAI01.$(OBJEXT)
rv32BitCSRAI01_bin_LDADD = $(LDADD)
rv32BitCSRAI01_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
rv32BitCSRLI01_bin_SOURCES = rv32BitCSRLI01.cc
rv32BitCSRLI01_bin_OBJECTS = rv32BitCSRLI01.$(OBJEXT)
rv32BitCSRLI01_bin_LDADD = $(LDADD)
rv32BitCSRLI01_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
rv32BitCSUB01_bin_SOURCES = rv32BitCSUB01.cc
rv32BitCSUB01_bin_OBJECTS = rv32BitCSUB01.$(OBJEXT)
rv32BitCSUB01_bin_LDADD = $(LDADD)
rv32BitCSUB01_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
rv32BitCXOR01_bin_SOURCES = rv32BitCXOR01.cc
rv32BitCXOR01_bin_OBJECTS = rv32BitCXOR01.$(OBJEXT)
rv32BitCXOR01_bin_LDADD = $(LDADD)
rv32BitCXOR01_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
rv32BitLUI01_bin_SOURCES = rv32BitLUI01.cc
rv32BitLUI01_bin_OBJECTS = rv32BitLUI01.$(OBJEXT)
rv32BitLUI01_bin_LDADD = $(LDADD)
rv32BitLUI01_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
rv32BitLW_LH_LHU_LB_LBU01_bin_SOURCES = rv32BitLW-LH-LHU-LB-LBU01.cc
rv32BitLW_LH_LHU_LB_LBU01_bin_OBJECTS =  \
	rv32BitLW-LH-LHU-LB-LBU01.$(OBJEXT)
rv32BitLW_LH_LHU_LB_LBU01_bin_LDADD = $(LDADD)
rv32BitLW_LH_LHU_LB_LBU01_bin_DEPENDENCIES =  \
	$(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
rv32BitMOV01_bin_SOURCES = rv32BitMOV01.cc
rv32BitMOV01_bin_OBJECTS = rv32BitMOV01.$(OBJEXT)
rv32BitMOV01_bin_LDADD = $(LDADD)
rv32BitMOV01_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
rv32BitOR01_bin_SOURCES = rv32BitOR01.cc
rv32BitOR01_bin_OBJECTS = rv32BitOR01.$(OBJEXT)
rv32BitOR01_bin_LDADD = $(LDADD)
rv32BitOR01_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
rv32BitORI01_bin_SOURCES = rv32BitORI01.cc
rv32BitORI01_bin_OBJECTS = rv32BitORI01.$(OBJEXT)
rv32BitORI01_bin_LDADD = $(LDADD)
rv32BitORI01_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
rv32BitSLL01_bin_SOURCES = rv32BitSLL01.cc
rv32BitSLL01_bin_OBJECTS = rv32BitSLL01.$(OBJEXT)
rv32BitSLL01_bin_LDADD = $(LDADD)
rv32BitSLL01_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
rv32BitSLLI01_bin_SOURCES = rv32BitSLLI01.cc
rv32BitSLLI01_bin_OBJECTS = rv32BitSLLI01.$(OBJEXT)
rv32BitSLLI01_bin_LDADD = $(LDADD)
rv32BitSLLI01_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
rv32BitSLT01_bin_SOURCES = rv32BitSLT01.cc
rv32BitSLT01_bin_OBJECTS = rv32BitSLT01.$(OBJEXT)
rv32BitSLT01_bin_LDADD = $(LDADD)
rv32BitSLT01_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
rv32BitSLTI01_bin_SOURCES = rv32BitSLTI01.cc
rv32BitSLTI01_bin_OBJECTS = rv32BitSLTI01.$(OBJEXT)
rv32BitSLTI01_bin_LDADD = $(LDADD)
rv32BitSLTI01_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
rv32BitSLTIU01_bin_SOURCES = rv32BitSLTIU01.cc
rv32BitSLTIU01_bin_OBJECTS = rv32BitSLTIU01.$(OBJEXT)
rv32BitSLTIU01_bin_LDADD = $(LDADD)
rv32BitSLTIU01_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
rv32BitSLTU01_bin_SOURCES = rv32BitSLTU01.cc
rv32BitSLTU01_bin_OBJECTS = rv32BitSLTU01.$(OBJEXT)
rv32BitSLTU01_bin_LDADD = $(LDADD)
rv32BitSLTU01_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
rv32BitSRA01_bin_SOURCES = rv32BitSRA01.cc
rv32BitSRA01_bin_OBJECTS = rv32BitSRA01.$(OBJEXT)
rv32BitSRA01_bin_LDADD = $(LDADD)
rv32BitSRA01_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
rv32BitSRAI01_bin_SOURCES = rv32BitSRAI01.cc
rv32BitSRAI01_bin_OBJECTS = rv32BitSRAI01.$(OBJEXT)
rv32BitSRAI01_bin_LDADD = $(LDADD)
rv32BitSRAI01_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
rv32BitSRL01_bin_SOURCES = rv32BitSRL01.cc
rv32BitSRL01_bin_OBJECTS = rv32BitSRL01.$(OBJEXT)
rv32BitSRL01_bin_LDADD = $(LDADD)
rv32BitSRL01_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
rv32BitSRLI01_bin_SOURCES = rv32BitSRLI01.cc
rv32BitSRLI01_bin_OBJECTS = rv32BitSRLI01.$(OBJEXT)
rv32BitSRLI01_bin_LDADD = $(LDADD)
rv32BitSRLI01_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
rv32BitSUB01_bin_SOURCES = rv32BitSUB01.cc
rv32BitSUB01_bin_OBJECTS = rv32BitSUB01.$(OBJEXT)
rv32BitSUB01_bin_LDADD = $(LDADD)
rv32BitSUB01_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
rv32BitSW_SH_SB01_bin_SOURCES = rv32BitSW-SH-SB01.cc
rv32BitSW_SH_SB01_bin_OBJECTS = rv32BitSW-SH-SB01.$(OBJEXT)
rv32BitSW_SH_SB01_bin_LDADD = $(LDADD)
rv32BitSW_SH_SB01_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
rv32BitXOR01_bin_SOURCES = rv32BitXOR01.cc
rv32BitXOR01_bin_OBJECTS = rv32BitXOR01.$(OBJEXT)
rv32BitXOR01_bin_LDADD = $(LDADD)
rv32BitXOR01_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
rv32BitXORI01_bin_SOURCES = rv32BitXORI01.cc
rv32BitXORI01_bin_OBJECTS = rv32BitXORI01.$(OBJEXT)
rv32BitXORI01_bin_LDADD = $(LDADD)
rv32BitXORI01_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
rv32iOperations1_bin_SOURCES = rv32iOperations1.cc
rv32iOperations1_bin_OBJECTS = rv32iOperations1.$(OBJEXT)
rv32iOperations1_bin_LDADD = $(LDADD)
rv32iOperations1_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
rv32iOperations2_bin_SOURCES = rv32iOperations2.cc
rv32iOperations2_bin_OBJECTS = rv32iOperations2.$(OBJEXT)
rv32iOperations2_bin_LDADD = $(LDADD)
rv32iOperations2_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
rv32icOperations1_bin_SOURCES = rv32icOperations1.cc
rv32icOperations1_bin_OBJECTS = rv32icOperations1.$(OBJEXT)
rv32icOperations1_bin_LDADD = $(LDADD)
rv32icOperations1_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
rv32icOperations2_bin_SOURCES = rv32icOperations2.cc
rv32icOperations2_bin_OBJECTS = rv32icOperations2.$(OBJEXT)
rv32icOperations2_bin_LDADD = $(LDADD)
rv32icOperations2_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
rv32imOperations1_bin_SOURCES = rv32imOperations1.cc
rv32imOperations1_bin_OBJECTS = rv32imOperations1.$(OBJEXT)
rv32imOperations1_bin_LDADD = $(LDADD)
rv32imOperations1_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
rv32imOperations2_bin_SOURCES = rv32imOperations2.cc
rv32imOperations2_bin_OBJECTS = rv32imOperations2.$(OBJEXT)
rv32imOperations2_bin_LDADD = $(LDADD)
rv32imOperations2_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
rv32imcOperations1_bin_SOURCES = rv32imcOperations1.cc
rv32imcOperations1_bin_OBJECTS = rv32imcOperations1.$(OBJEXT)
rv32imcOperations1_bin_LDADD = $(LDADD)
rv32imcOperations1_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
rv32imcOperations2_bin_SOURCES = rv32imcOperations2.cc
rv32imcOperations2_bin_OBJECTS = rv32imcOperations2.$(OBJEXT)
rv32imcOperations2_bin_LDADD = $(LDADD)
rv32imcOperations2_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
rvConst12Signed1_bin_SOURCES = rvConst12Signed1.cc
rvConst12Signed1_bin_OBJECTS = rvConst12Signed1.$(OBJEXT)
rvConst12Signed1_bin_LDADD = $(LDADD)
rvConst12Signed1_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
rvConst12Signed2_bin_SOURCES = rvConst12Signed2.cc
rvConst12Signed2_bin_OBJECTS = rvConst12Signed2.$(OBJEXT)
rvConst12Signed2_bin_LDADD = $(LDADD)
rvConst12Signed2_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
rvConst12Signed3_bin_SOURCES = rvConst12Signed3.cc
rvConst12Signed3_bin_OBJECTS = rvConst12Signed3.$(OBJEXT)
rvConst12Signed3_bin_LDADD = $(LDADD)
rvConst12Signed3_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
rvConst20Unsigned1_bin_SOURCES = rvConst20Unsigned1.cc
rvConst20Unsigned1_bin_OBJECTS = rvConst20Unsigned1.$(OBJEXT)
rvConst20Unsigned1_bin_LDADD = $(LDADD)
rvConst20Unsigned1_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
rvConst20Unsigned2_bin_SOURCES = rvConst20Unsigned2.cc
rvConst20Unsigned2_bin_OBJECTS = rvConst20Unsigned2.$(OBJEXT)
rvConst20Unsigned2_bin_LDADD = $(LDADD)
rvConst20Unsigned2_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
rvConst5Unsigned1_bin_SOURCES = rvConst5Unsigned1.cc
rvConst5Unsigned1_bin_OBJECTS = rvConst5Unsigned1.$(OBJEXT)
rvConst5Unsigned1_bin_LDADD = $(LDADD)
rvConst5Unsigned1_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
rvConst5Unsigned2_bin_SOURCES = rvConst5Unsigned2.cc
rvConst5Unsigned2_bin_OBJECTS = rvConst5Unsigned2.$(OBJEXT)
rvConst5Unsigned2_bin_LDADD = $(LDADD)
rvConst5Unsigned2_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
rvConst6Signed1_bin_SOURCES = rvConst6Signed1.cc
rvConst6Signed1_bin_OBJECTS = rvConst6Signed1.$(OBJEXT)
rvConst6Signed1_bin_LDADD = $(LDADD)
rvConst6Signed1_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
rvConst6Signed2_bin_SOURCES = rvConst6Signed2.cc
rvConst6Signed2_bin_OBJECTS = rvConst6Signed2.$(OBJEXT)
rvConst6Signed2_bin_LDADD = $(LDADD)
rvConst6Signed2_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
rvConst6Signed3_bin_SOURCES = rvConst6Signed3.cc
rvConst6Signed3_bin_OBJECTS = rvConst6Signed3.$(OBJEXT)
rvConst6Signed3_bin_LDADD = $(LDADD)
rvConst6Signed3_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
rvConst6Unsigned1_bin_SOURCES = rvConst6Unsigned1.cc
rvConst6Unsigned1_bin_OBJECTS = rvConst6Unsigned1.$(OBJEXT)
rvConst6Unsigned1_bin_LDADD = $(LDADD)
rvConst6Unsigned1_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
rvConst6Unsigned2_bin_SOURCES = rvConst6Unsigned2.cc
rvConst6Unsigned2_bin_OBJECTS = rvConst6Unsigned2.$(OBJEXT)
rvConst6Unsigned2_bin_LDADD = $(LDADD)
rvConst6Unsigned2_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
rvConst8Unsigned1_bin_SOURCES = rvConst8Unsigned1.cc
rvConst8Unsigned1_bin_OBJECTS = rvConst8Unsigned1.$(OBJEXT)
rvConst8Unsigned1_bin_LDADD = $(LDADD)
rvConst8Unsigned1_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
rvConst8Unsigned2_bin_SOURCES = rvConst8Unsigned2.cc
rvConst8Unsigned2_bin_OBJECTS = rvConst8Unsigned2.$(OBJEXT)
rvConst8Unsigned2_bin_LDADD = $(LDADD)
rvConst8Unsigned2_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
rvPhRegs1_bin_SOURCES = rvPhRegs1.cc
rvPhRegs1_bin_OBJECTS = rvPhRegs1.$(OBJEXT)
rvPhRegs1_bin_LDADD = $(LDADD)
rvPhRegs1_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
rvReg1_bin_SOURCES = rvReg1.cc
rvReg1_bin_OBJECTS = rvReg1.$(OBJEXT)
rvReg1_bin_LDADD = $(LDADD)
rvReg1_bin_DEPENDENCIES = $(top_builddir)/libwir.la \
	@LIBUSEFUL_PREFIX@/libuseful/libuseful.la
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/../depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade = ./$(DEPDIR)/rv32BitADD01.Po \
	./$(DEPDIR)/rv32BitADDI01.Po ./$(DEPDIR)/rv32BitAND01.Po \
	./$(DEPDIR)/rv32BitANDI01.Po ./$(DEPDIR)/rv32BitBEQ01.Po \
	./$(DEPDIR)/rv32BitBGE01.Po ./$(DEPDIR)/rv32BitBGEU01.Po \
	./$(DEPDIR)/rv32BitBLT01.Po ./$(DEPDIR)/rv32BitBLTU01.Po \
	./$(DEPDIR)/rv32BitBNE01.Po ./$(DEPDIR)/rv32BitCADD01.Po \
	./$(DEPDIR)/rv32BitCADDI01.Po ./$(DEPDIR)/rv32BitCAND01.Po \
	./$(DEPDIR)/rv32BitCANDI01.Po ./$(DEPDIR)/rv32BitCBEQZ01.Po \
	./$(DEPDIR)/rv32BitCBNEZ01.Po ./$(DEPDIR)/rv32BitCLI01.Po \
	./$(DEPDIR)/rv32BitCLUI01.Po ./$(DEPDIR)/rv32BitCMV01.Po \
	./$(DEPDIR)/rv32BitCOR01.Po ./$(DEPDIR)/rv32BitCSLLI01.Po \
	./$(DEPDIR)/rv32BitCSRAI01.Po ./$(DEPDIR)/rv32BitCSRLI01.Po \
	./$(DEPDIR)/rv32BitCSUB01.Po ./$(DEPDIR)/rv32BitCXOR01.Po \
	./$(DEPDIR)/rv32BitLUI01.Po \
	./$(DEPDIR)/rv32BitLW-LH-LHU-LB-LBU01.Po \
	./$(DEPDIR)/rv32BitMOV01.Po ./$(DEPDIR)/rv32BitOR01.Po \
	./$(DEPDIR)/rv32BitORI01.Po ./$(DEPDIR)/rv32BitSLL01.Po \
	./$(DEPDIR)/rv32BitSLLI01.Po ./$(DEPDIR)/rv32BitSLT01.Po \
	./$(DEPDIR)/rv32BitSLTI01.Po ./$(DEPDIR)/rv32BitSLTIU01.Po \
	./$(DEPDIR)/rv32BitSLTU01.Po ./$(DEPDIR)/rv32BitSRA01.Po \
	./$(DEPDIR)/rv32BitSRAI01.Po ./$(DEPDIR)/rv32BitSRL01.Po \
	./$(DEPDIR)/rv32BitSRLI01.Po ./$(DEPDIR)/rv32BitSUB01.Po \
	./$(DEPDIR)/rv32BitSW-SH-SB01.Po ./$(DEPDIR)/rv32BitXOR01.Po \
	./$(DEPDIR)/rv32BitXORI01.Po ./$(DEPDIR)/rv32iOperations1.Po \
	./$(DEPDIR)/rv32iOperations2.Po \
	./$(DEPDIR)/rv32icOperations1.Po \
	./$(DEPDIR)/rv32icOperations2.Po \
	./$(DEPDIR)/rv32imOperations1.Po \
	./$(DEPDIR)/rv32imOperations2.Po \
	./$(DEPDIR)/rv32imcOperations1.Po \
	./$(DEPDIR)/rv32imcOperations2.Po \
	./$(DEPDIR)/rvConst12Signed1.Po \
	./$(DEPDIR)/rvConst12Signed2.Po \
	./$(DEPDIR)/rvConst12Signed3.Po \
	./$(DEPDIR)/rvConst20Unsigned1.Po \
	./$(DEPDIR)/rvConst20Unsigned2.Po \
	./$(DEPDIR)/rvConst5Unsigned1.Po \
	./$(DEPDIR)/rvConst5Unsigned2.Po \
	./$(DEPDIR)/rvConst6Signed1.Po ./$(DEPDIR)/rvConst6Signed2.Po \
	./$(DEPDIR)/rvConst6Signed3.Po \
	./$(DEPDIR)/rvConst6Unsigned1.Po \
	./$(DEPDIR)/rvConst6Unsigned2.Po \
	./$(DEPDIR)/rvConst8Unsigned1.Po \
	./$(DEPDIR)/rvConst8Unsigned2.Po ./$(DEPDIR)/rvPhRegs1.Po \
	./$(DEPDIR)/rvReg1.Po
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_@AM_V@)
am__v_CXX_ = $(am__v_CXX_@AM_DEFAULT_V@)
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_@AM_V@)
am__v_CXXLD_ = $(am__v_CXXLD_@AM_DEFAULT_V@)
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = rv32BitADD01.cc rv32BitADDI01.cc rv32BitAND01.cc \
	rv32BitANDI01.cc rv32BitBEQ01.cc rv32BitBGE01.cc \
	rv32BitBGEU01.cc rv32BitBLT01.cc rv32BitBLTU01.cc \
	rv32BitBNE01.cc rv32BitCADD01.cc rv32BitCADDI01.cc \
	rv32BitCAND01.cc rv32BitCANDI01.cc rv32BitCBEQZ01.cc \
	rv32BitCBNEZ01.cc rv32BitCLI01.cc rv32BitCLUI01.cc \
	rv32BitCMV01.cc rv32BitCOR01.cc rv32BitCSLLI01.cc \
	rv32BitCSRAI01.cc rv32BitCSRLI01.cc rv32BitCSUB01.cc \
	rv32BitCXOR01.cc rv32BitLUI01.cc rv32BitLW-LH-LHU-LB-LBU01.cc \
	rv32BitMOV01.cc rv32BitOR01.cc rv32BitORI01.cc rv32BitSLL01.cc \
	rv32BitSLLI01.cc rv32BitSLT01.cc rv32BitSLTI01.cc \
	rv32BitSLTIU01.cc rv32BitSLTU01.cc rv32BitSRA01.cc \
	rv32BitSRAI01.cc rv32BitSRL01.cc rv32BitSRLI01.cc \
	rv32BitSUB01.cc rv32BitSW-SH-SB01.cc rv32BitXOR01.cc \
	rv32BitXORI01.cc rv32iOperations1.cc rv32iOperations2.cc \
	rv32icOperations1.cc rv32icOperations2.cc rv32imOperations1.cc \
	rv32imOperations2.cc rv32imcOperations1.cc \
	rv32imcOperations2.cc rvConst12Signed1.cc rvConst12Signed2.cc \
	rvConst12Signed3.cc rvConst20Unsigned1.cc \
	rvConst20Unsigned2.cc rvConst5Unsigned1.cc \
	rvConst5Unsigned2.cc rvConst6Signed1.cc rvConst6Signed2.cc \
	rvConst6Signed3.cc rvConst6Unsigned1.cc rvConst6Unsigned2.cc \
	rvConst8Unsigned1.cc rvConst8Unsigned2.cc rvPhRegs1.cc \
	rvReg1.cc
DIST_SOURCES = rv32BitADD01.cc rv32BitADDI01.cc rv32BitAND01.cc \
	rv32BitANDI01.cc rv32BitBEQ01.cc rv32BitBGE01.cc \
	rv32BitBGEU01.cc rv32BitBLT01.cc rv32BitBLTU01.cc \
	rv32BitBNE01.cc rv32BitCADD01.cc rv32BitCADDI01.cc \
	rv32BitCAND01.cc rv32BitCANDI01.cc rv32BitCBEQZ01.cc \
	rv32BitCBNEZ01.cc rv32BitCLI01.cc rv32BitCLUI01.cc \
	rv32BitCMV01.cc rv32BitCOR01.cc rv32BitCSLLI01.cc \
	rv32BitCSRAI01.cc rv32BitCSRLI01.cc rv32BitCSUB01.cc \
	rv32BitCXOR01.cc rv32BitLUI01.cc rv32BitLW-LH-LHU-LB-LBU01.cc \
	rv32BitMOV01.cc rv32BitOR01.cc rv32BitORI01.cc rv32BitSLL01.cc \
	rv32BitSLLI01.cc rv32BitSLT01.cc rv32BitSLTI01.cc \
	rv32BitSLTIU01.cc rv32BitSLTU01.cc rv32BitSRA01.cc \
	rv32BitSRAI01.cc rv32BitSRL01.cc rv32BitSRLI01.cc \
	rv32BitSUB01.cc rv32BitSW-SH-SB01.cc rv32BitXOR01.cc \
	rv32BitXORI01.cc rv32iOperations1.cc rv32iOperations2.cc \
	rv32icOperations1.cc rv32icOperations2.cc rv32imOperations1.cc \
	rv32imOperations2.cc rv32imcOperations1.cc \
	rv32imcOperations2.cc rvConst12Signed1.cc rvConst12Signed2.cc \
	rvConst12Signed3.cc rvConst20Unsigned1.cc \
	rvConst20Unsigned2.cc rvConst5Unsigned1.cc \
	rvConst5Unsigned2.cc rvConst6Signed1.cc rvConst6Signed2.cc \
	rvConst6Signed3.cc rvConst6Unsigned1.cc rvConst6Unsigned2.cc \
	rvConst8Unsigned1.cc rvConst8Unsigned2.cc rvPhRegs1.cc \
	rvReg1.cc
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
RECHECK_LOGS = $(TEST_LOGS)
AM_RECURSIVE_TARGETS = check recheck
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS = @EXEEXT@ .test
LOG_DRIVER = $(SHELL) $(top_srcdir)/../test-driver
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:@EXEEXT@.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/../test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/../depcomp \
	$(top_srcdir)/../test-driver
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_CFLAGS = @AM_CFLAGS@
AM_CPPFLAGS = @AM_CPPFLAGS@
AM_CXXFLAGS = @AM_CXXFLAGS@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AM_LDFLAGS = @AM_LDFLAGS@
AR = @AR@
ARMAS = @ARMAS@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BASH = @BASH@
BISON = @BISON@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CHMOD = @CHMOD@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DATE = @DATE@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DIRNAME = @DIRNAME@
DLLTOOL = @DLLTOOL@
DOC_ARM = @DOC_ARM@
DOC_LEON = @DOC_LEON@
DOC_RISCV = @DOC_RISCV@
DOC_TRICORE = @DOC_TRICORE@
DOT = @DOT@
DOXYGEN = @DOXYGEN@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GREP = @GREP@
HAVE_GMAKE = @HAVE_GMAKE@
HAVE_MAKE = @HAVE_MAKE@
INSTALL = @INSTALL@
INSTALLED_MAKE = @INSTALLED_MAKE@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LEX = @LEX@
LEXLIB = @LEXLIB@
LEX_OUTPUT_ROOT = @LEX_OUTPUT_ROOT@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIBUSEFUL_PREFIX = @LIBUSEFUL_PREFIX@
LIB_NOINSTALL_DIR = @LIB_NOINSTALL_DIR@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
LT_SYS_LIBRARY_PATH = @LT_SYS_LIBRARY_PATH@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
RISCVAS = @RISCVAS@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
TRIAS = @TRIAS@
UNAME = @UNAME@
VERSION = @VERSION@
WIR_RELEASE = @WIR_RELEASE@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
armas = @armas@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
riscvas = @riscvas@
runstatedir = @runstatedir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
trias = @trias@
failscripts = rvConst5Unsigned2.sh \
			  rvConst6Signed2.sh rvConst6Signed3.sh \
			  rvConst6Unsigned2.sh \
			  rvConst8Unsigned2.sh \
			  rvConst12Signed2.sh rvConst12Signed3.sh \
			  rvConst20Unsigned2.sh

passscripts = rv32iOperations1.sh \
			  rv32icOperations1.sh \
			  rv32imOperations1.sh \
			  rv32imcOperations1.sh \
			  rv32BitADD01.sh rv32BitADDI01.sh rv32BitAND01.sh \
			  rv32BitANDI01.sh rv32BitBEQ01.sh rv32BitBGE01.sh \
			  rv32BitBGEU01.sh rv32BitBLT01.sh rv32BitBLTU01.sh \
			  rv32BitBNE01.sh rv32BitCADD01.sh rv32BitCADDI01.sh \
			  rv32BitCAND01.sh rv32BitCANDI01.sh rv32BitCBEQZ01.sh \
			  rv32BitCBNEZ01.sh rv32BitCLI01.sh rv32BitCLUI01.sh \
			  rv32BitCMV01.sh rv32BitCOR01.sh rv32BitCSLLI01.sh \
			  rv32BitCSRAI01.sh rv32BitCSRLI01.sh rv32BitCSUB01.sh \
			  rv32BitCXOR01.sh rv32BitLUI01.sh \
			  rv32BitLW-LH-LHU-LB-LBU01.sh rv32BitMOV01.sh \
			  rv32BitOR01.sh rv32BitORI01.sh rv32BitSLL01.sh \
			  rv32BitSLLI01.sh rv32BitSLT01.sh rv32BitSLTI01.sh \
			  rv32BitSLTIU01.sh rv32BitSLTU01.sh rv32BitSRA01.sh \
			  rv32BitSRAI01.sh rv32BitSRL01.sh rv32BitSRLI01.sh \
			  rv32BitSUB01.sh rv32BitSW-SH-SB01.sh rv32BitXOR01.sh \
			  rv32BitXORI01.sh \
			  rvConst5Unsigned1.sh \
			  rvConst6Signed1.sh \
			  rvConst6Unsigned1.sh \
			  rvConst8Unsigned1.sh \
			  rvConst12Signed1.sh \
			  rvConst20Unsigned1.sh \
			  rvPhRegs1.sh \
			  rvReg1.sh

aspassscripts = rv32iOperations2.sh \
			  rv32icOperations2.sh \
			  rv32imOperations2.sh \
			  rv32imcOperations2.sh

check_SCRIPTS = $(failscripts) $(passscripts)
check_ASSCRIPTS = $(aspassscripts)
XFAIL_TESTS = $(failscripts)
TESTS = $(passscripts) $(aspassscripts) $(failscripts)

#
# Source files of the targets
#
CLEANFILES = $(check_PROGRAMS) $(check_SCRIPTS) \
			  $(check_ASSCRIPTS) a.out core

AM_DEFAULT_SOURCE_EXT = .cc

#
# Compiler and linker flags
#
LDADD = $(top_builddir)/libwir.la \
			  @LIBUSEFUL_PREFIX@/libuseful/libuseful.la

all: all-am

.SUFFIXES:
.SUFFIXES: .cc .lo .log .o .obj .test .test$(EXEEXT) .trs
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign arch/riscv/tests/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign arch/riscv/tests/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

rv32BitADD01.bin$(EXEEXT): $(rv32BitADD01_bin_OBJECTS) $(rv32BitADD01_bin_DEPENDENCIES) $(EXTRA_rv32BitADD01_bin_DEPENDENCIES) 
	@rm -f rv32BitADD01.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(rv32BitADD01_bin_OBJECTS) $(rv32BitADD01_bin_LDADD) $(LIBS)

rv32BitADDI01.bin$(EXEEXT): $(rv32BitADDI01_bin_OBJECTS) $(rv32BitADDI01_bin_DEPENDENCIES) $(EXTRA_rv32BitADDI01_bin_DEPENDENCIES) 
	@rm -f rv32BitADDI01.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(rv32BitADDI01_bin_OBJECTS) $(rv32BitADDI01_bin_LDADD) $(LIBS)

rv32BitAND01.bin$(EXEEXT): $(rv32BitAND01_bin_OBJECTS) $(rv32BitAND01_bin_DEPENDENCIES) $(EXTRA_rv32BitAND01_bin_DEPENDENCIES) 
	@rm -f rv32BitAND01.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(rv32BitAND01_bin_OBJECTS) $(rv32BitAND01_bin_LDADD) $(LIBS)

rv32BitANDI01.bin$(EXEEXT): $(rv32BitANDI01_bin_OBJECTS) $(rv32BitANDI01_bin_DEPENDENCIES) $(EXTRA_rv32BitANDI01_bin_DEPENDENCIES) 
	@rm -f rv32BitANDI01.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(rv32BitANDI01_bin_OBJECTS) $(rv32BitANDI01_bin_LDADD) $(LIBS)

rv32BitBEQ01.bin$(EXEEXT): $(rv32BitBEQ01_bin_OBJECTS) $(rv32BitBEQ01_bin_DEPENDENCIES) $(EXTRA_rv32BitBEQ01_bin_DEPENDENCIES) 
	@rm -f rv32BitBEQ01.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(rv32BitBEQ01_bin_OBJECTS) $(rv32BitBEQ01_bin_LDADD) $(LIBS)

rv32BitBGE01.bin$(EXEEXT): $(rv32BitBGE01_bin_OBJECTS) $(rv32BitBGE01_bin_DEPENDENCIES) $(EXTRA_rv32BitBGE01_bin_DEPENDENCIES) 
	@rm -f rv32BitBGE01.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(rv32BitBGE01_bin_OBJECTS) $(rv32BitBGE01_bin_LDADD) $(LIBS)

rv32BitBGEU01.bin$(EXEEXT): $(rv32BitBGEU01_bin_OBJECTS) $(rv32BitBGEU01_bin_DEPENDENCIES) $(EXTRA_rv32BitBGEU01_bin_DEPENDENCIES) 
	@rm -f rv32BitBGEU01.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(rv32BitBGEU01_bin_OBJECTS) $(rv32BitBGEU01_bin_LDADD) $(LIBS)

rv32BitBLT01.bin$(EXEEXT): $(rv32BitBLT01_bin_OBJECTS) $(rv32BitBLT01_bin_DEPENDENCIES) $(EXTRA_rv32BitBLT01_bin_DEPENDENCIES) 
	@rm -f rv32BitBLT01.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(rv32BitBLT01_bin_OBJECTS) $(rv32BitBLT01_bin_LDADD) $(LIBS)

rv32BitBLTU01.bin$(EXEEXT): $(rv32BitBLTU01_bin_OBJECTS) $(rv32BitBLTU01_bin_DEPENDENCIES) $(EXTRA_rv32BitBLTU01_bin_DEPENDENCIES) 
	@rm -f rv32BitBLTU01.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(rv32BitBLTU01_bin_OBJECTS) $(rv32BitBLTU01_bin_LDADD) $(LIBS)

rv32BitBNE01.bin$(EXEEXT): $(rv32BitBNE01_bin_OBJECTS) $(rv32BitBNE01_bin_DEPENDENCIES) $(EXTRA_rv32BitBNE01_bin_DEPENDENCIES) 
	@rm -f rv32BitBNE01.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(rv32BitBNE01_bin_OBJECTS) $(rv32BitBNE01_bin_LDADD) $(LIBS)

rv32BitCADD01.bin$(EXEEXT): $(rv32BitCADD01_bin_OBJECTS) $(rv32BitCADD01_bin_DEPENDENCIES) $(EXTRA_rv32BitCADD01_bin_DEPENDENCIES) 
	@rm -f rv32BitCADD01.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(rv32BitCADD01_bin_OBJECTS) $(rv32BitCADD01_bin_LDADD) $(LIBS)

rv32BitCADDI01.bin$(EXEEXT): $(rv32BitCADDI01_bin_OBJECTS) $(rv32BitCADDI01_bin_DEPENDENCIES) $(EXTRA_rv32BitCADDI01_bin_DEPENDENCIES) 
	@rm -f rv32BitCADDI01.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(rv32BitCADDI01_bin_OBJECTS) $(rv32BitCADDI01_bin_LDADD) $(LIBS)

rv32BitCAND01.bin$(EXEEXT): $(rv32BitCAND01_bin_OBJECTS) $(rv32BitCAND01_bin_DEPENDENCIES) $(EXTRA_rv32BitCAND01_bin_DEPENDENCIES) 
	@rm -f rv32BitCAND01.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(rv32BitCAND01_bin_OBJECTS) $(rv32BitCAND01_bin_LDADD) $(LIBS)

rv32BitCANDI01.bin$(EXEEXT): $(rv32BitCANDI01_bin_OBJECTS) $(rv32BitCANDI01_bin_DEPENDENCIES) $(EXTRA_rv32BitCANDI01_bin_DEPENDENCIES) 
	@rm -f rv32BitCANDI01.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(rv32BitCANDI01_bin_OBJECTS) $(rv32BitCANDI01_bin_LDADD) $(LIBS)

rv32BitCBEQZ01.bin$(EXEEXT): $(rv32BitCBEQZ01_bin_OBJECTS) $(rv32BitCBEQZ01_bin_DEPENDENCIES) $(EXTRA_rv32BitCBEQZ01_bin_DEPENDENCIES) 
	@rm -f rv32BitCBEQZ01.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(rv32BitCBEQZ01_bin_OBJECTS) $(rv32BitCBEQZ01_bin_LDADD) $(LIBS)

rv32BitCBNEZ01.bin$(EXEEXT): $(rv32BitCBNEZ01_bin_OBJECTS) $(rv32BitCBNEZ01_bin_DEPENDENCIES) $(EXTRA_rv32BitCBNEZ01_bin_DEPENDENCIES) 
	@rm -f rv32BitCBNEZ01.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(rv32BitCBNEZ01_bin_OBJECTS) $(rv32BitCBNEZ01_bin_LDADD) $(LIBS)

rv32BitCLI01.bin$(EXEEXT): $(rv32BitCLI01_bin_OBJECTS) $(rv32BitCLI01_bin_DEPENDENCIES) $(EXTRA_rv32BitCLI01_bin_DEPENDENCIES) 
	@rm -f rv32BitCLI01.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(rv32BitCLI01_bin_OBJECTS) $(rv32BitCLI01_bin_LDADD) $(LIBS)

rv32BitCLUI01.bin$(EXEEXT): $(rv32BitCLUI01_bin_OBJECTS) $(rv32BitCLUI01_bin_DEPENDENCIES) $(EXTRA_rv32BitCLUI01_bin_DEPENDENCIES) 
	@rm -f rv32BitCLUI01.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(rv32BitCLUI01_bin_OBJECTS) $(rv32BitCLUI01_bin_LDADD) $(LIBS)

rv32BitCMV01.bin$(EXEEXT): $(rv32BitCMV01_bin_OBJECTS) $(rv32BitCMV01_bin_DEPENDENCIES) $(EXTRA_rv32BitCMV01_bin_DEPENDENCIES) 
	@rm -f rv32BitCMV01.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(rv32BitCMV01_bin_OBJECTS) $(rv32BitCMV01_bin_LDADD) $(LIBS)

rv32BitCOR01.bin$(EXEEXT): $(rv32BitCOR01_bin_OBJECTS) $(rv32BitCOR01_bin_DEPENDENCIES) $(EXTRA_rv32BitCOR01_bin_DEPENDENCIES) 
	@rm -f rv32BitCOR01.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(rv32BitCOR01_bin_OBJECTS) $(rv32BitCOR01_bin_LDADD) $(LIBS)

rv32BitCSLLI01.bin$(EXEEXT): $(rv32BitCSLLI01_bin_OBJECTS) $(rv32BitCSLLI01_bin_DEPENDENCIES) $(EXTRA_rv32BitCSLLI01_bin_DEPENDENCIES) 
	@rm -f rv32BitCSLLI01.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(rv32BitCSLLI01_bin_OBJECTS) $(rv32BitCSLLI01_bin_LDADD) $(LIBS)

rv32BitCSRAI01.bin$(EXEEXT): $(rv32BitCSRAI01_bin_OBJECTS) $(rv32BitCSRAI01_bin_DEPENDENCIES) $(EXTRA_rv32BitCSRAI01_bin_DEPENDENCIES) 
	@rm -f rv32BitCSRAI01.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(rv32BitCSRAI01_bin_OBJECTS) $(rv32BitCSRAI01_bin_LDADD) $(LIBS)

rv32BitCSRLI01.bin$(EXEEXT): $(rv32BitCSRLI01_bin_OBJECTS) $(rv32BitCSRLI01_bin_DEPENDENCIES) $(EXTRA_rv32BitCSRLI01_bin_DEPENDENCIES) 
	@rm -f rv32BitCSRLI01.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(rv32BitCSRLI01_bin_OBJECTS) $(rv32BitCSRLI01_bin_LDADD) $(LIBS)

rv32BitCSUB01.bin$(EXEEXT): $(rv32BitCSUB01_bin_OBJECTS) $(rv32BitCSUB01_bin_DEPENDENCIES) $(EXTRA_rv32BitCSUB01_bin_DEPENDENCIES) 
	@rm -f rv32BitCSUB01.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(rv32BitCSUB01_bin_OBJECTS) $(rv32BitCSUB01_bin_LDADD) $(LIBS)

rv32BitCXOR01.bin$(EXEEXT): $(rv32BitCXOR01_bin_OBJECTS) $(rv32BitCXOR01_bin_DEPENDENCIES) $(EXTRA_rv32BitCXOR01_bin_DEPENDENCIES) 
	@rm -f rv32BitCXOR01.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(rv32BitCXOR01_bin_OBJECTS) $(rv32BitCXOR01_bin_LDADD) $(LIBS)

rv32BitLUI01.bin$(EXEEXT): $(rv32BitLUI01_bin_OBJECTS) $(rv32BitLUI01_bin_DEPENDENCIES) $(EXTRA_rv32BitLUI01_bin_DEPENDENCIES) 
	@rm -f rv32BitLUI01.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(rv32BitLUI01_bin_OBJECTS) $(rv32BitLUI01_bin_LDADD) $(LIBS)

rv32BitLW-LH-LHU-LB-LBU01.bin$(EXEEXT): $(rv32BitLW_LH_LHU_LB_LBU01_bin_OBJECTS) $(rv32BitLW_LH_LHU_LB_LBU01_bin_DEPENDENCIES) $(EXTRA_rv32BitLW_LH_LHU_LB_LBU01_bin_DEPENDENCIES) 
	@rm -f rv32BitLW-LH-LHU-LB-LBU01.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(rv32BitLW_LH_LHU_LB_LBU01_bin_OBJECTS) $(rv32BitLW_LH_LHU_LB_LBU01_bin_LDADD) $(LIBS)

rv32BitMOV01.bin$(EXEEXT): $(rv32BitMOV01_bin_OBJECTS) $(rv32BitMOV01_bin_DEPENDENCIES) $(EXTRA_rv32BitMOV01_bin_DEPENDENCIES) 
	@rm -f rv32BitMOV01.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(rv32BitMOV01_bin_OBJECTS) $(rv32BitMOV01_bin_LDADD) $(LIBS)

rv32BitOR01.bin$(EXEEXT): $(rv32BitOR01_bin_OBJECTS) $(rv32BitOR01_bin_DEPENDENCIES) $(EXTRA_rv32BitOR01_bin_DEPENDENCIES) 
	@rm -f rv32BitOR01.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(rv32BitOR01_bin_OBJECTS) $(rv32BitOR01_bin_LDADD) $(LIBS)

rv32BitORI01.bin$(EXEEXT): $(rv32BitORI01_bin_OBJECTS) $(rv32BitORI01_bin_DEPENDENCIES) $(EXTRA_rv32BitORI01_bin_DEPENDENCIES) 
	@rm -f rv32BitORI01.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(rv32BitORI01_bin_OBJECTS) $(rv32BitORI01_bin_LDADD) $(LIBS)

rv32BitSLL01.bin$(EXEEXT): $(rv32BitSLL01_bin_OBJECTS) $(rv32BitSLL01_bin_DEPENDENCIES) $(EXTRA_rv32BitSLL01_bin_DEPENDENCIES) 
	@rm -f rv32BitSLL01.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(rv32BitSLL01_bin_OBJECTS) $(rv32BitSLL01_bin_LDADD) $(LIBS)

rv32BitSLLI01.bin$(EXEEXT): $(rv32BitSLLI01_bin_OBJECTS) $(rv32BitSLLI01_bin_DEPENDENCIES) $(EXTRA_rv32BitSLLI01_bin_DEPENDENCIES) 
	@rm -f rv32BitSLLI01.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(rv32BitSLLI01_bin_OBJECTS) $(rv32BitSLLI01_bin_LDADD) $(LIBS)

rv32BitSLT01.bin$(EXEEXT): $(rv32BitSLT01_bin_OBJECTS) $(rv32BitSLT01_bin_DEPENDENCIES) $(EXTRA_rv32BitSLT01_bin_DEPENDENCIES) 
	@rm -f rv32BitSLT01.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(rv32BitSLT01_bin_OBJECTS) $(rv32BitSLT01_bin_LDADD) $(LIBS)

rv32BitSLTI01.bin$(EXEEXT): $(rv32BitSLTI01_bin_OBJECTS) $(rv32BitSLTI01_bin_DEPENDENCIES) $(EXTRA_rv32BitSLTI01_bin_DEPENDENCIES) 
	@rm -f rv32BitSLTI01.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(rv32BitSLTI01_bin_OBJECTS) $(rv32BitSLTI01_bin_LDADD) $(LIBS)

rv32BitSLTIU01.bin$(EXEEXT): $(rv32BitSLTIU01_bin_OBJECTS) $(rv32BitSLTIU01_bin_DEPENDENCIES) $(EXTRA_rv32BitSLTIU01_bin_DEPENDENCIES) 
	@rm -f rv32BitSLTIU01.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(rv32BitSLTIU01_bin_OBJECTS) $(rv32BitSLTIU01_bin_LDADD) $(LIBS)

rv32BitSLTU01.bin$(EXEEXT): $(rv32BitSLTU01_bin_OBJECTS) $(rv32BitSLTU01_bin_DEPENDENCIES) $(EXTRA_rv32BitSLTU01_bin_DEPENDENCIES) 
	@rm -f rv32BitSLTU01.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(rv32BitSLTU01_bin_OBJECTS) $(rv32BitSLTU01_bin_LDADD) $(LIBS)

rv32BitSRA01.bin$(EXEEXT): $(rv32BitSRA01_bin_OBJECTS) $(rv32BitSRA01_bin_DEPENDENCIES) $(EXTRA_rv32BitSRA01_bin_DEPENDENCIES) 
	@rm -f rv32BitSRA01.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(rv32BitSRA01_bin_OBJECTS) $(rv32BitSRA01_bin_LDADD) $(LIBS)

rv32BitSRAI01.bin$(EXEEXT): $(rv32BitSRAI01_bin_OBJECTS) $(rv32BitSRAI01_bin_DEPENDENCIES) $(EXTRA_rv32BitSRAI01_bin_DEPENDENCIES) 
	@rm -f rv32BitSRAI01.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(rv32BitSRAI01_bin_OBJECTS) $(rv32BitSRAI01_bin_LDADD) $(LIBS)

rv32BitSRL01.bin$(EXEEXT): $(rv32BitSRL01_bin_OBJECTS) $(rv32BitSRL01_bin_DEPENDENCIES) $(EXTRA_rv32BitSRL01_bin_DEPENDENCIES) 
	@rm -f rv32BitSRL01.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(rv32BitSRL01_bin_OBJECTS) $(rv32BitSRL01_bin_LDADD) $(LIBS)

rv32BitSRLI01.bin$(EXEEXT): $(rv32BitSRLI01_bin_OBJECTS) $(rv32BitSRLI01_bin_DEPENDENCIES) $(EXTRA_rv32BitSRLI01_bin_DEPENDENCIES) 
	@rm -f rv32BitSRLI01.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(rv32BitSRLI01_bin_OBJECTS) $(rv32BitSRLI01_bin_LDADD) $(LIBS)

rv32BitSUB01.bin$(EXEEXT): $(rv32BitSUB01_bin_OBJECTS) $(rv32BitSUB01_bin_DEPENDENCIES) $(EXTRA_rv32BitSUB01_bin_DEPENDENCIES) 
	@rm -f rv32BitSUB01.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(rv32BitSUB01_bin_OBJECTS) $(rv32BitSUB01_bin_LDADD) $(LIBS)

rv32BitSW-SH-SB01.bin$(EXEEXT): $(rv32BitSW_SH_SB01_bin_OBJECTS) $(rv32BitSW_SH_SB01_bin_DEPENDENCIES) $(EXTRA_rv32BitSW_SH_SB01_bin_DEPENDENCIES) 
	@rm -f rv32BitSW-SH-SB01.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(rv32BitSW_SH_SB01_bin_OBJECTS) $(rv32BitSW_SH_SB01_bin_LDADD) $(LIBS)

rv32BitXOR01.bin$(EXEEXT): $(rv32BitXOR01_bin_OBJECTS) $(rv32BitXOR01_bin_DEPENDENCIES) $(EXTRA_rv32BitXOR01_bin_DEPENDENCIES) 
	@rm -f rv32BitXOR01.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(rv32BitXOR01_bin_OBJECTS) $(rv32BitXOR01_bin_LDADD) $(LIBS)

rv32BitXORI01.bin$(EXEEXT): $(rv32BitXORI01_bin_OBJECTS) $(rv32BitXORI01_bin_DEPENDENCIES) $(EXTRA_rv32BitXORI01_bin_DEPENDENCIES) 
	@rm -f rv32BitXORI01.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(rv32BitXORI01_bin_OBJECTS) $(rv32BitXORI01_bin_LDADD) $(LIBS)

rv32iOperations1.bin$(EXEEXT): $(rv32iOperations1_bin_OBJECTS) $(rv32iOperations1_bin_DEPENDENCIES) $(EXTRA_rv32iOperations1_bin_DEPENDENCIES) 
	@rm -f rv32iOperations1.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(rv32iOperations1_bin_OBJECTS) $(rv32iOperations1_bin_LDADD) $(LIBS)

rv32iOperations2.bin$(EXEEXT): $(rv32iOperations2_bin_OBJECTS) $(rv32iOperations2_bin_DEPENDENCIES) $(EXTRA_rv32iOperations2_bin_DEPENDENCIES) 
	@rm -f rv32iOperations2.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(rv32iOperations2_bin_OBJECTS) $(rv32iOperations2_bin_LDADD) $(LIBS)

rv32icOperations1.bin$(EXEEXT): $(rv32icOperations1_bin_OBJECTS) $(rv32icOperations1_bin_DEPENDENCIES) $(EXTRA_rv32icOperations1_bin_DEPENDENCIES) 
	@rm -f rv32icOperations1.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(rv32icOperations1_bin_OBJECTS) $(rv32icOperations1_bin_LDADD) $(LIBS)

rv32icOperations2.bin$(EXEEXT): $(rv32icOperations2_bin_OBJECTS) $(rv32icOperations2_bin_DEPENDENCIES) $(EXTRA_rv32icOperations2_bin_DEPENDENCIES) 
	@rm -f rv32icOperations2.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(rv32icOperations2_bin_OBJECTS) $(rv32icOperations2_bin_LDADD) $(LIBS)

rv32imOperations1.bin$(EXEEXT): $(rv32imOperations1_bin_OBJECTS) $(rv32imOperations1_bin_DEPENDENCIES) $(EXTRA_rv32imOperations1_bin_DEPENDENCIES) 
	@rm -f rv32imOperations1.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(rv32imOperations1_bin_OBJECTS) $(rv32imOperations1_bin_LDADD) $(LIBS)

rv32imOperations2.bin$(EXEEXT): $(rv32imOperations2_bin_OBJECTS) $(rv32imOperations2_bin_DEPENDENCIES) $(EXTRA_rv32imOperations2_bin_DEPENDENCIES) 
	@rm -f rv32imOperations2.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(rv32imOperations2_bin_OBJECTS) $(rv32imOperations2_bin_LDADD) $(LIBS)

rv32imcOperations1.bin$(EXEEXT): $(rv32imcOperations1_bin_OBJECTS) $(rv32imcOperations1_bin_DEPENDENCIES) $(EXTRA_rv32imcOperations1_bin_DEPENDENCIES) 
	@rm -f rv32imcOperations1.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(rv32imcOperations1_bin_OBJECTS) $(rv32imcOperations1_bin_LDADD) $(LIBS)

rv32imcOperations2.bin$(EXEEXT): $(rv32imcOperations2_bin_OBJECTS) $(rv32imcOperations2_bin_DEPENDENCIES) $(EXTRA_rv32imcOperations2_bin_DEPENDENCIES) 
	@rm -f rv32imcOperations2.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(rv32imcOperations2_bin_OBJECTS) $(rv32imcOperations2_bin_LDADD) $(LIBS)

rvConst12Signed1.bin$(EXEEXT): $(rvConst12Signed1_bin_OBJECTS) $(rvConst12Signed1_bin_DEPENDENCIES) $(EXTRA_rvConst12Signed1_bin_DEPENDENCIES) 
	@rm -f rvConst12Signed1.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(rvConst12Signed1_bin_OBJECTS) $(rvConst12Signed1_bin_LDADD) $(LIBS)

rvConst12Signed2.bin$(EXEEXT): $(rvConst12Signed2_bin_OBJECTS) $(rvConst12Signed2_bin_DEPENDENCIES) $(EXTRA_rvConst12Signed2_bin_DEPENDENCIES) 
	@rm -f rvConst12Signed2.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(rvConst12Signed2_bin_OBJECTS) $(rvConst12Signed2_bin_LDADD) $(LIBS)

rvConst12Signed3.bin$(EXEEXT): $(rvConst12Signed3_bin_OBJECTS) $(rvConst12Signed3_bin_DEPENDENCIES) $(EXTRA_rvConst12Signed3_bin_DEPENDENCIES) 
	@rm -f rvConst12Signed3.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(rvConst12Signed3_bin_OBJECTS) $(rvConst12Signed3_bin_LDADD) $(LIBS)

rvConst20Unsigned1.bin$(EXEEXT): $(rvConst20Unsigned1_bin_OBJECTS) $(rvConst20Unsigned1_bin_DEPENDENCIES) $(EXTRA_rvConst20Unsigned1_bin_DEPENDENCIES) 
	@rm -f rvConst20Unsigned1.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(rvConst20Unsigned1_bin_OBJECTS) $(rvConst20Unsigned1_bin_LDADD) $(LIBS)

rvConst20Unsigned2.bin$(EXEEXT): $(rvConst20Unsigned2_bin_OBJECTS) $(rvConst20Unsigned2_bin_DEPENDENCIES) $(EXTRA_rvConst20Unsigned2_bin_DEPENDENCIES) 
	@rm -f rvConst20Unsigned2.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(rvConst20Unsigned2_bin_OBJECTS) $(rvConst20Unsigned2_bin_LDADD) $(LIBS)

rvConst5Unsigned1.bin$(EXEEXT): $(rvConst5Unsigned1_bin_OBJECTS) $(rvConst5Unsigned1_bin_DEPENDENCIES) $(EXTRA_rvConst5Unsigned1_bin_DEPENDENCIES) 
	@rm -f rvConst5Unsigned1.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(rvConst5Unsigned1_bin_OBJECTS) $(rvConst5Unsigned1_bin_LDADD) $(LIBS)

rvConst5Unsigned2.bin$(EXEEXT): $(rvConst5Unsigned2_bin_OBJECTS) $(rvConst5Unsigned2_bin_DEPENDENCIES) $(EXTRA_rvConst5Unsigned2_bin_DEPENDENCIES) 
	@rm -f rvConst5Unsigned2.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(rvConst5Unsigned2_bin_OBJECTS) $(rvConst5Unsigned2_bin_LDADD) $(LIBS)

rvConst6Signed1.bin$(EXEEXT): $(rvConst6Signed1_bin_OBJECTS) $(rvConst6Signed1_bin_DEPENDENCIES) $(EXTRA_rvConst6Signed1_bin_DEPENDENCIES) 
	@rm -f rvConst6Signed1.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(rvConst6Signed1_bin_OBJECTS) $(rvConst6Signed1_bin_LDADD) $(LIBS)

rvConst6Signed2.bin$(EXEEXT): $(rvConst6Signed2_bin_OBJECTS) $(rvConst6Signed2_bin_DEPENDENCIES) $(EXTRA_rvConst6Signed2_bin_DEPENDENCIES) 
	@rm -f rvConst6Signed2.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(rvConst6Signed2_bin_OBJECTS) $(rvConst6Signed2_bin_LDADD) $(LIBS)

rvConst6Signed3.bin$(EXEEXT): $(rvConst6Signed3_bin_OBJECTS) $(rvConst6Signed3_bin_DEPENDENCIES) $(EXTRA_rvConst6Signed3_bin_DEPENDENCIES) 
	@rm -f rvConst6Signed3.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(rvConst6Signed3_bin_OBJECTS) $(rvConst6Signed3_bin_LDADD) $(LIBS)

rvConst6Unsigned1.bin$(EXEEXT): $(rvConst6Unsigned1_bin_OBJECTS) $(rvConst6Unsigned1_bin_DEPENDENCIES) $(EXTRA_rvConst6Unsigned1_bin_DEPENDENCIES) 
	@rm -f rvConst6Unsigned1.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(rvConst6Unsigned1_bin_OBJECTS) $(rvConst6Unsigned1_bin_LDADD) $(LIBS)

rvConst6Unsigned2.bin$(EXEEXT): $(rvConst6Unsigned2_bin_OBJECTS) $(rvConst6Unsigned2_bin_DEPENDENCIES) $(EXTRA_rvConst6Unsigned2_bin_DEPENDENCIES) 
	@rm -f rvConst6Unsigned2.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(rvConst6Unsigned2_bin_OBJECTS) $(rvConst6Unsigned2_bin_LDADD) $(LIBS)

rvConst8Unsigned1.bin$(EXEEXT): $(rvConst8Unsigned1_bin_OBJECTS) $(rvConst8Unsigned1_bin_DEPENDENCIES) $(EXTRA_rvConst8Unsigned1_bin_DEPENDENCIES) 
	@rm -f rvConst8Unsigned1.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(rvConst8Unsigned1_bin_OBJECTS) $(rvConst8Unsigned1_bin_LDADD) $(LIBS)

rvConst8Unsigned2.bin$(EXEEXT): $(rvConst8Unsigned2_bin_OBJECTS) $(rvConst8Unsigned2_bin_DEPENDENCIES) $(EXTRA_rvConst8Unsigned2_bin_DEPENDENCIES) 
	@rm -f rvConst8Unsigned2.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(rvConst8Unsigned2_bin_OBJECTS) $(rvConst8Unsigned2_bin_LDADD) $(LIBS)

rvPhRegs1.bin$(EXEEXT): $(rvPhRegs1_bin_OBJECTS) $(rvPhRegs1_bin_DEPENDENCIES) $(EXTRA_rvPhRegs1_bin_DEPENDENCIES) 
	@rm -f rvPhRegs1.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(rvPhRegs1_bin_OBJECTS) $(rvPhRegs1_bin_LDADD) $(LIBS)

rvReg1.bin$(EXEEXT): $(rvReg1_bin_OBJECTS) $(rvReg1_bin_DEPENDENCIES) $(EXTRA_rvReg1_bin_DEPENDENCIES) 
	@rm -f rvReg1.bin$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(rvReg1_bin_OBJECTS) $(rvReg1_bin_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rv32BitADD01.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rv32BitADDI01.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rv32BitAND01.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rv32BitANDI01.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rv32BitBEQ01.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rv32BitBGE01.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rv32BitBGEU01.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rv32BitBLT01.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rv32BitBLTU01.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rv32BitBNE01.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rv32BitCADD01.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rv32BitCADDI01.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rv32BitCAND01.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rv32BitCANDI01.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rv32BitCBEQZ01.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rv32BitCBNEZ01.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rv32BitCLI01.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rv32BitCLUI01.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rv32BitCMV01.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rv32BitCOR01.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rv32BitCSLLI01.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rv32BitCSRAI01.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rv32BitCSRLI01.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rv32BitCSUB01.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rv32BitCXOR01.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rv32BitLUI01.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rv32BitLW-LH-LHU-LB-LBU01.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rv32BitMOV01.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rv32BitOR01.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rv32BitORI01.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rv32BitSLL01.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rv32BitSLLI01.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rv32BitSLT01.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rv32BitSLTI01.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rv32BitSLTIU01.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rv32BitSLTU01.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rv32BitSRA01.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rv32BitSRAI01.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rv32BitSRL01.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rv32BitSRLI01.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rv32BitSUB01.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rv32BitSW-SH-SB01.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rv32BitXOR01.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rv32BitXORI01.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rv32iOperations1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rv32iOperations2.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rv32icOperations1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rv32icOperations2.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rv32imOperations1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rv32imOperations2.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rv32imcOperations1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rv32imcOperations2.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rvConst12Signed1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rvConst12Signed2.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rvConst12Signed3.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rvConst20Unsigned1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rvConst20Unsigned2.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rvConst5Unsigned1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rvConst5Unsigned2.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rvConst6Signed1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rvConst6Signed2.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rvConst6Signed3.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rvConst6Unsigned1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rvConst6Unsigned2.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rvConst8Unsigned1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rvConst8Unsigned2.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rvPhRegs1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rvReg1.Po@am__quote@ # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.cc.o:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	elif test -n "$$redo_logs"; then \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary for $(PACKAGE_STRING)$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS: $(check_PROGRAMS) $(check_SCRIPTS)
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all $(check_PROGRAMS) $(check_SCRIPTS)
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
rv32iOperations1.sh.log: rv32iOperations1.sh
	@p='rv32iOperations1.sh'; \
	b='rv32iOperations1.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
rv32icOperations1.sh.log: rv32icOperations1.sh
	@p='rv32icOperations1.sh'; \
	b='rv32icOperations1.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
rv32imOperations1.sh.log: rv32imOperations1.sh
	@p='rv32imOperations1.sh'; \
	b='rv32imOperations1.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
rv32imcOperations1.sh.log: rv32imcOperations1.sh
	@p='rv32imcOperations1.sh'; \
	b='rv32imcOperations1.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
rv32BitADD01.sh.log: rv32BitADD01.sh
	@p='rv32BitADD01.sh'; \
	b='rv32BitADD01.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
rv32BitADDI01.sh.log: rv32BitADDI01.sh
	@p='rv32BitADDI01.sh'; \
	b='rv32BitADDI01.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
rv32BitAND01.sh.log: rv32BitAND01.sh
	@p='rv32BitAND01.sh'; \
	b='rv32BitAND01.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
rv32BitANDI01.sh.log: rv32BitANDI01.sh
	@p='rv32BitANDI01.sh'; \
	b='rv32BitANDI01.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
rv32BitBEQ01.sh.log: rv32BitBEQ01.sh
	@p='rv32BitBEQ01.sh'; \
	b='rv32BitBEQ01.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
rv32BitBGE01.sh.log: rv32BitBGE01.sh
	@p='rv32BitBGE01.sh'; \
	b='rv32BitBGE01.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
rv32BitBGEU01.sh.log: rv32BitBGEU01.sh
	@p='rv32BitBGEU01.sh'; \
	b='rv32BitBGEU01.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
rv32BitBLT01.sh.log: rv32BitBLT01.sh
	@p='rv32BitBLT01.sh'; \
	b='rv32BitBLT01.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
rv32BitBLTU01.sh.log: rv32BitBLTU01.sh
	@p='rv32BitBLTU01.sh'; \
	b='rv32BitBLTU01.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
rv32BitBNE01.sh.log: rv32BitBNE01.sh
	@p='rv32BitBNE01.sh'; \
	b='rv32BitBNE01.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
rv32BitCADD01.sh.log: rv32BitCADD01.sh
	@p='rv32BitCADD01.sh'; \
	b='rv32BitCADD01.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
rv32BitCADDI01.sh.log: rv32BitCADDI01.sh
	@p='rv32BitCADDI01.sh'; \
	b='rv32BitCADDI01.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
rv32BitCAND01.sh.log: rv32BitCAND01.sh
	@p='rv32BitCAND01.sh'; \
	b='rv32BitCAND01.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
rv32BitCANDI01.sh.log: rv32BitCANDI01.sh
	@p='rv32BitCANDI01.sh'; \
	b='rv32BitCANDI01.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
rv32BitCBEQZ01.sh.log: rv32BitCBEQZ01.sh
	@p='rv32BitCBEQZ01.sh'; \
	b='rv32BitCBEQZ01.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
rv32BitCBNEZ01.sh.log: rv32BitCBNEZ01.sh
	@p='rv32BitCBNEZ01.sh'; \
	b='rv32BitCBNEZ01.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
rv32BitCLI01.sh.log: rv32BitCLI01.sh
	@p='rv32BitCLI01.sh'; \
	b='rv32BitCLI01.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
rv32BitCLUI01.sh.log: rv32BitCLUI01.sh
	@p='rv32BitCLUI01.sh'; \
	b='rv32BitCLUI01.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
rv32BitCMV01.sh.log: rv32BitCMV01.sh
	@p='rv32BitCMV01.sh'; \
	b='rv32BitCMV01.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
rv32BitCOR01.sh.log: rv32BitCOR01.sh
	@p='rv32BitCOR01.sh'; \
	b='rv32BitCOR01.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
rv32BitCSLLI01.sh.log: rv32BitCSLLI01.sh
	@p='rv32BitCSLLI01.sh'; \
	b='rv32BitCSLLI01.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
rv32BitCSRAI01.sh.log: rv32BitCSRAI01.sh
	@p='rv32BitCSRAI01.sh'; \
	b='rv32BitCSRAI01.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
rv32BitCSRLI01.sh.log: rv32BitCSRLI01.sh
	@p='rv32BitCSRLI01.sh'; \
	b='rv32BitCSRLI01.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
rv32BitCSUB01.sh.log: rv32BitCSUB01.sh
	@p='rv32BitCSUB01.sh'; \
	b='rv32BitCSUB01.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
rv32BitCXOR01.sh.log: rv32BitCXOR01.sh
	@p='rv32BitCXOR01.sh'; \
	b='rv32BitCXOR01.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
rv32BitLUI01.sh.log: rv32BitLUI01.sh
	@p='rv32BitLUI01.sh'; \
	b='rv32BitLUI01.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
rv32BitLW-LH-LHU-LB-LBU01.sh.log: rv32BitLW-LH-LHU-LB-LBU01.sh
	@p='rv32BitLW-LH-LHU-LB-LBU01.sh'; \
	b='rv32BitLW-LH-LHU-LB-LBU01.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
rv32BitMOV01.sh.log: rv32BitMOV01.sh
	@p='rv32BitMOV01.sh'; \
	b='rv32BitMOV01.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
rv32BitOR01.sh.log: rv32BitOR01.sh
	@p='rv32BitOR01.sh'; \
	b='rv32BitOR01.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
rv32BitORI01.sh.log: rv32BitORI01.sh
	@p='rv32BitORI01.sh'; \
	b='rv32BitORI01.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
rv32BitSLL01.sh.log: rv32BitSLL01.sh
	@p='rv32BitSLL01.sh'; \
	b='rv32BitSLL01.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
rv32BitSLLI01.sh.log: rv32BitSLLI01.sh
	@p='rv32BitSLLI01.sh'; \
	b='rv32BitSLLI01.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
rv32BitSLT01.sh.log: rv32BitSLT01.sh
	@p='rv32BitSLT01.sh'; \
	b='rv32BitSLT01.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
rv32BitSLTI01.sh.log: rv32BitSLTI01.sh
	@p='rv32BitSLTI01.sh'; \
	b='rv32BitSLTI01.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
rv32BitSLTIU01.sh.log: rv32BitSLTIU01.sh
	@p='rv32BitSLTIU01.sh'; \
	b='rv32BitSLTIU01.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
rv32BitSLTU01.sh.log: rv32BitSLTU01.sh
	@p='rv32BitSLTU01.sh'; \
	b='rv32BitSLTU01.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
rv32BitSRA01.sh.log: rv32BitSRA01.sh
	@p='rv32BitSRA01.sh'; \
	b='rv32BitSRA01.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
rv32BitSRAI01.sh.log: rv32BitSRAI01.sh
	@p='rv32BitSRAI01.sh'; \
	b='rv32BitSRAI01.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
rv32BitSRL01.sh.log: rv32BitSRL01.sh
	@p='rv32BitSRL01.sh'; \
	b='rv32BitSRL01.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
rv32BitSRLI01.sh.log: rv32BitSRLI01.sh
	@p='rv32BitSRLI01.sh'; \
	b='rv32BitSRLI01.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
rv32BitSUB01.sh.log: rv32BitSUB01.sh
	@p='rv32BitSUB01.sh'; \
	b='rv32BitSUB01.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
rv32BitSW-SH-SB01.sh.log: rv32BitSW-SH-SB01.sh
	@p='rv32BitSW-SH-SB01.sh'; \
	b='rv32BitSW-SH-SB01.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
rv32BitXOR01.sh.log: rv32BitXOR01.sh
	@p='rv32BitXOR01.sh'; \
	b='rv32BitXOR01.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
rv32BitXORI01.sh.log: rv32BitXORI01.sh
	@p='rv32BitXORI01.sh'; \
	b='rv32BitXORI01.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
rvConst5Unsigned1.sh.log: rvConst5Unsigned1.sh
	@p='rvConst5Unsigned1.sh'; \
	b='rvConst5Unsigned1.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
rvConst6Signed1.sh.log: rvConst6Signed1.sh
	@p='rvConst6Signed1.sh'; \
	b='rvConst6Signed1.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
rvConst6Unsigned1.sh.log: rvConst6Unsigned1.sh
	@p='rvConst6Unsigned1.sh'; \
	b='rvConst6Unsigned1.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
rvConst8Unsigned1.sh.log: rvConst8Unsigned1.sh
	@p='rvConst8Unsigned1.sh'; \
	b='rvConst8Unsigned1.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
rvConst12Signed1.sh.log: rvConst12Signed1.sh
	@p='rvConst12Signed1.sh'; \
	b='rvConst12Signed1.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
rvConst20Unsigned1.sh.log: rvConst20Unsigned1.sh
	@p='rvConst20Unsigned1.sh'; \
	b='rvConst20Unsigned1.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
rvPhRegs1.sh.log: rvPhRegs1.sh
	@p='rvPhRegs1.sh'; \
	b='rvPhRegs1.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
rvReg1.sh.log: rvReg1.sh
	@p='rvReg1.sh'; \
	b='rvReg1.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
rv32iOperations2.sh.log: rv32iOperations2.sh
	@p='rv32iOperations2.sh'; \
	b='rv32iOperations2.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
rv32icOperations2.sh.log: rv32icOperations2.sh
	@p='rv32icOperations2.sh'; \
	b='rv32icOperations2.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
rv32imOperations2.sh.log: rv32imOperations2.sh
	@p='rv32imOperations2.sh'; \
	b='rv32imOperations2.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
rv32imcOperations2.sh.log: rv32imcOperations2.sh
	@p='rv32imcOperations2.sh'; \
	b='rv32imcOperations2.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
rvConst5Unsigned2.sh.log: rvConst5Unsigned2.sh
	@p='rvConst5Unsigned2.sh'; \
	b='rvConst5Unsigned2.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
rvConst6Signed2.sh.log: rvConst6Signed2.sh
	@p='rvConst6Signed2.sh'; \
	b='rvConst6Signed2.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
rvConst6Signed3.sh.log: rvConst6Signed3.sh
	@p='rvConst6Signed3.sh'; \
	b='rvConst6Signed3.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
rvConst6Unsigned2.sh.log: rvConst6Unsigned2.sh
	@p='rvConst6Unsigned2.sh'; \
	b='rvConst6Unsigned2.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
rvConst8Unsigned2.sh.log: rvConst8Unsigned2.sh
	@p='rvConst8Unsigned2.sh'; \
	b='rvConst8Unsigned2.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
rvConst12Signed2.sh.log: rvConst12Signed2.sh
	@p='rvConst12Signed2.sh'; \
	b='rvConst12Signed2.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
rvConst12Signed3.sh.log: rvConst12Signed3.sh
	@p='rvConst12Signed3.sh'; \
	b='rvConst12Signed3.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
rvConst20Unsigned2.sh.log: rvConst20Unsigned2.sh
	@p='rvConst20Unsigned2.sh'; \
	b='rvConst20Unsigned2.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
@am__EXEEXT_TRUE@.test$(EXEEXT).log:
@am__EXEEXT_TRUE@	@p='$<'; \
@am__EXEEXT_TRUE@	$(am__set_b); \
@am__EXEEXT_TRUE@	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
@am__EXEEXT_TRUE@	--log-file $$b.log --trs-file $$b.trs \
@am__EXEEXT_TRUE@	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
@am__EXEEXT_TRUE@	"$$tst" $(AM_TESTS_FD_REDIRECT)

distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS) $(check_SCRIPTS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic clean-libtool \
	mostlyclean-am

distclean: distclean-am
		-rm -f ./$(DEPDIR)/rv32BitADD01.Po
	-rm -f ./$(DEPDIR)/rv32BitADDI01.Po
	-rm -f ./$(DEPDIR)/rv32BitAND01.Po
	-rm -f ./$(DEPDIR)/rv32BitANDI01.Po
	-rm -f ./$(DEPDIR)/rv32BitBEQ01.Po
	-rm -f ./$(DEPDIR)/rv32BitBGE01.Po
	-rm -f ./$(DEPDIR)/rv32BitBGEU01.Po
	-rm -f ./$(DEPDIR)/rv32BitBLT01.Po
	-rm -f ./$(DEPDIR)/rv32BitBLTU01.Po
	-rm -f ./$(DEPDIR)/rv32BitBNE01.Po
	-rm -f ./$(DEPDIR)/rv32BitCADD01.Po
	-rm -f ./$(DEPDIR)/rv32BitCADDI01.Po
	-rm -f ./$(DEPDIR)/rv32BitCAND01.Po
	-rm -f ./$(DEPDIR)/rv32BitCANDI01.Po
	-rm -f ./$(DEPDIR)/rv32BitCBEQZ01.Po
	-rm -f ./$(DEPDIR)/rv32BitCBNEZ01.Po
	-rm -f ./$(DEPDIR)/rv32BitCLI01.Po
	-rm -f ./$(DEPDIR)/rv32BitCLUI01.Po
	-rm -f ./$(DEPDIR)/rv32BitCMV01.Po
	-rm -f ./$(DEPDIR)/rv32BitCOR01.Po
	-rm -f ./$(DEPDIR)/rv32BitCSLLI01.Po
	-rm -f ./$(DEPDIR)/rv32BitCSRAI01.Po
	-rm -f ./$(DEPDIR)/rv32BitCSRLI01.Po
	-rm -f ./$(DEPDIR)/rv32BitCSUB01.Po
	-rm -f ./$(DEPDIR)/rv32BitCXOR01.Po
	-rm -f ./$(DEPDIR)/rv32BitLUI01.Po
	-rm -f ./$(DEPDIR)/rv32BitLW-LH-LHU-LB-LBU01.Po
	-rm -f ./$(DEPDIR)/rv32BitMOV01.Po
	-rm -f ./$(DEPDIR)/rv32BitOR01.Po
	-rm -f ./$(DEPDIR)/rv32BitORI01.Po
	-rm -f ./$(DEPDIR)/rv32BitSLL01.Po
	-rm -f ./$(DEPDIR)/rv32BitSLLI01.Po
	-rm -f ./$(DEPDIR)/rv32BitSLT01.Po
	-rm -f ./$(DEPDIR)/rv32BitSLTI01.Po
	-rm -f ./$(DEPDIR)/rv32BitSLTIU01.Po
	-rm -f ./$(DEPDIR)/rv32BitSLTU01.Po
	-rm -f ./$(DEPDIR)/rv32BitSRA01.Po
	-rm -f ./$(DEPDIR)/rv32BitSRAI01.Po
	-rm -f ./$(DEPDIR)/rv32BitSRL01.Po
	-rm -f ./$(DEPDIR)/rv32BitSRLI01.Po
	-rm -f ./$(DEPDIR)/rv32BitSUB01.Po
	-rm -f ./$(DEPDIR)/rv32BitSW-SH-SB01.Po
	-rm -f ./$(DEPDIR)/rv32BitXOR01.Po
	-rm -f ./$(DEPDIR)/rv32BitXORI01.Po
	-rm -f ./$(DEPDIR)/rv32iOperations1.Po
	-rm -f ./$(DEPDIR)/rv32iOperations2.Po
	-rm -f ./$(DEPDIR)/rv32icOperations1.Po
	-rm -f ./$(DEPDIR)/rv32icOperations2.Po
	-rm -f ./$(DEPDIR)/rv32imOperations1.Po
	-rm -f ./$(DEPDIR)/rv32imOperations2.Po
	-rm -f ./$(DEPDIR)/rv32imcOperations1.Po
	-rm -f ./$(DEPDIR)/rv32imcOperations2.Po
	-rm -f ./$(DEPDIR)/rvConst12Signed1.Po
	-rm -f ./$(DEPDIR)/rvConst12Signed2.Po
	-rm -f ./$(DEPDIR)/rvConst12Signed3.Po
	-rm -f ./$(DEPDIR)/rvConst20Unsigned1.Po
	-rm -f ./$(DEPDIR)/rvConst20Unsigned2.Po
	-rm -f ./$(DEPDIR)/rvConst5Unsigned1.Po
	-rm -f ./$(DEPDIR)/rvConst5Unsigned2.Po
	-rm -f ./$(DEPDIR)/rvConst6Signed1.Po
	-rm -f ./$(DEPDIR)/rvConst6Signed2.Po
	-rm -f ./$(DEPDIR)/rvConst6Signed3.Po
	-rm -f ./$(DEPDIR)/rvConst6Unsigned1.Po
	-rm -f ./$(DEPDIR)/rvConst6Unsigned2.Po
	-rm -f ./$(DEPDIR)/rvConst8Unsigned1.Po
	-rm -f ./$(DEPDIR)/rvConst8Unsigned2.Po
	-rm -f ./$(DEPDIR)/rvPhRegs1.Po
	-rm -f ./$(DEPDIR)/rvReg1.Po
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
		-rm -f ./$(DEPDIR)/rv32BitADD01.Po
	-rm -f ./$(DEPDIR)/rv32BitADDI01.Po
	-rm -f ./$(DEPDIR)/rv32BitAND01.Po
	-rm -f ./$(DEPDIR)/rv32BitANDI01.Po
	-rm -f ./$(DEPDIR)/rv32BitBEQ01.Po
	-rm -f ./$(DEPDIR)/rv32BitBGE01.Po
	-rm -f ./$(DEPDIR)/rv32BitBGEU01.Po
	-rm -f ./$(DEPDIR)/rv32BitBLT01.Po
	-rm -f ./$(DEPDIR)/rv32BitBLTU01.Po
	-rm -f ./$(DEPDIR)/rv32BitBNE01.Po
	-rm -f ./$(DEPDIR)/rv32BitCADD01.Po
	-rm -f ./$(DEPDIR)/rv32BitCADDI01.Po
	-rm -f ./$(DEPDIR)/rv32BitCAND01.Po
	-rm -f ./$(DEPDIR)/rv32BitCANDI01.Po
	-rm -f ./$(DEPDIR)/rv32BitCBEQZ01.Po
	-rm -f ./$(DEPDIR)/rv32BitCBNEZ01.Po
	-rm -f ./$(DEPDIR)/rv32BitCLI01.Po
	-rm -f ./$(DEPDIR)/rv32BitCLUI01.Po
	-rm -f ./$(DEPDIR)/rv32BitCMV01.Po
	-rm -f ./$(DEPDIR)/rv32BitCOR01.Po
	-rm -f ./$(DEPDIR)/rv32BitCSLLI01.Po
	-rm -f ./$(DEPDIR)/rv32BitCSRAI01.Po
	-rm -f ./$(DEPDIR)/rv32BitCSRLI01.Po
	-rm -f ./$(DEPDIR)/rv32BitCSUB01.Po
	-rm -f ./$(DEPDIR)/rv32BitCXOR01.Po
	-rm -f ./$(DEPDIR)/rv32BitLUI01.Po
	-rm -f ./$(DEPDIR)/rv32BitLW-LH-LHU-LB-LBU01.Po
	-rm -f ./$(DEPDIR)/rv32BitMOV01.Po
	-rm -f ./$(DEPDIR)/rv32BitOR01.Po
	-rm -f ./$(DEPDIR)/rv32BitORI01.Po
	-rm -f ./$(DEPDIR)/rv32BitSLL01.Po
	-rm -f ./$(DEPDIR)/rv32BitSLLI01.Po
	-rm -f ./$(DEPDIR)/rv32BitSLT01.Po
	-rm -f ./$(DEPDIR)/rv32BitSLTI01.Po
	-rm -f ./$(DEPDIR)/rv32BitSLTIU01.Po
	-rm -f ./$(DEPDIR)/rv32BitSLTU01.Po
	-rm -f ./$(DEPDIR)/rv32BitSRA01.Po
	-rm -f ./$(DEPDIR)/rv32BitSRAI01.Po
	-rm -f ./$(DEPDIR)/rv32BitSRL01.Po
	-rm -f ./$(DEPDIR)/rv32BitSRLI01.Po
	-rm -f ./$(DEPDIR)/rv32BitSUB01.Po
	-rm -f ./$(DEPDIR)/rv32BitSW-SH-SB01.Po
	-rm -f ./$(DEPDIR)/rv32BitXOR01.Po
	-rm -f ./$(DEPDIR)/rv32BitXORI01.Po
	-rm -f ./$(DEPDIR)/rv32iOperations1.Po
	-rm -f ./$(DEPDIR)/rv32iOperations2.Po
	-rm -f ./$(DEPDIR)/rv32icOperations1.Po
	-rm -f ./$(DEPDIR)/rv32icOperations2.Po
	-rm -f ./$(DEPDIR)/rv32imOperations1.Po
	-rm -f ./$(DEPDIR)/rv32imOperations2.Po
	-rm -f ./$(DEPDIR)/rv32imcOperations1.Po
	-rm -f ./$(DEPDIR)/rv32imcOperations2.Po
	-rm -f ./$(DEPDIR)/rvConst12Signed1.Po
	-rm -f ./$(DEPDIR)/rvConst12Signed2.Po
	-rm -f ./$(DEPDIR)/rvConst12Signed3.Po
	-rm -f ./$(DEPDIR)/rvConst20Unsigned1.Po
	-rm -f ./$(DEPDIR)/rvConst20Unsigned2.Po
	-rm -f ./$(DEPDIR)/rvConst5Unsigned1.Po
	-rm -f ./$(DEPDIR)/rvConst5Unsigned2.Po
	-rm -f ./$(DEPDIR)/rvConst6Signed1.Po
	-rm -f ./$(DEPDIR)/rvConst6Signed2.Po
	-rm -f ./$(DEPDIR)/rvConst6Signed3.Po
	-rm -f ./$(DEPDIR)/rvConst6Unsigned1.Po
	-rm -f ./$(DEPDIR)/rvConst6Unsigned2.Po
	-rm -f ./$(DEPDIR)/rvConst8Unsigned1.Po
	-rm -f ./$(DEPDIR)/rvConst8Unsigned2.Po
	-rm -f ./$(DEPDIR)/rvPhRegs1.Po
	-rm -f ./$(DEPDIR)/rvReg1.Po
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am am--depfiles check check-TESTS \
	check-am clean clean-checkPROGRAMS clean-generic clean-libtool \
	cscopelist-am ctags ctags-am distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	recheck tags tags-am uninstall uninstall-am

.PRECIOUS: Makefile


#
# Specific rules
#

$(check_SCRIPTS): \
	%.sh: %.bin
	@echo "#!"$(BASH) > $@;
	@echo $(builddir)"/$< > /dev/null 2>&1" >> $@;
	@echo "exit ""$$""?" >> $@;
	@$(CHMOD) ugo+x $@

$(check_ASSCRIPTS): \
	%.sh: %.bin
	@echo "#!"$(BASH) > $@;
	@echo 'TMPFILE=/tmp/`basename $$0`.$$$$.log' >> $@;
	@echo $(builddir)"/$< > "'$$TMPFILE' >> $@;
	@echo 'ret=$$?' >> $@;
	@echo 'if [ $$ret != 0 ]; then' >> $@;
	@echo '  rm $$TMPFILE' >> $@;
	@echo '  exit $$ret' >> $@;
	@echo 'fi' >> $@;
	@echo $(RISCVAS)' -march=rv32imc -mabi=ilp32 $$TMPFILE' >> $@;
	@echo 'ret=$$?' >> $@;
	@echo 'rm $$TMPFILE' >> $@;
	@echo 'exit $$ret' >> $@;
	@$(CHMOD) ugo+x $@

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
